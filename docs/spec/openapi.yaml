openapi: 3.0.1
info:
  title: Dayforce API
  version: v1
  x-service-version: 66.1.1.15016
servers:
- url: https://ustest241-services.dayforcehcm.com/Api
paths:
  /{clientNamespace}/v1/GetEmployeeBulkAPI:
    post:
      tags:
      - AmfBulkAPI
      summary: Add new HR Bulk Export details into Job Queue tables.
      operationId: AmfBulkAPI_Post_By_export_isValidateOnly_clientNamespace
      parameters:
      - name: isValidateOnly
        in: query
        description: This parameter used to run a test case without fail
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST. For more information and examples, please\
          \ refer to the Dayforce Web Services RESTful Developer's Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeExportParams'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeExportParams'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeExportParams'
        required: true
      responses:
        "200":
          description: A HR Bulk Export is created with an empty response body
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadString'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadString'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadString'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadString'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadString'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadString'
  /{clientNamespace}/v1/GetEmployeeBulkAPI/Status/{backgroundJobQueueItemId}:
    get:
      tags:
      - AmfBulkAPI
      summary: Get the status of Job Queue tables.
      operationId: AmfBulkAPI_Get_By_backgroundJobQueueItemId_clientNamespace
      parameters:
      - name: backgroundJobQueueItemId
        in: path
        description: To find a status of employee export background job
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: Job Status and Access API URL
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
  /{clientNamespace}/v1/GetEmployeeBulkAPI/Data/{jobId}:
    get:
      tags:
      - AmfBulkAPI
      summary: Get bulk employee of data as a string in json format
      operationId: AmfBulkAPI_Get_By_jobId_clientNamespace
      parameters:
      - name: jobId
        in: path
        description: To get background job processed data for employee export
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: Returns a page of employee data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayloadIEnumerableEmployee'
            text/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayloadIEnumerableEmployee'
            text/html:
              schema:
                $ref: '#/components/schemas/PaginatedPayloadIEnumerableEmployee'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
  /{clientNamespace}/V1/Analytics/Reports:
    get:
      tags:
      - AnalyticsReports
      summary: Get Reports
      description: "<h3>Description</h3>\r\n<p>The Get reports request allows the\
        \ consuming application to retrieve a list of available reports.</p>"
      operationId: AnalyticsReports_GetReports_By_clientNamespace
      parameters:
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: A collection of Reports
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableAnalyticsReportDefinitions'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableAnalyticsReportDefinitions'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableAnalyticsReportDefinitions'
        "204":
          description: No reports available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableObject'
              example: ""
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableObject'
        "400":
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
  /{clientNamespace}/V1/Analytics/Datasets/{datasetId}:
    get:
      tags:
      - AnalyticsReports
      summary: Get Dataset
      description: "<h3>Description</h3>\r\n<p>The Get Dataset request allows the\
        \ consuming application to retrieve the contents of a report's Dataset.</p>\r\
        \n<p>Optional PGP Encryption : Please add <b>PGPKey</b> to the header to enable\
        \ public encryption key for secure communication.</p>"
      operationId: AnalyticsReports_GetDatasetAsync_By_datasetId_page_DatasetPageSize_clientNamespace
      parameters:
      - name: datasetId
        in: path
        description: Uniquely identifies a dataset
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: page
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: DatasetPageSize
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
        x-ballerina-name: datasetPageSize
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: Contents of a dataset
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadAnalyticsReportDataset'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadAnalyticsReportDataset'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadAnalyticsReportDataset'
        "204":
          description: The dataset is not available or empty
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadAnalyticsReportDataset'
              example: ""
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadAnalyticsReportDataset'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadAnalyticsReportDataset'
        "400":
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
    post:
      tags:
      - AnalyticsReports
      summary: Refresh Dataset
      description: "<h3>Description</h3>\r\n<p>The Refresh Dataset request allows\
        \ the consuming application to refresh the contents of a report's Dataset.</p>"
      operationId: AnalyticsReports_RefreshDatasetAsync_By_reqBody_datasetId_isValidateOnly_clientNamespace
      parameters:
      - name: datasetId
        in: path
        description: Uniquely identifies a dataset
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: This parameter is applied here for testing purposes. Please remember
          to remove it when utilizing this endpoint to actually refresh the dataset
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnalyticsReportMetadata'
          text/json:
            schema:
              $ref: '#/components/schemas/AnalyticsReportMetadata'
          text/html:
            schema:
              $ref: '#/components/schemas/AnalyticsReportMetadata'
        required: true
      responses:
        "200":
          description: Status of a dataset refresh and its metadata
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadAnalyticsDatasetMetadataResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadAnalyticsDatasetMetadataResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadAnalyticsDatasetMetadataResponse'
        "204":
          description: The dataset has no content and is not available for a refresh
          content:
            application/json:
              example: ""
            text/json: {}
            text/html: {}
        "400":
          description: The guid provided is not a valid guid.
          content:
            application/json:
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json: {}
            text/html: {}
        "422":
          description: "We were unable to refresh this dataset, but the original dataset\
            \ is still available."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadAnalyticsDatasetMetadataResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadAnalyticsDatasetMetadataResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadAnalyticsDatasetMetadataResponse'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
  /{clientNamespace}/V1/Analytics/Reports/{reportId}:
    post:
      tags:
      - AnalyticsReports
      summary: Create Dataset
      description: "<h3>Description</h3>\r\n<p>The Create Dataset request allows the\
        \ consuming application to trigger the creation of a dataset for the ad hoc\
        \ report specified in this call.</p>"
      operationId: AnalyticsReports_CreateReportAsync_By_reqBody_reportId_isValidateOnly_clientNamespace
      parameters:
      - name: reportId
        in: path
        description: Uniquely identifies a report
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: isValidateOnly
        in: query
        description: This parameter is applied here for testing purposes. Please remember
          to remove it when utilizing this endpoint to actually post the report
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnalyticsReportMetadata'
          text/json:
            schema:
              $ref: '#/components/schemas/AnalyticsReportMetadata'
          text/html:
            schema:
              $ref: '#/components/schemas/AnalyticsReportMetadata'
        required: true
      responses:
        "200":
          description: Metadata of a dataset
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadAnalyticsDatasetMetadata'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadAnalyticsDatasetMetadata'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadAnalyticsDatasetMetadata'
        "204":
          description: No report available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example: ""
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "400":
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
  /{clientNamespace}/V1/Analytics/Datasets/{datasetId}/Metadata:
    get:
      tags:
      - AnalyticsReports
      summary: Get Dataset Metadata
      description: "<h3>Description</h3>\r\n<p>The Get Dataset Metadata request allows\
        \ the consuming application to retrieve the metadata (status and row) related\
        \ to the report's dataset.</p>\r\n<p>\r\n                Note: “Refresh Status”\
        \ is not displayed when the dataset has not been refreshed or during “Processing”\
        \ or “Requested” statuses <br />\r\n                Note: “Row count” is not\
        \ displayed during “Requested” status <br />\r\n                Note: “Filters”\
        \ and “Parameters” are not displayed during “Processing” or “Requested” statuses\
        \ <br /></p>"
      operationId: AnalyticsReports_GetDatasetMetadataAsync_By_datasetId_clientNamespace
      parameters:
      - name: datasetId
        in: path
        description: Uniquely identifies a dataset
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: Metadata of a dataset
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadAnalyticsDatasetMetadata'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadAnalyticsDatasetMetadata'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadAnalyticsDatasetMetadata'
        "204":
          description: The metadata is not available or empty
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example: ""
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "400":
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
  /{clientNamespace}/V1/Analytics/Reports/{reportId}/Metadata:
    get:
      tags:
      - AnalyticsReports
      summary: Get Report Metadata
      description: "<h3>Description</h3>\r\n<p>The Get Report Metadata request allows\
        \ the consuming application to retrieve the metadata (fields, filters, etc.)\
        \ of a report.</p>"
      operationId: AnalyticsReports_GetReportMetadata_By_reportId_clientNamespace
      parameters:
      - name: reportId
        in: path
        description: Uniquely identifies a report
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: Metadata of the report
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableAnalyticsReportMetadata'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableAnalyticsReportMetadata'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableAnalyticsReportMetadata'
        "204":
          description: No metadata available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadAnalyticsReportMetadata'
              example: ""
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadAnalyticsReportMetadata'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadAnalyticsReportMetadata'
        "400":
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
  /{clientNamespace}/V1/Employees/{xRefCode}/SSOAccounts:
    get:
      tags:
      - AppUserSSO
      summary: GET AppUserSSO Details
      operationId: AppUserSSO_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ whose data will be retrieved.  The value provided must be the exact match\
          \ for an employee; otherwise, a bad request (400) error will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: contextDate
        in: query
        description: "The Context Date value is an “as-of” date used to determine\
          \ which employee data to search when records have specific start and end\
          \ dates.  The service defaults to the current datetime if the requester\
          \ does not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: contextDateRangeFrom
        in: query
        description: "The Context Date Range From value is the start of the range\
          \ of dates used to determine which employee data to search when records\
          \ have specific start and end dates.  The service defaults to null if the\
          \ requester does not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: contextDateRangeTo
        in: query
        description: "The Context Date Range To value is the end of the range of dates\
          \ to determine which employee data to search when records have specific\
          \ start and end dates.  The service defaults to null if the requester does\
          \ not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: The AppUserSSO with the requested XRefCode
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeSSOAccount'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeSSOAccount'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeSSOAccount'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
      - AppUserSSO
      summary: POST a AppUserSSO
      operationId: AppUserSSO_Post_By_ssoInfo_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be updated.  The value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST and PATCH operations.  For more information\
          \ and examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeSSOAccount'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeSSOAccount'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeSSOAccount'
        required: true
      responses:
        "200":
          description: "An Employee is created, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
      - AppUserSSO
      summary: PATCH a AppUserSSO
      operationId: AppUserSSO_Patch_By_ssoInfo_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be updated.  The value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST and PATCH operations.  For more information\
          \ and examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeSSOAccount'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeSSOAccount'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeSSOAccount'
        required: true
      responses:
        "200":
          description: "The AppUserSSO is updated, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{employeeXRefCode}/SSOAccounts/{loginName}:
    delete:
      tags:
      - AppUserSSO
      summary: "Delete an SSOAccount entry that has matching {loginName}"
      operationId: AppUserSSO_Delete_By_employeeXRefCode_loginName_isValidateOnly_clientNamespace
      parameters:
      - name: employeeXRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be deleted.\r\nThe value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: loginName
        in: path
        description: The loginName of the SSOAccount to be deleted from this Employee
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, this operation\
          \ is validated without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: An SSO Account is deleted for this Employee
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadSubordinateEntityReferences'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadSubordinateEntityReferences'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadSubordinateEntityReferences'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/Availability:
    get:
      tags:
      - Employees
      summary: GET List of Employee Availability
      operationId: Availability_Get_By_xRefCode_filterAvailabilityStartDate_filterAvailabilityEndDate_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ to be retrieved.  The value provided must be the exact match for an employee;\
          \ otherwise, a bad request (400) error will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: filterAvailabilityStartDate
        in: query
        description: "Inclusive period start date to determine which employee availability\
          \ data to retrieve . Example: 2017-01-01T00:00:00"
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: filterAvailabilityEndDate
        in: query
        description: "Inclusive period end date to determine which employee availability\
          \ data to retrieve . Example: 2017-01-01T00:00:00"
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: A collection of employee availability meeting the search criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeAvailability'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeAvailability'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeAvailability'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
  /{clientNamespace}/V1/{employeeXRefCode}/EmployeeAvailability:
    post:
      tags:
      - Availability
      summary: Post Employee Availablity
      operationId: Availability_Post_By_employeeXRefCode_employeeAvailability_isValidateOnly_clientNamespace
      parameters:
      - name: employeeXRefCode
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST operation\
          \ validates the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeAvailabilityPostAPIRequestDTO'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeAvailabilityPostAPIRequestDTO'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeAvailabilityPostAPIRequestDTO'
        required: true
      responses:
        "200":
          description: OK response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableProcessResult'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableProcessResult'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableProcessResult'
        "400":
          description: Request is malformed or has validation errors.  Correct and
            resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
  /{clientNamespace}/V1/BackgroundJobLogs:
    get:
      tags:
      - BackgroundJobLogs
      summary: GET List of Background Job Logs
      operationId: BackgroundJobLog_Get_By_pageSize_codeName_status_hasItemLevelErrors_queueTimeUtcStart_queueTimeUtcEnd_wasScheduled_submittedBy_filterUpdateTimeUtcStart_filterUpdateTimeUtcEnd_includeSuppressedTaskTypes_clientNamespace
      parameters:
      - name: pageSize
        in: query
        description: "Use to specify the number of records returned per page in the\
          \ paginated response. This value will be constrained to be between 1 and\
          \ 10,000 (default is 1,000)"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: codeName
        in: query
        description: "Use to search for background job logs using a comma separated\
          \ list of code names. If omitted, all job code names are included"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: status
        in: query
        description: "Use to search for background job logs by job status. If omitted,\
          \ all job statuses are included. Accepted values: Queued, In Progress, Paused,\
          \ Completed, Cancelled, Error"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: hasItemLevelErrors
        in: query
        description: "Use to search for background job logs with item-level errors.\
          \ If omitted, both logs with and without item level errors are included.\
          \ Accepted values: True, False"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: queueTimeUtcStart
        in: query
        description: "The beginning date/time used when searching for logs that were\
          \ queued in a specified time frame. When a value is provided for this parameter,\
          \ a queueTimeUtcEnd value must also be provided.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: queueTimeUtcEnd
        in: query
        description: "The ending date/time used when searching for logs that were\
          \ queued in a specified time frame. When a value is provided for this parameter,\
          \ a queueTimeUtcStart value must also be provided.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: wasScheduled
        in: query
        description: "Use to search for background job logs that were scheduled or\
          \ ran on-demand. If omitted, logs for both scheduled and on-demand background\
          \ jobs are included.  Accepted values: True, False"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: submittedBy
        in: query
        description: "Use to search for background job logs that were manually submitted\
          \ by a specified user. If omitted, all job submitters including the System\
          \ are included"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: filterUpdateTimeUtcStart
        in: query
        description: "The beginning date/time used when searching for background job\
          \ logs with updates in a specified time frame. When a value is provided\
          \ for this parameter, a filterUpdateTimeUtcEnd value must also be provided.\
          \  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: filterUpdateTimeUtcEnd
        in: query
        description: "The ending date/time used when searching for background job\
          \ logs with updates in a specified time frame. When a value is provided\
          \ for this parameter, a filterUpdateTimeUtcStart value must also be provided.\
          \  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: includeSuppressedTaskTypes
        in: query
        description: "Used to specify whether commonly suppressed background jobs\
          \ should be included in the filtered results.  Accepted values: True, False.\
          \  Defaults to False"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: "A collection of background job logs meeting the search criteria.\
            \ Parameters, JobInformation, ErrorInformation, DebugInformation and FileList\
            \ fields are not retrieved with this call"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayloadIEnumerableBackgroundJobLog'
            text/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayloadIEnumerableBackgroundJobLog'
            text/html:
              schema:
                $ref: '#/components/schemas/PaginatedPayloadIEnumerableBackgroundJobLog'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "403":
          description: User does not have access.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
  /{clientNamespace}/V1/BackgroundJobLogs/{backgroundJobLogId}:
    get:
      tags:
      - BackgroundJobLogs
      summary: GET Details of a Background Job Log based on backgroundLogId
      operationId: BackgroundJobLog_Get_By_backgroundJobLogId_clientNamespace
      parameters:
      - name: backgroundJobLogId
        in: path
        description: The identifier of the background job log to retrieve further
          information
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: A background job log that meets the search criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadBackgroundJobLog'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadBackgroundJobLog'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadBackgroundJobLog'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "403":
          description: User does not have access.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
  /{clientNamespace}/V1/BackgroundScreening/Status:
    patch:
      tags:
      - BackgroundScreening
      summary: PATCH (Update) a Background Screening Status for a specific candidate.
      operationId: BackgroundScreening_PatchStatus_By_backgroundScreeningStatus_isValidateOnly_clientNamespace
      parameters:
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: The Json payload containing an event and the new status
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BackgroundScreeningStatus'
          text/json:
            schema:
              $ref: '#/components/schemas/BackgroundScreeningStatus'
          text/html:
            schema:
              $ref: '#/components/schemas/BackgroundScreeningStatus'
        required: true
      responses:
        "200":
          description: "The Background Screening request is updated, no response body"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundScreeningStatus'
            text/json:
              schema:
                $ref: '#/components/schemas/BackgroundScreeningStatus'
            text/html:
              schema:
                $ref: '#/components/schemas/BackgroundScreeningStatus'
        "400":
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json: {}
            text/html: {}
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json: {}
            text/html: {}
  /{clientNamespace}/V1/BackgroundScreening/AdjudicationStatus:
    patch:
      tags:
      - BackgroundScreening
      summary: PATCH (Update) a Background Screening Adjudication Status for a specific
        candidate.
      operationId: BackgroundScreening_PatchAdjudicationStatus_By_backgroundScreeningAdjudicationStatus_isValidateOnly_clientNamespace
      parameters:
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: The Json payload containing an event and the new adjudication
          status
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BackgroundScreeningAdjudicationStatus'
          text/json:
            schema:
              $ref: '#/components/schemas/BackgroundScreeningAdjudicationStatus'
          text/html:
            schema:
              $ref: '#/components/schemas/BackgroundScreeningAdjudicationStatus'
        required: true
      responses:
        "200":
          description: "The Background Screening request is updated, no response body"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundScreeningAdjudicationStatus'
            text/json:
              schema:
                $ref: '#/components/schemas/BackgroundScreeningAdjudicationStatus'
            text/html:
              schema:
                $ref: '#/components/schemas/BackgroundScreeningAdjudicationStatus'
        "400":
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json: {}
            text/html: {}
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json: {}
            text/html: {}
  /{clientNamespace}/V1/BackgroundScreening/Package:
    post:
      tags:
      - BackgroundScreening
      summary: POST Background Screening Packages.
      operationId: BackgroundScreening_PostPackage_By_backgroundScreeningPackage_isValidateOnly_clientNamespace
      parameters:
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BackgroundScreeningPackage'
          text/json:
            schema:
              $ref: '#/components/schemas/BackgroundScreeningPackage'
          text/html:
            schema:
              $ref: '#/components/schemas/BackgroundScreeningPackage'
        required: true
      responses:
        "200":
          description: "The Background Screening Packages are added, no response body"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BackgroundScreeningPackage'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BackgroundScreeningPackage'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BackgroundScreeningPackage'
        "400":
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json: {}
            text/html: {}
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json: {}
            text/html: {}
  /{clientNamespace}/V1/BackgroundScreening/BillingCode:
    post:
      tags:
      - BackgroundScreening
      summary: POST Background Screening Billing Codes.
      operationId: BackgroundScreening_PostBillingCode_By_backgroundScreeningBillingCode_isValidateOnly_clientNamespace
      parameters:
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BackgroundScreeningBillingCode'
          text/json:
            schema:
              $ref: '#/components/schemas/BackgroundScreeningBillingCode'
          text/html:
            schema:
              $ref: '#/components/schemas/BackgroundScreeningBillingCode'
        required: true
      responses:
        "200":
          description: "The Background Screening Billing Codes are added, no response\
            \ body"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BackgroundScreeningBillingCode'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BackgroundScreeningBillingCode'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BackgroundScreeningBillingCode'
        "400":
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json: {}
            text/html: {}
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json: {}
            text/html: {}
  /{clientNamespace}/V1/BackgroundScreening/ProviderStatuses:
    post:
      tags:
      - BackgroundScreening
      summary: POST Background Screening Provider Statuses.
      operationId: BackgroundScreening_PostScreeningStatuses_By_statusList_isValidateOnly_clientNamespace
      parameters:
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BackgroundScreeningProviderStatuses'
          text/json:
            schema:
              $ref: '#/components/schemas/BackgroundScreeningProviderStatuses'
          text/html:
            schema:
              $ref: '#/components/schemas/BackgroundScreeningProviderStatuses'
        required: true
      responses:
        "200":
          description: "Custom Provider Statuses are added, no response body"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundScreeningProviderStatuses'
            text/json:
              schema:
                $ref: '#/components/schemas/BackgroundScreeningProviderStatuses'
            text/html:
              schema:
                $ref: '#/components/schemas/BackgroundScreeningProviderStatuses'
        "400":
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json: {}
            text/html: {}
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json: {}
            text/html: {}
  /{clientNamespace}/V1/BackgroundScreening:
    patch:
      tags:
      - BackgroundScreening
      summary: "PATCH Background Screening Status, URL and Report containing PII"
      operationId: BackgroundScreening_Patch_By_backgroundScreeningStatusUrlReport_isValidateOnly_clientNamespace
      parameters:
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The Json payload containing Status, Url and Report containing\
          \ PII"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BackgroundScreeningStatusUrlReport'
          text/json:
            schema:
              $ref: '#/components/schemas/BackgroundScreeningStatusUrlReport'
          text/html:
            schema:
              $ref: '#/components/schemas/BackgroundScreeningStatusUrlReport'
        required: true
      responses:
        "200":
          description: "The Background Screening Status, Url and Report containing\
            \ PII are added, no response body"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BackgroundScreeningStatusUrlReport'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BackgroundScreeningStatusUrlReport'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BackgroundScreeningStatusUrlReport'
        "400":
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json: {}
            text/html: {}
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json: {}
            text/html: {}
  /{clientNamespace}/V1/BackgroundScreening/PersonalIdentifiableInformation:
    patch:
      tags:
      - BackgroundScreening
      summary: PATCH Background Screening Report containing Personal Identifiable
        Informations
      operationId: BackgroundScreening_PatchPII_By_backgroundScreeningReport_isValidateOnly_clientNamespace
      parameters:
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: The Json payload with a Report containing Personal Identifiable
          Informations
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BackgroundScreeningReport'
          text/json:
            schema:
              $ref: '#/components/schemas/BackgroundScreeningReport'
          text/html:
            schema:
              $ref: '#/components/schemas/BackgroundScreeningReport'
        required: true
      responses:
        "200":
          description: "The Background Screening Report containing Personal Identifiable\
            \ Informations are added, no response body"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BackgroundScreeningReport'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BackgroundScreeningReport'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BackgroundScreeningReport'
        "400":
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json: {}
            text/html: {}
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json: {}
            text/html: {}
  /{clientNamespace}/V1/BenefitsCarrierFeedOngoingExports:
    get:
      tags:
      - BenefitsDFLinkExports
      summary: GET Benefits ongoing carrier feed export in JSON format
      operationId: BenefitsDFLinkExports_GetBenefitsDFLinkOngoingExport_By_carrierXRefCode_planStartDate_planEndDate_payrollEarningAccumulationXRefCodes_blackoutPeriodStartDate_lookBackDays_lookForwardDays_clientNamespace
      parameters:
      - name: carrierXRefCode
        in: query
        description: A reference code that maps to a given carrier
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: planStartDate
        in: query
        description: The plan start date
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: planEndDate
        in: query
        description: The plan end date
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: payrollEarningAccumulationXRefCodes
        in: query
        description: "A comma delimited list of reference codes, mapping to a list\
          \ of individual payroll earning accumulations"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: blackoutPeriodStartDate
        in: query
        description: "If applicable, the blackout period start date"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: lookBackDays
        in: query
        description: The number of days the export will look back from execution date
          to find employee elections
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: lookForwardDays
        in: query
        description: The number of days the export will look forward from execution
          date to find employee elections
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: The CarrierFeeds model in json format
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadCarrierFeeds'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadCarrierFeeds'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadCarrierFeeds'
        "400":
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
  /{clientNamespace}/V1/BenefitsCarrierFeedOpenEnrollmentExports:
    get:
      tags:
      - BenefitsDFLinkExports
      summary: GET Benefits open enrollment carrier feed export in JSON format
      operationId: BenefitsDFLinkExports_GetBenefitsDFLinkOpenEnrollmentExport_By_carrierXRefCode_planStartDate_planEndDate_payrollEarningAccumulationXRefCodes_clientNamespace
      parameters:
      - name: carrierXRefCode
        in: query
        description: A reference code that maps to a given carrier
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: planStartDate
        in: query
        description: The plan start date
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: planEndDate
        in: query
        description: The plan end date
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: payrollEarningAccumulationXRefCodes
        in: query
        description: "A comma delimited list of reference codes, mapping to a list\
          \ of individual payroll earning accumulations"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: The CarrierFeeds model in json format
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadCarrierFeeds'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadCarrierFeeds'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadCarrierFeeds'
        "400":
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
  /{clientNamespace}/V1/BenefitsCarrierFeedMultiCarrierOngoingExports:
    get:
      tags:
      - BenefitsDFLinkMultiCarrierExports
      summary: GET Benefits multi carrier ongoing carrier feed export in JSON format
      operationId: BenefitsDFLinkMultiCarrierExports_GetBenefitsDFLinkMultiCarrierOngoingExport_By_carrierXRefCodes_planStartDate_planEndDate_payrollEarningAccumulationXRefCodes_blackoutPeriodStartDate_lookBackDays_lookForwardDays_clientNamespace
      parameters:
      - name: carrierXRefCodes
        in: query
        description: "A comma delimited list of reference codes, mapping to a list\
          \ of individual carriers"
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: planStartDate
        in: query
        description: The plan start date
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: planEndDate
        in: query
        description: The plan end date
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: payrollEarningAccumulationXRefCodes
        in: query
        description: "A comma delimited list of reference codes, mapping to a list\
          \ of individual payroll earning accumulations"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: blackoutPeriodStartDate
        in: query
        description: "If applicable, the blackout period start date"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: lookBackDays
        in: query
        description: The number of days the export will look back from execution date
          to find employee elections
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: lookForwardDays
        in: query
        description: The number of days the export will look forward from execution
          date to find employee elections
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: The CarrierFeeds model in json format
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadCarrierFeeds'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadCarrierFeeds'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadCarrierFeeds'
        "400":
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
  /{clientNamespace}/V1/BenefitsCarrierFeedMultiCarrierOpenEnrollmentExports:
    get:
      tags:
      - BenefitsDFLinkMultiCarrierExports
      summary: GET Benefits multi carrier open enrollment carrier feed export in JSON
        format
      operationId: BenefitsDFLinkMultiCarrierExports_GetBenefitsDFLinkMultiCarrierOpenEnrollmentExport_By_carrierXRefCodes_planStartDate_planEndDate_payrollEarningAccumulationXRefCodes_clientNamespace
      parameters:
      - name: carrierXRefCodes
        in: query
        description: "A comma delimited list of reference codes, mapping to a list\
          \ of individual carriers"
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: planStartDate
        in: query
        description: The plan start date
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: planEndDate
        in: query
        description: The plan end date
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: payrollEarningAccumulationXRefCodes
        in: query
        description: "A comma delimited list of reference codes, mapping to a list\
          \ of individual payroll earning accumulations"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: The CarrierFeeds model in json format
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadCarrierFeeds'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadCarrierFeeds'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadCarrierFeeds'
        "400":
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
  /{clientNamespace}/V1/CandidateSourcing:
    post:
      tags:
      - CandidateSourcing
      summary: POST a Candidate Application and/or a Candidate Profile
      operationId: CandidateSourcing_Post_By_model_isValidateOnly_clientNamespace
      parameters:
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, this will validate\
          \ the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: The Json payload containing candidate and application details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobPostingApplicantModel'
          text/json:
            schema:
              $ref: '#/components/schemas/JobPostingApplicantModel'
          text/html:
            schema:
              $ref: '#/components/schemas/JobPostingApplicantModel'
        required: true
      responses:
        "200":
          description: Candidate profile/application have been accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
            text/json:
              schema:
                $ref: '#/components/schemas/Response'
            text/html:
              schema:
                $ref: '#/components/schemas/Response'
        "400":
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json: {}
            text/html: {}
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json: {}
            text/html: {}
  /{clientNamespace}/V1/JobPostingQuestionnaires:
    get:
      tags:
      - CandidateSourcing
      summary: GET Job Posting Questionnaires
      operationId: CandidateSourcing_Get_By_jobPostingId_cultureId_clientNamespace
      parameters:
      - name: jobPostingId
        in: query
        description: The job posting id
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: cultureId
        in: query
        description: The culture id to determine the language screening questions
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: A collection of questionnaires for a particular job posting.
            Each questionnaire section is separated by a page break object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableQuestionModel'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableQuestionModel'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableQuestionModel'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json: {}
            text/html: {}
  /{clientNamespace}/V1/CandidateApplicationStatuses:
    get:
      tags:
      - CandidateSourcing
      summary: GET Candidate Application Statuses
      operationId: CandidateSourcing_Get_By_clientNamespace
      parameters:
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: "A collection of candidate application statuses for all job\
            \ applications sent by the provider calling this endpoint. Once the latest\
            \ unsent application statuses are provided via this endpoint, no further\
            \ data will be provided on subsequent calls unless further application\
            \ status updates have been made. This endpoint will return application\
            \ statuses in tranches of up to 1000 statuses per call and will continue\
            \ to do so for subsequent calls until all unsent statuses have been provided"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadCandidateApplicationStatusUpdatesPaginationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadCandidateApplicationStatusUpdatesPaginationModel'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadCandidateApplicationStatusUpdatesPaginationModel'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json: {}
            text/html: {}
  /{clientNamespace}/V1/JobPostings:
    get:
      tags:
      - CandidateSourcing
      summary: GET Job Postings
      operationId: CandidateSourcing_Get_By_companyName_parentCompanyName_internalJobBoardCode_includeActivePostingOnly_lastUpdateTimeFrom_lastUpdateTimeTo_datePostedFrom_datePostedTo_htmlDescription_clientNamespace
      parameters:
      - name: companyName
        in: query
        description: "Company name. Example: XYZ Co"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: parentCompanyName
        in: query
        description: "Parent Company name. Example: Ceridian"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: internalJobBoardCode
        in: query
        description: "XRefCode of Job Board. Example: CANDIDATEPORTAL"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: includeActivePostingOnly
        in: query
        description: "If true, then exclude inactive postings from the result. If\
          \ False, then the 'Last Update Time From' and 'Last Update Time To' parameters\
          \ are required and the range specified between the 'Last Update Time From'\
          \ and 'Last Update Time To' parameters must not be larger than 1 month.\
          \ Example: True"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: lastUpdateTimeFrom
        in: query
        description: "A starting timestamp of last updated job posting. Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: lastUpdateTimeTo
        in: query
        description: "An ending timestamp of last updated job posting. Example: 2017-02-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: datePostedFrom
        in: query
        description: "A starting timestamp of job posting date. Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: datePostedTo
        in: query
        description: "An ending timestamp of job posting date. Example: 2017-02-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: htmlDescription
        in: query
        description: A flag to feed the jobs over with html formatting or plain text
          description
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: A collection of all active external job postings (i.e. public
            facing job postings) based on specified filter parameters. Each job posting
            included in the response also includes URLs for Candidate Sourcing and
            Apply endpoints. Users with access to the Candidate Sourcing and Apply
            feature should use this endpoint for obtaining job postings rather than
            GET JobFeeds
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableJobFeed'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableJobFeed'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableJobFeed'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json: {}
            text/html: {}
  /{clientNamespace}/V1/Certifications:
    get:
      tags:
      - Certification
      summary: GET the list of all certifications
      operationId: Certification_Get_By_pageSize_xRefCode_clientNamespace
      parameters:
      - name: pageSize
        in: query
        description: The page size for the pagination (Default is 1000)
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: xRefCode
        in: query
        description: The xrefcode filter for the certifications
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: A collection of certifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayloadIEnumerableLMSCertification'
            text/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayloadIEnumerableLMSCertification'
            text/html:
              schema:
                $ref: '#/components/schemas/PaginatedPayloadIEnumerableLMSCertification'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
      - Certification
      summary: POST one certification
      operationId: Certification_Post_By_certification_isValidateOnly_clientNamespace
      parameters:
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST operation\
          \ validate the request without applying the changes to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: The certification payload that will be used for certification
          creation
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LMSCertification'
          text/json:
            schema:
              $ref: '#/components/schemas/LMSCertification'
          text/html:
            schema:
              $ref: '#/components/schemas/LMSCertification'
        required: true
      responses:
        "200":
          description: "A certification is created, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
      - Certification
      summary: PATCH one certification
      operationId: Certification_Patch_By_certification_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST operation\
          \ validate the request without applying the changes to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: The certification payload that will be used for certification
          modification
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LMSCertification'
          text/json:
            schema:
              $ref: '#/components/schemas/LMSCertification'
          text/html:
            schema:
              $ref: '#/components/schemas/LMSCertification'
        required: true
      responses:
        "200":
          description: "A certification is updated, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/ClientMetadata:
    get:
      tags:
      - ClientMetadata
      summary: GET Client Metadata
      operationId: ClientMetadata_GetAsync_By_clientNamespace
      parameters:
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: Returns client metadata
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientMetadata'
            text/json:
              schema:
                $ref: '#/components/schemas/ClientMetadata'
            text/html:
              schema:
                $ref: '#/components/schemas/ClientMetadata'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
  /{clientNamespace}/V1/ClientPayrollCountry:
    get:
      tags:
      - ClientPayrollCountry
      summary: GET client payroll countries.
      operationId: ClientPayrollCountry_Get_By_countryCodes_hcmPayroll_connectedPay_payGroup_clientNamespace
      parameters:
      - name: countryCodes
        in: query
        description: Comma separated list of country codes to filter the results
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: hcmPayroll
        in: query
        description: Flag to filter countries for HCM Payroll
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: connectedPay
        in: query
        description: Flag to filter countries for Connected Pay
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: payGroup
        in: query
        description: Flag to filter countries having pay group(s)
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: Client Payroll Countries
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadClientPayrollCountry'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadClientPayrollCountry'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadClientPayrollCountry'
        "400":
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
      - ClientPayrollCountry
      summary: POST Client Payroll Country.
      operationId: ClientPayrollCountry_Post_By_clientPayrollCountries_isValidateOnly_clientNamespace
      parameters:
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying the updates to the database.\
          \  The default value is FALSE if parameter is not specified"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST and PATCH operations. For more information\
          \ and examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ClientPayrollCountryUpdate'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ClientPayrollCountryUpdate'
          text/html:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ClientPayrollCountryUpdate'
        required: true
      responses:
        "200":
          description: "The ClientPayrollCountry has been added successfully, no response\
            \ body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
      - ClientPayrollCountry
      summary: PATCH Client Payroll Country.
      operationId: ClientPayrollCountry_Patch_By_clientPayrollCountryUpdate_isValidateOnly_clientNamespace
      parameters:
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying the updates to the database.\
          \  The default value is FALSE if parameter is not specified"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST and PATCH operations. For more information\
          \ and examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ClientPayrollCountryUpdate'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ClientPayrollCountryUpdate'
          text/html:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ClientPayrollCountryUpdate'
        required: true
      responses:
        "200":
          description: "ClientPayrollCountry has been updated successfully, no response\
            \ body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/ContactInformationTypes:
    get:
      tags:
      - ContactInformationTypes
      summary: GET a List of ContactInformationTypes
      operationId: ContactInformationTypes_Get_By_clientNamespace
      parameters:
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: A collection of ContactInformationType XRefCodes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableContactInformationType'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableContactInformationType'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableContactInformationType'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/ContactInformationTypes/{xrefCode}:
    get:
      tags:
      - ContactInformationTypes
      summary: GET a ContactInformationType with the requested XRefCode.
      operationId: ContactInformationTypes_Get_By_xrefCode_clientNamespace
      parameters:
      - name: xrefCode
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: The ContactInformationType with the requested XRefCode
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadContactInformationType'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadContactInformationType'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadContactInformationType'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Courses:
    get:
      tags:
      - Courses
      summary: GET the list of all courses
      operationId: Courses_Get_By_pageSize_courseType_courseProvider_xRefCode_clientNamespace
      parameters:
      - name: pageSize
        in: query
        description: The page size for the pagination (Default is 1000)
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: courseType
        in: query
        description: The course type filter for the courses
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: courseProvider
        in: query
        description: The course provider filter for the courses
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: xRefCode
        in: query
        description: The xrefcode filter for the courses
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: A collection of courses
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayloadIEnumerableCourse'
            text/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayloadIEnumerableCourse'
            text/html:
              schema:
                $ref: '#/components/schemas/PaginatedPayloadIEnumerableCourse'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
      - Courses
      summary: POST one course
      operationId: Courses_Post_By_course_isValidateOnly_clientNamespace
      parameters:
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST operation\
          \ validate the request without applying the changes to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: The course payload that will be used for course creation
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Course'
          text/json:
            schema:
              $ref: '#/components/schemas/Course'
          text/html:
            schema:
              $ref: '#/components/schemas/Course'
        required: true
      responses:
        "200":
          description: "A course is created, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
      - Courses
      summary: PATCH one course
      operationId: Courses_Patch_By_course_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: query
        description: The course payload that will be used for course creation
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST operation\
          \ validate the request without applying the changes to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: The course payload that will be used for course creation
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Course'
          text/json:
            schema:
              $ref: '#/components/schemas/Course'
          text/html:
            schema:
              $ref: '#/components/schemas/Course'
        required: true
      responses:
        "200":
          description: "A course is updated, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Payroll/DataEntry/{payGroupXRefCode}/{entryType}:
    get:
      tags:
      - DataEntry
      summary: GET List of Data Entries.
      operationId: DataEntry_Get_By_payGroupXRefCode_entryType_periodStartDate_periodEndDate_payDate_ppn_orgUnitXRefCode_codeType_codeXRefCode_employeeXRefCode_projectXRefCodes_sinceLastModifiedTimestamp_source_pageSize_clientNamespace
      parameters:
      - name: payGroupXRefCode
        in: path
        description: The pay group reference code
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: entryType
        in: path
        description: The type of the data entry
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: periodStartDate
        in: query
        description: The pay run period start date
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: periodEndDate
        in: query
        description: The pay run period end date
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: payDate
        in: query
        description: The pay run pay date
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: ppn
        in: query
        description: "The pay run's pay period number (format: ##-##)"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: orgUnitXRefCode
        in: query
        description: The user org unit reference code to load data entries from (in
          org unit hierarchy)
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: codeType
        in: query
        description: The type of the data entry codes
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: codeXRefCode
        in: query
        description: The data entry code reference code
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: employeeXRefCode
        in: query
        description: The employee reference code
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: projectXRefCodes
        in: query
        description: The comma separated project reference codes
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: sinceLastModifiedTimestamp
        in: query
        description: Last modified timestamp to load entries since
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: source
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: Number of records to be loaded
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: Payroll data entries
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayloadIEnumerableDataEntry'
            text/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayloadIEnumerableDataEntry'
            text/html:
              schema:
                $ref: '#/components/schemas/PaginatedPayloadIEnumerableDataEntry'
        "204":
          description: No data entries available.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayloadIEnumerableDataEntry'
            text/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayloadIEnumerableDataEntry'
            text/html:
              schema:
                $ref: '#/components/schemas/PaginatedPayloadIEnumerableDataEntry'
        "400":
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
  /{clientNamespace}/V1/DataPrivacy/PersonManagementHistory:
    get:
      tags:
      - DataPrivacy
      summary: Get a list of Person Management History
      operationId: DataPrivacy_PersonManagementHistory_By_pageSize_policy_personType_contextDateRangeFrom_contextDateRangeTo_clientNamespace
      parameters:
      - name: pageSize
        in: query
        description: The number of records returned per page in the paginated response
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: policy
        in: query
        description: "Person Management Policy Types such as HR, WFM, etc"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: personType
        in: query
        description: Can be either Employee or Candidate
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: contextDateRangeFrom
        in: query
        description: "The Context Date Range From value is the start of the range\
          \ of dates used to determine which Person Management History data to search\
          \ when records have specific start and end dates.The service defaults to\
          \ null if the requester does not specify a value.Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: contextDateRangeTo
        in: query
        description: "The Context Date Range To value is the end of the range of dates\
          \ to determine which Person Management History data to search when records\
          \ have specific start and end dates.  The service defaults to null if the\
          \ requester does not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: A collection of Person Management History
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayloadPersonManagementHistory'
            text/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayloadPersonManagementHistory'
            text/html:
              schema:
                $ref: '#/components/schemas/PaginatedPayloadPersonManagementHistory'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
  /{clientNamespace}/V1/DataPrivacy/PersonManagementExemptions:
    get:
      tags:
      - DataPrivacy
      summary: Get a list of Person Management Exemption
      operationId: DataPrivacy_PersonManagementExemptions_By_pageSize_number_personType_clientNamespace
      parameters:
      - name: pageSize
        in: query
        description: The number of records returned per page in the paginated response
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: number
        in: query
        description: Represent the Employee number
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: personType
        in: query
        description: Can be either Employee or Candidate
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: A collection of Person Management Exemption
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayloadPersonManagementExemption'
            text/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayloadPersonManagementExemption'
            text/html:
              schema:
                $ref: '#/components/schemas/PaginatedPayloadPersonManagementExemption'
        "400":
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
  /{clientNamespace}/V1/DataPrivacy/PersonManagementEraseHistory:
    get:
      tags:
      - DataPrivacy
      summary: Get a list of Person Management Erase History
      operationId: DataPrivacy_PersonManagementEraseHistory_By_pageSize_personType_contextDateRangeFrom_contextDateRangeTo_requestId_clientNamespace
      parameters:
      - name: pageSize
        in: query
        description: The number of records returned per page in the paginated response
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: personType
        in: query
        description: Can be either Employee or Candidate
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: contextDateRangeFrom
        in: query
        description: "The Context Date Range From value is the start of the range\
          \ of dates used to determine which user data to search when records have\
          \ specific start and end dates.  The service defaults to null if the requester\
          \ does not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: contextDateRangeTo
        in: query
        description: "The Context Date Range To value is the end of the range of dates\
          \ to determine which user data to search when records have specific start\
          \ and end dates.  The service defaults to null if the requester does not\
          \ specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: requestId
        in: query
        description: "The right to be forgotten request identifier. The value provided\
          \ must be exact match; otherwise, a bad request (400) error will be returned"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: A collection of Person Management Erase History
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayloadPersonManagementEraseHistory'
            text/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayloadPersonManagementEraseHistory'
            text/html:
              schema:
                $ref: '#/components/schemas/PaginatedPayloadPersonManagementEraseHistory'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
  /{clientNamespace}/V1/DataPrivacy/PolicyAssociations:
    get:
      tags:
      - DataPrivacy
      summary: Get a List of Policy Associations
      operationId: DataPrivacy_PolicyAssociations_By_countryCodes_pageSize_personType_xRefCode_clientNamespace
      parameters:
      - name: countryCodes
        in: query
        description: "The country codes to search policies for, if ommited all countries\
          \ will be returned"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: The number of records returned per page in the paginated response
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: personType
        in: query
        description: Can be either Employee or Candidate
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: xRefCode
        in: query
        description: "The unique identifier (external reference code) of the employee\
          \ whose data will be retrieved.  The value provided must be the exact match\
          \ for an employee; otherwise, a bad request (400) error will be returned"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: A collection of PolicyAssociation data meeting the search criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayloadIEnumerablePolicyAssociation'
            text/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayloadIEnumerablePolicyAssociation'
            text/html:
              schema:
                $ref: '#/components/schemas/PaginatedPayloadIEnumerablePolicyAssociation'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
  /{clientNamespace}/V1/DeductionDefinition:
    get:
      tags:
      - DeductionDefinition
      summary: Get List of Deduction Definitions.
      operationId: DeductionDefinition_Get_By_countryCodes_deductionXRefCodes_taxComplianceXRefCodes_taxTypeCodes_systemDeduction_clientNamespace
      parameters:
      - name: countryCodes
        in: query
        description: '&gt;List of country codes with comma separator to filter the
          result base on country'
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: deductionXRefCodes
        in: query
        description: List of Deduction Reference Codes with comma separator to filter
          the result
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: taxComplianceXRefCodes
        in: query
        description: List of Tax Compliance Reference Codes (DeductionCodeXRefCodes)
          with comma separator to filter the result
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: taxTypeCodes
        in: query
        description: List of Tax Type Codes with comma separator to filter the result
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: systemDeduction
        in: query
        description: "Set to True to get only System Defined Deduction, or set to\
          \ False to get only User Defined Deductions"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: List of Deduction Definitions and associated payees
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableDeductionDefinition'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableDeductionDefinition'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableDeductionDefinition'
        "400":
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Departments:
    get:
      tags:
      - Departments
      operationId: Departments_Get_By_clientNamespace
      parameters:
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: A collection of Department XRefCodes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableDepartment'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableDepartment'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableDepartment'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
            text/json:
              schema:
                type: array
                items:
                  type: object
            text/html:
              schema:
                type: array
                items:
                  type: object
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
            text/json:
              schema:
                type: array
                items:
                  type: object
            text/html:
              schema:
                type: array
                items:
                  type: object
    post:
      tags:
      - Departments
      operationId: Departments_Post_By_department_isValidateOnly_clientNamespace
      parameters:
      - name: isValidateOnly
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Department'
          text/json:
            schema:
              $ref: '#/components/schemas/Department'
          text/html:
            schema:
              $ref: '#/components/schemas/Department'
        required: true
      responses:
        "200":
          description: "A Department is created, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
  /{clientNamespace}/V1/Departments/{xRefCode}:
    get:
      tags:
      - Departments
      operationId: Departments_Get_By_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: A Department XRefCode meets the search criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadDepartment'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadDepartment'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadDepartment'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
            text/json:
              schema:
                type: array
                items:
                  type: object
            text/html:
              schema:
                type: array
                items:
                  type: object
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
            text/json:
              schema:
                type: array
                items:
                  type: object
            text/html:
              schema:
                type: array
                items:
                  type: object
    patch:
      tags:
      - Departments
      operationId: Departments_Patch_By_department_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Department'
          text/json:
            schema:
              $ref: '#/components/schemas/Department'
          text/html:
            schema:
              $ref: '#/components/schemas/Department'
        required: true
      responses:
        "200":
          description: "A Department is updated, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
  /{clientNamespace}/V1/Employees/{xRefCode}/DocumentManagementSecurityGroups:
    get:
      tags:
      - DocMgmtSecurityGroup
      summary: GET DocMgmtSecurityGroupUserMap Details
      operationId: DocMgmtSecurityGroup_Get_By_xRefCode_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ whose data will be retrieved.  The value provided must be the exact match\
          \ for an employee; otherwise, a bad request (400) error will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: The DocMgmtSecurityGroupUserMap with the requested XRefCode
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeDocumentManagementSecurityGroup'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeDocumentManagementSecurityGroup'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeDocumentManagementSecurityGroup'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
      - DocMgmtSecurityGroup
      summary: POST a DocMgmtSecurityGroupUserMap
      operationId: DocMgmtSecurityGroup_Post_By_docMgmtSecurityGroupUserMap_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be updated.  The value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST and PATCH operations.  For more information\
          \ and examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeDocumentManagementSecurityGroup'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeDocumentManagementSecurityGroup'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeDocumentManagementSecurityGroup'
        required: true
      responses:
        "200":
          description: "The DocMgmtSecurityGroupUserMap is created, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
      - DocMgmtSecurityGroup
      summary: PATCH a DocMgmtSecurityGroupUserMap
      operationId: DocMgmtSecurityGroup_Patch_By_docMgmtSecurityGroupUserMap_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be updated.  The value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST and PATCH operations.  For more information\
          \ and examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeDocumentManagementSecurityGroup'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeDocumentManagementSecurityGroup'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeDocumentManagementSecurityGroup'
        required: true
      responses:
        "200":
          description: "The DocMgmtSecurityGroupUserMap is updated, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Documents:
    get:
      tags:
      - Documents
      summary: GET a List of Documents
      operationId: Documents_Get_By_employeeXRefCode_lastModifiedTimestampStart_lastModifiedTimestampEnd_entity_entityTypeXRefCode_documentTypeXRefCode_clientNamespace
      parameters:
      - name: employeeXRefCode
        in: query
        description: "Filter for documents attached to the uniquely identified employee\
          \ specified. Partial search is not supported, so provide the full value.\
          \ Otherwise, a 400 error will be returned"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: lastModifiedTimestampStart
        in: query
        description: Filter for documents starting from this date time value. The
          lastModifiedTimestampStart and lastModifiedTimestampEnd criteria require
          additional criteria to be specified
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: lastModifiedTimestampEnd
        in: query
        description: Filter for documents until this date time value. The lastModifiedTimestampStart
          and lastModifiedTimestampEnd criteria require additional criteria to be
          specified
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: entity
        in: query
        description: Filter documents attached to this specified entity. The entity
          and entityTypeXRefCode must both be provided to apply this filter criteria
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: entityTypeXRefCode
        in: query
        description: "Filter for documents associated with this specified Entity Type.\
          \ The current Entity Types supported for filtering are: \"BENEFIT_PLAN\"\
          , \"BENEFIT_PLAN_OPTION\", \"HR_POLICY\", \"PAY_RUN\", \"PAY_GROUP_CALENDAR\"\
          , \"EMPLOYEE_FILE\". The entity and entityTypeXRefCode must both be provided\
          \ to apply this filter criteria"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: documentTypeXRefCode
        in: query
        description: Filter for documents associated with this specified Document
          Type
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: Returns documents associated with the given criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableDocument'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableDocument'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableDocument'
        "400":
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "401":
          description: Invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
  /{clientNamespace}/V1/documents/{documentGuid}:
    get:
      tags:
      - Documents
      summary: GET Document Details
      operationId: Documents_Get_By_documentGuid_clientNamespace
      parameters:
      - name: documentGuid
        in: path
        description: "Uniquely identifies the document you want to retrieve. Partial\
          \ search is not supported, so provide the full value. Otherwise, a 400 error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: Returns the document identified by the documentGuid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadArchiveDocument'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadArchiveDocument'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadArchiveDocument'
        "400":
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "401":
          description: Invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "404":
          description: Document is not accessible.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
  /{clientNamespace}/V1/Documents/Import/Queue:
    post:
      tags:
      - Documents
      summary: POST (Create) Queue Document Import task
      operationId: Documents_Import_By_documents_isValidateOnly_clientNamespace
      parameters:
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST operation\
          \ validates the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: The JSON-formatted content containing the metadata entities and
          elements of document import to be processed in POST (queue task) operation
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/DocumentImportQueueRequest'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/DocumentImportQueueRequest'
          text/html:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/DocumentImportQueueRequest'
        required: true
      responses:
        "200":
          description: Document import queued
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadDocumentImportQueueResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadDocumentImportQueueResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadDocumentImportQueueResponse'
        "400":
          description: Request is malformed or has validation errors. Correct and
            resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "401":
          description: Invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
  /{clientNamespace}/V1/Documents/Upload:
    post:
      tags:
      - Documents
      summary: Upload one or more documents using a multipart request.
      description: "### Request body\r\nOne or more files must be attached to the\
        \ request.\r\n\r\nMetadata JSON string must be provided.\r\n\r\nExample Value:\r\
        \n```\r\n[\r\n    {\r\n        \"FileName\": \"string\",\r\n        \"Link\"\
        : \"string\",\r\n        \"DocumentTypeXRefCode\": \"string\",\r\n       \
        \ \"EntityTypeXRefCode\": \"string\",\r\n        \"Entity\": \"string\",\r\
        \n        \"EmployeeNumber\": \"string\",\r\n        \"Tags\": [\r\n     \
        \       \"string\"\r\n        ],\r\n        \"Comment\": \"string\",\r\n \
        \       \"AdditionalData\": \"string\",\r\n        \"EmployeeXRefCode\": \"\
        string\",\r\n        \"FileKey\": \"string\"\r\n    }\r\n]\r\n```"
      operationId: Documents_Upload_By_isValidateOnly_clientNamespace
      parameters:
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST operation\
          \ validates the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: Document(s) processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocMgmtUploadResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/DocMgmtUploadResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/DocMgmtUploadResponse'
        "400":
          description: Request is malformed or has validation errors. Correct and
            resubmit.
          content:
            application/json:
              schema:
                type: object
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                type: object
            text/html:
              schema:
                type: object
        "401":
          description: Invalid authentication credentials.
          content:
            application/json:
              schema:
                type: object
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                type: object
            text/html:
              schema:
                type: object
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: object
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                type: object
            text/html:
              schema:
                type: object
  /{clientNamespace}/V1/EarningDefinition:
    get:
      tags:
      - EarningDefinition
      summary: GET List of Earning Definitions.
      operationId: EarningDefinition_Get_By_countryCodes_earningXRefCodes_taxComplianceXRefCodes_earningTypeXRefCodes_clientNamespace
      parameters:
      - name: countryCodes
        in: query
        description: List of country codes with comma separator to filter the result
          base on country
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: earningXRefCodes
        in: query
        description: List of Earning Reference Codes with comma separator to filter
          the result
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: taxComplianceXRefCodes
        in: query
        description: List of Tax Compliance Reference Codes (EarningCodeXRefCodes)
          with comma separator to filter the result
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: earningTypeXRefCodes
        in: query
        description: List of Earning Type Reference Codes with comma separator to
          filter the result
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: List of Earning Definitions and associated payees
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEarningDefinition'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEarningDefinition'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEarningDefinition'
        "400":
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/EarningStatementHeader:
    get:
      tags:
      - EarningStatement
      summary: GET Earning Statement Headers
      operationId: EarningStatement_Get_By_pageSize_payGroupXRefCode_payDate_payPeriodStartDate_payPeriodEndDate_ppn_employeeXRefCodes_employeeLastNames_employeePayDateBegin_employeePayDateEnd_clientNamespace
      parameters:
      - name: pageSize
        in: query
        description: The number of records returned per page in the paginated response
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: payGroupXRefCode
        in: query
        description: The pay group's reference code
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: payDate
        in: query
        description: "The pay run's pay date (format: yyyy-mm-dd)"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: payPeriodStartDate
        in: query
        description: "The pay run's period start date (format: yyyy-mm-dd)"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: payPeriodEndDate
        in: query
        description: "The pay run's period end date (format: yyyy-mm-dd)"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ppn
        in: query
        description: "The PayPeriodNumber(format: ##-##)"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: employeeXRefCodes
        in: query
        description: Comma delimited list of XRef codes for employees
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: employeeLastNames
        in: query
        description: Comma delimited list of last names for employees
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: employeePayDateBegin
        in: query
        description: "The employee's pay start date(format: yyyy-mm-dd)"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: employeePayDateEnd
        in: query
        description: "The employee's pay end date(format: yyyy-mm-dd)"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: An encrypted string which contains list of earning statement
            headers
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayloadEarningStatementHeader'
            text/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayloadEarningStatementHeader'
            text/html:
              schema:
                $ref: '#/components/schemas/PaginatedPayloadEarningStatementHeader'
        "400":
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/EarningStatement/{earningStatementXRefCode}:
    get:
      tags:
      - EarningStatement
      summary: GET Earning Statement Pdf
      operationId: EarningStatement_Get_By_employeeXRefCode_earningStatementXRefCode_clientNamespace
      parameters:
      - name: employeeXRefCode
        in: query
        description: Employee XRefCode
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: earningStatementXRefCode
        in: path
        description: Unique identifier for the Earning Statement
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: Earning statement document
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadListEarningStatementDocument'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadListEarningStatementDocument'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadListEarningStatementDocument'
        "400":
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/EmergencyContacts:
    get:
      tags:
      - EmergencyContact
      summary: GET EmergencyContact Details
      operationId: EmergencyContact_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ whose data will be retrieved.  The value provided must be the exact match\
          \ for an employee; otherwise, a bad request (400) error will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: contextDate
        in: query
        description: "The Context Date value is an “as-of” date used to determine\
          \ which employee data to search when records have specific start and end\
          \ dates.  The service defaults to the current datetime if the requester\
          \ does not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: contextDateRangeFrom
        in: query
        description: "The Context Date Range From value is the start of the range\
          \ of dates used to determine which employee data to search when records\
          \ have specific start and end dates.  The service defaults to null if the\
          \ requester does not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: contextDateRangeTo
        in: query
        description: "The Context Date Range To value is the end of the range of dates\
          \ to determine which employee data to search when records have specific\
          \ start and end dates.  The service defaults to null if the requester does\
          \ not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: The emergency contacts of employee with the requested XRefCode
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeEmergencyContact'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeEmergencyContact'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeEmergencyContact'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
      - EmergencyContact
      summary: POST an EmergencyContact
      operationId: EmergencyContact_Post_By_emergencyContact_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be updated.  The value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST and PATCH operations.  For more information\
          \ and examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeEmergencyContact'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeEmergencyContact'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeEmergencyContact'
        required: true
      responses:
        "200":
          description: "An EmergencyContact is created, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
      - EmergencyContact
      summary: PATCH an EmergencyContact
      operationId: EmergencyContact_Patch_By_emergencyContact_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be updated.  The value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST and PATCH operations.  For more information\
          \ and examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeEmergencyContact'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeEmergencyContact'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeEmergencyContact'
        required: true
      responses:
        "200":
          description: "The EmergencyContact is updated, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/EmployeeAccidentInsurance/AccidentInsurance:
    get:
      tags:
      - EmployeeAccidentInsurance
      summary: GET DEUEmployeeAccidentInsurance Details
      operationId: EmployeeAccidentInsurance_Get_By_xRefCode_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ whose data will be retrieved.  The value provided must be the exact match\
          \ for an employee; otherwise, a bad request (400) error will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: The DEUEmployeeAccidentInsurance with the requested XRefCode
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableDEUEmployeeAccidentInsurance'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableDEUEmployeeAccidentInsurance'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableDEUEmployeeAccidentInsurance'
        "400":
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
      - EmployeeAccidentInsurance
      summary: POST A dEUEmployeeAccidentInsurance
      operationId: EmployeeAccidentInsurance_Post_By_dEUEmployeeAccidentInsurance_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be updated.  The value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST and PATCH operations.  For more information\
          \ and examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DEUEmployeeAccidentInsurance'
          text/json:
            schema:
              $ref: '#/components/schemas/DEUEmployeeAccidentInsurance'
          text/html:
            schema:
              $ref: '#/components/schemas/DEUEmployeeAccidentInsurance'
        required: true
      responses:
        "200":
          description: "A DEUEmployeeAccidentInsurance is created, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
      - EmployeeAccidentInsurance
      summary: PATCH an DEUEmployeeAccidentInsurance
      operationId: EmployeeAccidentInsurance_Patch_By_dEUEmployeeAccidentInsurance_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be updated.  The value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST and PATCH operations.  For more information\
          \ and examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DEUEmployeeAccidentInsurance'
          text/json:
            schema:
              $ref: '#/components/schemas/DEUEmployeeAccidentInsurance'
          text/html:
            schema:
              $ref: '#/components/schemas/DEUEmployeeAccidentInsurance'
        required: true
      responses:
        "200":
          description: "The dEUEmployeeAccidentInsurance is updated, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/EmployeeAssignedSexAndGenderIdentity:
    get:
      tags:
      - EmployeeAssignedSexAndGenderIdentity
      summary: GET EmployeeAssignedSexAndGenderIdentity Details
      operationId: EmployeeAssignedSexAndGenderIdentity_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ whose data will be retrieved.  The value provided must be the exact match\
          \ for an employee; otherwise, a bad request (400) error will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: contextDate
        in: query
        description: "The Context Date value is an “as-of” date used to determine\
          \ which employee data to search when records have specific start and end\
          \ dates.  The service defaults to the current datetime if the requester\
          \ does not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: contextDateRangeFrom
        in: query
        description: "The Context Date Range From value is the start of the range\
          \ of dates used to determine which employee data to search when records\
          \ have specific start and end dates.  The service defaults to null if the\
          \ requester does not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: contextDateRangeTo
        in: query
        description: "The Context Date Range To value is the end of the range of dates\
          \ to determine which employee data to search when records have specific\
          \ start and end dates.  The service defaults to null if the requester does\
          \ not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: The EmployeeAssignedSexAndGenderIdentity with the requested
            XRefCode
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeAssignedSexAndGenderIdentity'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeAssignedSexAndGenderIdentity'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeAssignedSexAndGenderIdentity'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
      - EmployeeAssignedSexAndGenderIdentity
      summary: POST a EmployeeAssignedSexAndGenderIdentity
      operationId: EmployeeAssignedSexAndGenderIdentity_Post_By_employeeAssignedSexAndGenderIdentity_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be updated.  The value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeAssignedSexAndGenderIdentity'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeAssignedSexAndGenderIdentity'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeAssignedSexAndGenderIdentity'
        required: true
      responses:
        "200":
          description: "The EmployeeAssignedSexAndGenderIdentity is created, no response\
            \ body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
      - EmployeeAssignedSexAndGenderIdentity
      summary: PATCH a EmployeeAssignedSexAndGenderIdentity
      operationId: EmployeeAssignedSexAndGenderIdentity_Patch_By_employeeAssignedSexAndGenderIdentity_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be updated.  The value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeAssignedSexAndGenderIdentity'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeAssignedSexAndGenderIdentity'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeAssignedSexAndGenderIdentity'
        required: true
      responses:
        "200":
          description: "The EmployeeAssignedSexAndGenderIdentity is updated, no response\
            \ body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/AUSFederalTaxes:
    get:
      tags:
      - EmployeeAUSFederalTax
      summary: GET EmployeeAUSFederalTax Details
      operationId: EmployeeAUSFederalTax_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ whose data will be retrieved.  The value provided must be the exact match\
          \ for an employee; otherwise, a bad request (400) error will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: contextDate
        in: query
        description: "The Context Date value is an “as-of” date used to determine\
          \ which employee data to search when records have specific start and end\
          \ dates.  The service defaults to the current datetime if the requester\
          \ does not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: contextDateRangeFrom
        in: query
        description: "The Context Date Range From value is the start of the range\
          \ of dates used to determine which employee data to search when records\
          \ have specific start and end dates.  The service defaults to null if the\
          \ requester does not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: contextDateRangeTo
        in: query
        description: "The Context Date Range To value is the end of the range of dates\
          \ to determine which employee data to search when records have specific\
          \ start and end dates.  The service defaults to null if the requester does\
          \ not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: The EmployeeAUSFederalTax with the requested XRefCode
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeAUSFederalTax'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeAUSFederalTax'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeAUSFederalTax'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
      - EmployeeAUSFederalTax
      summary: POST a EmployeeAUSFederalTax
      operationId: EmployeeAUSFederalTax_Post_By_employeeAUSFederalTax_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be updated.  The value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST and PATCH operations.  For more information\
          \ and examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeAUSFederalTax'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeAUSFederalTax'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeAUSFederalTax'
        required: true
      responses:
        "200":
          description: "An EmployeeAUSFederalTax is created, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
      - EmployeeAUSFederalTax
      summary: PATCH a EmployeeAUSFederalTax
      operationId: EmployeeAUSFederalTax_Patch_By_employeeAUSFederalTax_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be updated.  The value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST and PATCH operations.  For more information\
          \ and examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeAUSFederalTax'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeAUSFederalTax'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeAUSFederalTax'
        required: true
      responses:
        "200":
          description: "The EmployeeAUSFederalTax is updated, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/AUSSuperannuation:
    get:
      tags:
      - EmployeeAUSSuperannuation
      summary: GET Employee superannuation details for Australia
      operationId: EmployeeAUSSuperannuation_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ whose data will be retrieved.  The value provided must be the exact match\
          \ for an employee; otherwise, a bad request (400) error will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: contextDate
        in: query
        description: "The Context Date value is an “as-of” date used to determine\
          \ which employee data to search when records have specific start and end\
          \ dates.  The service defaults to the current datetime if the requester\
          \ does not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: contextDateRangeFrom
        in: query
        description: "The Context Date Range From value is the start of the range\
          \ of dates used to determine which employee data to search when records\
          \ have specific start and end dates.  The service defaults to null if the\
          \ requester does not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: contextDateRangeTo
        in: query
        description: "The Context Date Range To value is the end of the range of dates\
          \ to determine which employee data to search when records have specific\
          \ start and end dates.  The service defaults to null if the requester does\
          \ not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: The employee superannuation details for Australia by requested
            XRefCode
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeAUSSuperannuation'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeAUSSuperannuation'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeAUSSuperannuation'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/AUSSuperannuationRules:
    get:
      tags:
      - EmployeeAUSSuperannuationRules
      summary: GET Employee superannuation rules for Australia
      operationId: EmployeeAUSSuperannuationRules_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ whose data will be retrieved.  The value provided must be the exact match\
          \ for an employee; otherwise, a bad request (400) error will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: contextDate
        in: query
        description: "The Context Date value is an “as-of” date used to determine\
          \ which employee data to search when records have specific start and end\
          \ dates.  The service defaults to the current datetime if the requester\
          \ does not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: contextDateRangeFrom
        in: query
        description: "The Context Date Range From value is the start of the range\
          \ of dates used to determine which employee data to search when records\
          \ have specific start and end dates.  The service defaults to null if the\
          \ requester does not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: contextDateRangeTo
        in: query
        description: "The Context Date Range To value is the end of the range of dates\
          \ to determine which employee data to search when records have specific\
          \ start and end dates.  The service defaults to null if the requester does\
          \ not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: The employee superannuation rules for Australia by requested
            XRefCode
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeAUSSuperannuationRules'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeAUSSuperannuationRules'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeAUSSuperannuationRules'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/AuthorizationAssignments:
    get:
      tags:
      - EmployeeAuthorizationAssignment
      summary: GET Employee's Authorization Assignment Details
      operationId: EmployeeAuthorizationAssignment_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ whose data will be retrieved.  The value provided must be the exact match\
          \ for an employee; otherwise, a bad request (400) error will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: contextDate
        in: query
        description: "The Context Date value is an “as-of” date used to determine\
          \ which employee data to search when records have specific start and end\
          \ dates.  The service defaults to the current datetime if the requester\
          \ does not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: contextDateRangeFrom
        in: query
        description: "The Context Date Range From value is the start of the range\
          \ of dates used to determine which employee data to search when records\
          \ have specific start and end dates.  The service defaults to null if the\
          \ requester does not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: contextDateRangeTo
        in: query
        description: "The Context Date Range To value is the end of the range of dates\
          \ to determine which employee data to search when records have specific\
          \ start and end dates.  The service defaults to null if the requester does\
          \ not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: The EmployeeAuthorizationAssignments with the requested XRefCode
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableAuthorizationAssignment'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableAuthorizationAssignment'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableAuthorizationAssignment'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
      - EmployeeAuthorizationAssignment
      summary: POST an AuthorizationAssignment
      operationId: EmployeeAuthorizationAssignment_Post_By_employeeAuthorityTypeAssignment_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be updated.  The value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorizationAssignment'
          text/json:
            schema:
              $ref: '#/components/schemas/AuthorizationAssignment'
          text/html:
            schema:
              $ref: '#/components/schemas/AuthorizationAssignment'
        required: true
      responses:
        "200":
          description: "An AuthorizationAssignment is created, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
      - EmployeeAuthorizationAssignment
      summary: PATCH an AuthorizationAssignment
      operationId: EmployeeAuthorizationAssignment_Patch_By_employeeAuthorityTypeAssignment_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be updated.  The value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorizationAssignment'
          text/json:
            schema:
              $ref: '#/components/schemas/AuthorizationAssignment'
          text/html:
            schema:
              $ref: '#/components/schemas/AuthorizationAssignment'
        required: true
      responses:
        "200":
          description: "The AuthorizationAssignment is updated, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/Badges:
    get:
      tags:
      - EmployeeBadge
      summary: GET EmployeeBadge Details
      operationId: EmployeeBadge_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ whose data will be retrieved.  The value provided must be the exact match\
          \ for an employee; otherwise, a bad request (400) error will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: contextDate
        in: query
        description: "The Context Date value is an “as-of” date used to determine\
          \ which employee data to search when records have specific start and end\
          \ dates.  The service defaults to the current datetime if the requester\
          \ does not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: contextDateRangeFrom
        in: query
        description: "The Context Date Range From value is the start of the range\
          \ of dates used to determine which employee data to search when records\
          \ have specific start and end dates.  The service defaults to null if the\
          \ requester does not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: contextDateRangeTo
        in: query
        description: "The Context Date Range To value is the end of the range of dates\
          \ to determine which employee data to search when records have specific\
          \ start and end dates.  The service defaults to null if the requester does\
          \ not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: The EmployeeBadge with the requested XRefCode
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeBadge'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeBadge'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeBadge'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
      - EmployeeBadge
      summary: POST a EmployeeBadge
      operationId: EmployeeBadge_Post_By_employeeBadge_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be updated.  The value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST and PATCH operations.  For more information\
          \ and examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeBadge'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeBadge'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeBadge'
        required: true
      responses:
        "200":
          description: "An EmployeeBadge is created, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
      - EmployeeBadge
      summary: PATCH a EmployeeBadge
      operationId: EmployeeBadge_Patch_By_employeeBadge_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be updated.  The value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST and PATCH operations.  For more information\
          \ and examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeBadge'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeBadge'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeBadge'
        required: true
      responses:
        "200":
          description: "The EmployeeBadge is updated, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/EmployeeBalancePeriods:
    get:
      tags:
      - EmployeeBalancePeriods
      summary: Get a list of Employee Balance Periods
      operationId: EmployeeBalancePeriods_Get_By_employeeXRefCode_asOfDate_startDate_endDate_clientNamespace
      parameters:
      - name: employeeXRefCode
        in: query
        description: A case-sensitive field that identifies a unique employee
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: asOfDate
        in: query
        description: "The date as of which to calculate the current values for the\
          \ employee balance periods returned. If omitted, current values will be\
          \ calculated as of today. Example: 2020-01-01T00:00:00"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: startDate
        in: query
        description: "Period start date to determine which employee balance periods\
          \ to retrieve. If omitted, today's date will be used. Example: 2020-01-01T00:00:00"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: endDate
        in: query
        description: "Period end date to determine which employee balance periods\
          \ to retrieve. If omitted, the period start date will be used. If the period\
          \ start date is also omitted, today's date will be used. Example: 2020-01-01T00:00:00"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: A collection of employee balance periods meeting the search
            criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeBalancePeriod'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeBalancePeriod'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeBalancePeriod'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
  /{clientNamespace}/V1/EmployeeBalanceTransactions:
    get:
      tags:
      - EmployeeBalanceTransactions
      summary: Get a list of Employee Balance Transactions grouped by their employee
        balance periods
      operationId: EmployeeBalanceTransactions_Get_By_employeeXRefCode_balanceXRefCode_startDate_endDate_clientNamespace
      parameters:
      - name: employeeXRefCode
        in: query
        description: A case-sensitive field that identifies a unique employee
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: balanceXRefCode
        in: query
        description: A case-sensitive field that identifies a unique balance
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: startDate
        in: query
        description: "Period start date to determine which employee balance periods\
          \ to retrieve. If omitted, today's date will be used. Example: 2020-01-01T00:00:00"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: endDate
        in: query
        description: "Period end date to determine which employee balance periods\
          \ to retrieve. If omitted, the period start date will be used. If the period\
          \ start date is also omitted, today's date will be used. Example: 2020-01-01T00:00:00"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: A collection of employee balance transactions grouped by their
            employee balance periods meeting the search criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeBalanceTransactions'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeBalanceTransactions'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeBalanceTransactions'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
    post:
      tags:
      - EmployeeBalanceTransactions
      summary: POST (Create) Employee Balance Transaction
      operationId: EmployeeBalanceTransactions_Post_By_employeeBalanceTransaction_isValidateOnly_clientNamespace
      parameters:
      - name: isValidateOnly
        in: query
        description: ""
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST operation.  For more information and\
          \ examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeBalanceTransactionForSubmit'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeBalanceTransactionForSubmit'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeBalanceTransactionForSubmit'
        required: true
      responses:
        "200":
          description: An employee balance transaction is created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeBalanceTransactionPostResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/EmployeeBalanceTransactionPostResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/EmployeeBalanceTransactionPostResponse'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
    patch:
      tags:
      - EmployeeBalanceTransactions
      summary: PATCH (Modify) Employee Balance Transaction
      operationId: EmployeeBalanceTransactions_Patch_By_employeeBalanceTransaction_employeeBalanceTransactionId_isValidateOnly_clientNamespace
      parameters:
      - name: employeeBalanceTransactionId
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: ""
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in PATCH operation.  For more information and\
          \ examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeBalanceTransactionForPatch'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeBalanceTransactionForPatch'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeBalanceTransactionForPatch'
        required: true
      responses:
        "200":
          description: An employee balance transaction is modified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeBalanceTransactionPatchResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/EmployeeBalanceTransactionPatchResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/EmployeeBalanceTransactionPatchResponse'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
  /{clientNamespace}/V1/Employees/{xRefCode}/CANFederalTaxes:
    get:
      tags:
      - EmployeeCANFederalTax
      summary: GET EmployeeCANFederalTax Details
      operationId: EmployeeCANFederalTax_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ whose data will be retrieved.  The value provided must be the exact match\
          \ for an employee; otherwise, a bad request (400) error will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: contextDate
        in: query
        description: "The Context Date value is an “as-of” date used to determine\
          \ which employee data to search when records have specific start and end\
          \ dates.  The service defaults to the current datetime if the requester\
          \ does not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: contextDateRangeFrom
        in: query
        description: "The Context Date Range From value is the start of the range\
          \ of dates used to determine which employee data to search when records\
          \ have specific start and end dates.  The service defaults to null if the\
          \ requester does not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: contextDateRangeTo
        in: query
        description: "The Context Date Range To value is the end of the range of dates\
          \ to determine which employee data to search when records have specific\
          \ start and end dates.  The service defaults to null if the requester does\
          \ not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: The EmployeeCANFederalTax with the requested XRefCode
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeCANFederalTax'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeCANFederalTax'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeCANFederalTax'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
      - EmployeeCANFederalTax
      summary: POST a EmployeeCANFederalTax
      operationId: EmployeeCANFederalTax_Post_By_employeeCANFederalTax_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be updated.  The value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST and PATCH operations.  For more information\
          \ and examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeCANFederalTax'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeCANFederalTax'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeCANFederalTax'
        required: true
      responses:
        "200":
          description: "An EmployeeCANFederalTax is created, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
      - EmployeeCANFederalTax
      summary: PATCH a EmployeeCANFederalTax
      operationId: EmployeeCANFederalTax_Patch_By_employeeCANFederalTax_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be updated.  The value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST and PATCH operations.  For more information\
          \ and examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeCANFederalTax'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeCANFederalTax'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeCANFederalTax'
        required: true
      responses:
        "200":
          description: "The EmployeeCANFederalTax is updated, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/CANStateTaxes:
    get:
      tags:
      - EmployeeCANStateTax
      summary: GET EmployeeCANStateTax Details
      operationId: EmployeeCANStateTax_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ whose data will be retrieved.  The value provided must be the exact match\
          \ for an employee; otherwise, a bad request (400) error will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: contextDate
        in: query
        description: "The Context Date value is an “as-of” date used to determine\
          \ which employee data to search when records have specific start and end\
          \ dates.  The service defaults to the current datetime if the requester\
          \ does not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: contextDateRangeFrom
        in: query
        description: "The Context Date Range From value is the start of the range\
          \ of dates used to determine which employee data to search when records\
          \ have specific start and end dates.  The service defaults to null if the\
          \ requester does not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: contextDateRangeTo
        in: query
        description: "The Context Date Range To value is the end of the range of dates\
          \ to determine which employee data to search when records have specific\
          \ start and end dates.  The service defaults to null if the requester does\
          \ not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: The EmployeeCANStateTax with the requested XRefCode
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeCANStateTax'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeCANStateTax'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeCANStateTax'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
      - EmployeeCANStateTax
      summary: POST a EmployeeCANStateTax
      operationId: EmployeeCANStateTax_Post_By_employeeCANStateTax_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be updated.  The value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST and PATCH operations.  For more information\
          \ and examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeCANStateTax'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeCANStateTax'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeCANStateTax'
        required: true
      responses:
        "200":
          description: "A CANStateTaxes is created, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
      - EmployeeCANStateTax
      summary: PATCH a EmployeeCANStateTax
      operationId: EmployeeCANStateTax_Patch_By_employeeCANStateTax_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be updated.  The value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST and PATCH operations.  For more information\
          \ and examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeCANStateTax'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeCANStateTax'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeCANStateTax'
        required: true
      responses:
        "200":
          description: "The CANStateTaxes is updated, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/CANTaxStatuses:
    get:
      tags:
      - EmployeeCANTaxStatus
      summary: GET EmployeeCANTaxStatus Details
      operationId: EmployeeCANTaxStatus_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ whose data will be retrieved.  The value provided must be the exact match\
          \ for an employee; otherwise, a bad request (400) error will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: contextDate
        in: query
        description: "The Context Date value is an “as-of” date used to determine\
          \ which employee data to search when records have specific start and end\
          \ dates.  The service defaults to the current datetime if the requester\
          \ does not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: contextDateRangeFrom
        in: query
        description: "The Context Date Range From value is the start of the range\
          \ of dates used to determine which employee data to search when records\
          \ have specific start and end dates.  The service defaults to null if the\
          \ requester does not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: contextDateRangeTo
        in: query
        description: "The Context Date Range To value is the end of the range of dates\
          \ to determine which employee data to search when records have specific\
          \ start and end dates.  The service defaults to null if the requester does\
          \ not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: The EmployeeCANTaxStatus with the requested XRefCode
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeCANTaxStatus'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeCANTaxStatus'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeCANTaxStatus'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
      - EmployeeCANTaxStatus
      summary: POST EmployeeCANTaxStatus Details
      operationId: EmployeeCANTaxStatus_Post_By_employeeCANTaxStatus_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be updated.  The value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST and PATCH operations.  For more information\
          \ and examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeCANTaxStatus'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeCANTaxStatus'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeCANTaxStatus'
        required: true
      responses:
        "200":
          description: "A EmployeeCANTaxStatus Detail is created, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
      - EmployeeCANTaxStatus
      summary: PATCH EmployeeCANTaxStatus Details
      operationId: EmployeeCANTaxStatus_Patch_By_employeeCANTaxStatus_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be updated.  The value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST and PATCH operations.  For more information\
          \ and examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeCANTaxStatus'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeCANTaxStatus'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeCANTaxStatus'
        required: true
      responses:
        "200":
          description: "The EmployeeCANTaxStatus Detail is updated, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/EmployeeCertifications:
    get:
      tags:
      - EmployeeCertification
      summary: GET EmployeeCertification Details
      operationId: EmployeeCertification_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ whose data will be retrieved.  The value provided must be the exact match\
          \ for an employee; otherwise, a bad request (400) error will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: contextDate
        in: query
        description: "The Context Date value is an “as-of” date used to determine\
          \ which employee data to search when records have specific start and end\
          \ dates.  The service defaults to the current datetime if the requester\
          \ does not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: contextDateRangeFrom
        in: query
        description: "The Context Date Range From value is the start of the range\
          \ of dates used to determine which employee data to search when records\
          \ have specific start and end dates.  The service defaults to null if the\
          \ requester does not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: contextDateRangeTo
        in: query
        description: "The Context Date Range To value is the end of the range of dates\
          \ to determine which employee data to search when records have specific\
          \ start and end dates.  The service defaults to null if the requester does\
          \ not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: The EmployeeCertification with the requested XRefCode
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableLMSEmployeeCertification'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableLMSEmployeeCertification'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableLMSEmployeeCertification'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
      - EmployeeCertification
      summary: POST an Employee Certification
      operationId: EmployeeCertification_Post_By_employeeCertification_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be updated.  The value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST and PATCH operations.  For more information\
          \ and examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LMSEmployeeCertification'
          text/json:
            schema:
              $ref: '#/components/schemas/LMSEmployeeCertification'
          text/html:
            schema:
              $ref: '#/components/schemas/LMSEmployeeCertification'
        required: true
      responses:
        "200":
          description: "An Employee Certification is created, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
    patch:
      tags:
      - EmployeeCertification
      summary: PATCH (Update) an Employee Certification
      operationId: EmployeeCertification_Patch_By_employeeCertification_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be updated.  The value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST and PATCH operations.  For more information\
          \ and examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LMSEmployeeCertification'
          text/json:
            schema:
              $ref: '#/components/schemas/LMSEmployeeCertification'
          text/html:
            schema:
              $ref: '#/components/schemas/LMSEmployeeCertification'
        required: true
      responses:
        "200":
          description: "An Employee Certification is updated, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
  /{clientNamespace}/V1/Employees/{xRefCode}/ClockDeviceGroups:
    get:
      tags:
      - EmployeeClockDeviceGroup
      summary: GET EmployeeClockDeviceGroup Details
      operationId: EmployeeClockDeviceGroup_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ whose data will be retrieved.  The value provided must be the exact match\
          \ for an employee; otherwise, a bad request (400) error will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: contextDate
        in: query
        description: "The Context Date value is an “as-of” date used to determine\
          \ which employee data to search when records have specific start and end\
          \ dates.  The service defaults to the current datetime if the requester\
          \ does not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: contextDateRangeFrom
        in: query
        description: "The Context Date Range From value is the start of the range\
          \ of dates used to determine which employee data to search when records\
          \ have specific start and end dates.  The service defaults to null if the\
          \ requester does not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: contextDateRangeTo
        in: query
        description: "The Context Date Range To value is the end of the range of dates\
          \ to determine which employee data to search when records have specific\
          \ start and end dates.  The service defaults to null if the requester does\
          \ not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: The EmployeeClockDeviceGroup with the requested XRefCode
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeClockDeviceGroup'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeClockDeviceGroup'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeClockDeviceGroup'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
      - EmployeeClockDeviceGroup
      summary: POST an EmployeeClockDeviceGroup
      operationId: EmployeeClockDeviceGroup_Post_By_clockDeviceGroup_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be updated.  The value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST and PATCH operations.  For more information\
          \ and examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeClockDeviceGroup'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeClockDeviceGroup'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeClockDeviceGroup'
        required: true
      responses:
        "200":
          description: "The EmployeeClockDeviceGroup is created, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
      - EmployeeClockDeviceGroup
      summary: PATCH an EmployeeClockDeviceGroup
      operationId: EmployeeClockDeviceGroup_Patch_By_clockDeviceGroup_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be updated.  The value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST and PATCH operations.  For more information\
          \ and examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeClockDeviceGroup'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeClockDeviceGroup'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeClockDeviceGroup'
        required: true
      responses:
        "200":
          description: "The EmployeeClockDeviceGroup is updated, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/CompensationSummary:
    get:
      tags:
      - EmployeeCompensation
      summary: GET EmployeeCompensation Details
      operationId: EmployeeCompensation_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ whose data will be retrieved.  The value provided must be the exact match\
          \ for an employee; otherwise, a bad request (400) error will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: contextDate
        in: query
        description: "The Context Date value is an “as-of” date used to determine\
          \ which employee data to search when records have specific start and end\
          \ dates.  The service defaults to the current datetime if the requester\
          \ does not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: contextDateRangeFrom
        in: query
        description: "The Context Date Range From value is the start of the range\
          \ of dates used to determine which employee data to search when records\
          \ have specific start and end dates.  The service defaults to null if the\
          \ requester does not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: contextDateRangeTo
        in: query
        description: "The Context Date Range To value is the end of the range of dates\
          \ to determine which employee data to search when records have specific\
          \ start and end dates.  The service defaults to null if the requester does\
          \ not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: The EmployeeCompensation with the requested XRefCode
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeCompensation'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeCompensation'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeCompensation'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/ConfidentialIdentification:
    get:
      tags:
      - EmployeeConfidentialIdentification
      summary: GET EmployeeConfidentialIdentification Details
      operationId: EmployeeConfidentialIdentification_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ whose data will be retrieved.  The value provided must be the exact match\
          \ for an employee; otherwise, a bad request (400) error will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: contextDate
        in: query
        description: "The Context Date value is an “as-of” date used to determine\
          \ which employee data to search when records have specific start and end\
          \ dates.  The service defaults to the current datetime if the requester\
          \ does not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: contextDateRangeFrom
        in: query
        description: "The Context Date Range From value is the start of the range\
          \ of dates used to determine which employee data to search when records\
          \ have specific start and end dates.  The service defaults to null if the\
          \ requester does not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: contextDateRangeTo
        in: query
        description: "The Context Date Range To value is the end of the range of dates\
          \ to determine which employee data to search when records have specific\
          \ start and end dates.  The service defaults to null if the requester does\
          \ not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: The EmployeeConfidentialIdentification with the requested XRefCode
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeConfidentialIdentification'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeConfidentialIdentification'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeConfidentialIdentification'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
      - EmployeeConfidentialIdentification
      summary: POST a EmployeeConfidentialIdentification
      operationId: EmployeeConfidentialIdentification_Post_By_employeeConfidentialIdentification_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be updated.  The value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST and PATCH operations.  For more information\
          \ and examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeConfidentialIdentification'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeConfidentialIdentification'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeConfidentialIdentification'
        required: true
      responses:
        "200":
          description: "An EmployeeConfidentialIdentification is created, no response\
            \ body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
      - EmployeeConfidentialIdentification
      summary: PATCH a EmployeeConfidentialIdentification
      operationId: EmployeeConfidentialIdentification_Patch_By_employeeConfidentialIdentification_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be updated.  The value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST and PATCH operations.  For more information\
          \ and examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeConfidentialIdentification'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeConfidentialIdentification'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeConfidentialIdentification'
        required: true
      responses:
        "200":
          description: "The EmployeeConfidentialIdentification is updated, no response\
            \ body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/Courses:
    get:
      tags:
      - EmployeeCourse
      summary: GET EmployeeCourse Details
      operationId: EmployeeCourse_Get_By_xRefCode_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ whose data will be retrieved.  The value provided must be the exact match\
          \ for an employee; otherwise, a bad request (400) error will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: The EmployeeCourse with the requested XRefCode
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeCourse'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeCourse'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeCourse'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
      - EmployeeCourse
      summary: POST an Employee Course Enrollment
      operationId: EmployeeCourse_Post_By_employeeCourse_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be created.  The value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST operation\
          \ validate the request without applying the changes to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST operation. For more information and examples,\
          \ please refer to the Dayforce Web Services RESTful Developer's Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeCourse'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeCourse'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeCourse'
        required: true
      responses:
        "200":
          description: "An Employee Course Enrollment is created, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
    patch:
      tags:
      - EmployeeCourse
      summary: PATCH (Update) an Employee Course Enrollment
      operationId: EmployeeCourse_Patch_By_employeeCourse_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be created.  The value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, PATCH operation\
          \ validate the request without applying the changes to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in PATCH operation. For more information and\
          \ examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeCourse'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeCourse'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeCourse'
        required: true
      responses:
        "200":
          description: "An Employee Course Enrollment is updated, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
  /{clientNamespace}/V1/Employees/{xRefCode}/LaborDefaults:
    get:
      tags:
      - EmployeeDefaultLabor
      summary: GET EmployeeDefaultLabor Details
      operationId: EmployeeDefaultLabor_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ whose data will be retrieved.  The value provided must be the exact match\
          \ for an employee; otherwise, a bad request (400) error will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: contextDate
        in: query
        description: "The Context Date value is an “as-of” date used to determine\
          \ which employee data to search when records have specific start and end\
          \ dates.  The service defaults to the current datetime if the requester\
          \ does not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: contextDateRangeFrom
        in: query
        description: "The Context Date Range From value is the start of the range\
          \ of dates used to determine which employee data to search when records\
          \ have specific start and end dates.  The service defaults to null if the\
          \ requester does not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: contextDateRangeTo
        in: query
        description: "The Context Date Range To value is the end of the range of dates\
          \ to determine which employee data to search when records have specific\
          \ start and end dates.  The service defaults to null if the requester does\
          \ not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: The EmployeeDefaultLabor with the requested XRefCode
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeDefaultLabor'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeDefaultLabor'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeDefaultLabor'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
      - EmployeeDefaultLabor
      summary: POST a EmployeeDefaultLabor
      operationId: EmployeeDefaultLabor_Post_By_employeeDefaultLabor_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be updated.  The value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeDefaultLabor'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeDefaultLabor'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeDefaultLabor'
        required: true
      responses:
        "200":
          description: "An EmployeeDefaultLabor is created, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
      - EmployeeDefaultLabor
      summary: PATCH a EmployeeDefaultLabor
      operationId: EmployeeDefaultLabor_Patch_By_employeeDefaultLabor_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be updated.  The value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeDefaultLabor'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeDefaultLabor'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeDefaultLabor'
        required: true
      responses:
        "200":
          description: "The EmployeeDefaultLabor is updated, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/DependentsBeneficiaries:
    get:
      tags:
      - EmployeeDependentsBeneficiaries
      summary: GET EmployeeDependentsBeneficiaries Details
      operationId: EmployeeDependentsBeneficiaries_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ whose data will be retrieved.  The value provided must be the exact match\
          \ for an employee; otherwise, a bad request (400) error will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: contextDate
        in: query
        description: "The Context Date value is an “as-of” date used to determine\
          \ which employee data to search when records have specific start and end\
          \ dates.  The service defaults to the current datetime if the requester\
          \ does not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: contextDateRangeFrom
        in: query
        description: "The Context Date Range From value is the start of the range\
          \ of dates used to determine which employee data to search when records\
          \ have specific start and end dates.  The service defaults to null if the\
          \ requester does not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: contextDateRangeTo
        in: query
        description: "The Context Date Range To value is the end of the range of dates\
          \ to determine which employee data to search when records have specific\
          \ start and end dates.  The service defaults to null if the requester does\
          \ not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: The EmployeeDependentsBeneficiaries with the requested XRefCode
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeDependentBeneficiary'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeDependentBeneficiary'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeDependentBeneficiary'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/DEUTax/DEUEmployeeWageTax:
    get:
      tags:
      - EmployeeDEUTax
      summary: GET EmployeeWageTax Details
      operationId: EmployeeDEUTax_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ whose data will be retrieved.  The value provided must be the exact match\
          \ for an employee; otherwise, a bad request (400) error will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: contextDate
        in: query
        description: "The Context Date value is an “as-of” date used to determine\
          \ which employee data to search when records have specific start and end\
          \ dates.  The service defaults to the current datetime if the requester\
          \ does not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: contextDateRangeFrom
        in: query
        description: "The Context Date Range From value is the start of the range\
          \ of dates used to determine which employee data to search when records\
          \ have specific start and end dates.  The service defaults to null if the\
          \ requester does not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: contextDateRangeTo
        in: query
        description: "The Context Date Range To value is the end of the range of dates\
          \ to determine which employee data to search when records have specific\
          \ start and end dates.  The service defaults to null if the requester does\
          \ not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: The EmployeeWageTax with the requested XRefCode
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableDEUEmployeeWageTax'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableDEUEmployeeWageTax'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableDEUEmployeeWageTax'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
      - EmployeeDEUTax
      summary: POST an Employee Wage Tax
      operationId: EmployeeDEUTax_Post_By_deuEmployeeWageTax_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be updated.  The value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DEUEmployeeWageTax'
          text/json:
            schema:
              $ref: '#/components/schemas/DEUEmployeeWageTax'
          text/html:
            schema:
              $ref: '#/components/schemas/DEUEmployeeWageTax'
        required: true
      responses:
        "200":
          description: "An Employee Wage Tax is created, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
    patch:
      tags:
      - EmployeeDEUTax
      summary: PATCH (Update) an Employee Wage Tax
      operationId: EmployeeDEUTax_Patch_By_deuEmployeeWageTax_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be updated.  The value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DEUEmployeeWageTax'
          text/json:
            schema:
              $ref: '#/components/schemas/DEUEmployeeWageTax'
          text/html:
            schema:
              $ref: '#/components/schemas/DEUEmployeeWageTax'
        required: true
      responses:
        "200":
          description: "An Employee Wage Tax is updated, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
  /{clientNamespace}/V1/Employees/{xRefCode}/DEUTax/SocialInsurance:
    get:
      tags:
      - EmployeeDEUTaxSocialInsurance
      summary: GET Employee Social Insurance Details
      operationId: EmployeeDEUTaxSocialInsurance_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ whose data will be retrieved.  The value provided must be the exact match\
          \ for an employee; otherwise, a bad request (400) error will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: contextDate
        in: query
        description: "The Context Date value is an “as-of” date used to determine\
          \ which employee data to search when records have specific start and end\
          \ dates.  The service defaults to the current datetime if the requester\
          \ does not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: contextDateRangeFrom
        in: query
        description: "The Context Date Range From value is the start of the range\
          \ of dates used to determine which employee data to search when records\
          \ have specific start and end dates.  The service defaults to null if the\
          \ requester does not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: contextDateRangeTo
        in: query
        description: "The Context Date Range To value is the end of the range of dates\
          \ to determine which employee data to search when records have specific\
          \ start and end dates.  The service defaults to null if the requester does\
          \ not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: The Employee Social Insurance details with the requested Employee
            XRefCode
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableDEUTaxSocialInsurance'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableDEUTaxSocialInsurance'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableDEUTaxSocialInsurance'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
      - EmployeeDEUTaxSocialInsurance
      summary: POST Employee Social Insurance Details
      operationId: EmployeeDEUTaxSocialInsurance_Post_By_deuEmployeeSocialInsurance_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be updated.  The value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DEUTaxSocialInsurance'
          text/json:
            schema:
              $ref: '#/components/schemas/DEUTaxSocialInsurance'
          text/html:
            schema:
              $ref: '#/components/schemas/DEUTaxSocialInsurance'
        required: true
      responses:
        "200":
          description: "An Employee Social Insurance is created, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
    patch:
      tags:
      - EmployeeDEUTaxSocialInsurance
      summary: PATCH (Update) aEmployee Social Insurance Details
      operationId: EmployeeDEUTaxSocialInsurance_Patch_By_deuEmployeeSocialInsurance_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be updated.  The value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DEUTaxSocialInsurance'
          text/json:
            schema:
              $ref: '#/components/schemas/DEUTaxSocialInsurance'
          text/html:
            schema:
              $ref: '#/components/schemas/DEUTaxSocialInsurance'
        required: true
      responses:
        "200":
          description: "An Employee Social Insurance is updated, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
  /{clientNamespace}/V1/Employees/{xRefCode}/DirectDeposits:
    get:
      tags:
      - EmployeeDirectDeposit
      summary: GET EmployeeDirectDeposit Details
      operationId: EmployeeDirectDeposit_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ whose data will be retrieved.  The value provided must be the exact match\
          \ for an employee; otherwise, a bad request (400) error will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: contextDate
        in: query
        description: "The Context Date value is an “as-of” date used to determine\
          \ which employee data to search when records have specific start and end\
          \ dates.  The service defaults to the current datetime if the requester\
          \ does not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: contextDateRangeFrom
        in: query
        description: "The Context Date Range From value is the start of the range\
          \ of dates used to determine which employee data to search when records\
          \ have specific start and end dates.  The service defaults to null if the\
          \ requester does not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: contextDateRangeTo
        in: query
        description: "The Context Date Range To value is the end of the range of dates\
          \ to determine which employee data to search when records have specific\
          \ start and end dates.  The service defaults to null if the requester does\
          \ not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: The EmployeeDirectDeposit with the requested XRefCode
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeDirectDeposit'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeDirectDeposit'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeDirectDeposit'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/Disabilities:
    get:
      tags:
      - EmployeeDisability
      summary: GET EmployeeDisability Details
      operationId: EmployeeDisability_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ whose data will be retrieved.  The value provided must be the exact match\
          \ for an employee; otherwise, a bad request (400) error will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: contextDate
        in: query
        description: "The Context Date value is an “as-of” date used to determine\
          \ which employee data to search when records have specific start and end\
          \ dates.  The service defaults to the current datetime if the requester\
          \ does not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: contextDateRangeFrom
        in: query
        description: "The Context Date Range From value is the start of the range\
          \ of dates used to determine which employee data to search when records\
          \ have specific start and end dates.  The service defaults to null if the\
          \ requester does not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: contextDateRangeTo
        in: query
        description: "The Context Date Range To value is the end of the range of dates\
          \ to determine which employee data to search when records have specific\
          \ start and end dates.  The service defaults to null if the requester does\
          \ not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: The EmployeeDisabilityController with the requested XRefCode
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeDisability'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeDisability'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeDisability'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
      - EmployeeDisability
      summary: POST an EmployeeDisability
      operationId: EmployeeDisability_Post_By_employeeDisability_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be updated.  The value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeDisability'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeDisability'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeDisability'
        required: true
      responses:
        "200":
          description: "A EmployeeDisability is created, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
      - EmployeeDisability
      summary: PATCH an EmployeeDisability
      operationId: EmployeeDisability_Patch_By_employeeDisability_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be updated.  The value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeDisability'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeDisability'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeDisability'
        required: true
      responses:
        "200":
          description: "The EmployeeDisability is updated, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/EIRates:
    get:
      tags:
      - EmployeeEIRate
      summary: GET EmployeeEIRate Details
      operationId: EmployeeEIRate_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ whose data will be retrieved.  The value provided must be the exact match\
          \ for an employee; otherwise, a bad request (400) error will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: contextDate
        in: query
        description: "The Context Date value is an “as-of” date used to determine\
          \ which employee data to search when records have specific start and end\
          \ dates.  The service defaults to the current datetime if the requester\
          \ does not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: contextDateRangeFrom
        in: query
        description: "The Context Date Range From value is the start of the range\
          \ of dates used to determine which employee data to search when records\
          \ have specific start and end dates.  The service defaults to null if the\
          \ requester does not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: contextDateRangeTo
        in: query
        description: "The Context Date Range To value is the end of the range of dates\
          \ to determine which employee data to search when records have specific\
          \ start and end dates.  The service defaults to null if the requester does\
          \ not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: The EmployeeEIRate with the requested XRefCode
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeCANEmploymentInsuranceRate'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeCANEmploymentInsuranceRate'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeCANEmploymentInsuranceRate'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/EmploymentAgreements:
    get:
      tags:
      - EmployeeEmploymentAgreement
      summary: GET EmployeeEmploymentAgreement Details
      operationId: EmployeeEmploymentAgreement_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ whose data will be retrieved.  The value provided must be the exact match\
          \ for an employee; otherwise, a bad request (400) error will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: contextDate
        in: query
        description: "The Context Date value is an “as-of” date used to determine\
          \ which employee data to search when records have specific start and end\
          \ dates.  The service defaults to the current datetime if the requester\
          \ does not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: contextDateRangeFrom
        in: query
        description: "The Context Date Range From value is the start of the range\
          \ of dates used to determine which employee data to search when records\
          \ have specific start and end dates.  The service defaults to null if the\
          \ requester does not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: contextDateRangeTo
        in: query
        description: "The Context Date Range To value is the end of the range of dates\
          \ to determine which employee data to search when records have specific\
          \ start and end dates.  The service defaults to null if the requester does\
          \ not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: The EmployeeEmploymentAgreement with the requested XRefCode
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeEmploymentAgreement'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeEmploymentAgreement'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeEmploymentAgreement'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
      - EmployeeEmploymentAgreement
      summary: POST a EmployeeEmploymentAgreement
      operationId: EmployeeEmploymentAgreement_Post_By_employeeEmploymentAgreement_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be updated.  The value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST and PATCH operations.  For more information\
          \ and examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeEmploymentAgreement'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeEmploymentAgreement'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeEmploymentAgreement'
        required: true
      responses:
        "200":
          description: "An Employee is created, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
      - EmployeeEmploymentAgreement
      summary: PATCH a EmployeeEmploymentAgreement
      operationId: EmployeeEmploymentAgreement_Patch_By_employeeEmploymentAgreement_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be updated.  The value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST and PATCH operations.  For more information\
          \ and examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeEmploymentAgreement'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeEmploymentAgreement'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeEmploymentAgreement'
        required: true
      responses:
        "200":
          description: "The EmployeeEmploymentAgreement is updated, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/EmploymentStatuses:
    get:
      tags:
      - EmployeeEmploymentStatus
      summary: GET EmploymentStatus Details
      operationId: EmployeeEmploymentStatus_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ whose data will be retrieved.  The value provided must be the exact match\
          \ for an employee; otherwise, a bad request (400) error will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: contextDate
        in: query
        description: "The Context Date value is an “as-of” date used to determine\
          \ which employee data to search when records have specific start and end\
          \ dates.  The service defaults to the current datetime if the requester\
          \ does not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: contextDateRangeFrom
        in: query
        description: "The Context Date Range From value is the start of the range\
          \ of dates used to determine which employee data to search when records\
          \ have specific start and end dates.  The service defaults to null if the\
          \ requester does not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: contextDateRangeTo
        in: query
        description: "The Context Date Range To value is the end of the range of dates\
          \ to determine which employee data to search when records have specific\
          \ start and end dates.  The service defaults to null if the requester does\
          \ not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: The Employment Statuses of employee with the requested XRefCode
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeEmploymentStatus'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeEmploymentStatus'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeEmploymentStatus'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
      - EmployeeEmploymentStatus
      summary: POST an EmploymentStatus
      operationId: EmployeeEmploymentStatus_Post_By_employmentStatus_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be updated.  The value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST and PATCH operations.  For more information\
          \ and examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeEmploymentStatus'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeEmploymentStatus'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeEmploymentStatus'
        required: true
      responses:
        "200":
          description: "An EmploymentStatus is created, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
      - EmployeeEmploymentStatus
      summary: PATCH an EmploymentStatus
      operationId: EmployeeEmploymentStatus_Patch_By_employmentStatus_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be updated.  The value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST and PATCH operations.  For more information\
          \ and examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeEmploymentStatus'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeEmploymentStatus'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeEmploymentStatus'
        required: true
      responses:
        "200":
          description: "The EmploymentStatus is updated, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/EmploymentStatuses/Replacement:
    patch:
      tags:
      - EmployeeEmploymentStatus
      summary: Replace EmploymentStatuses
      operationId: EmployeeEmploymentStatus_Replace_By_employmentStatus_xRefCode_replaceFrom_replaceTo_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the Employee\
          \ for whom the subordinate data will be replaced.\r\nThe value provided\
          \ must be the exact match for an Employee; otherwise, a bad request (400)\
          \ error will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: replaceFrom
        in: query
        description: The date from which all EmploymentStatuses will be replaced
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: replaceTo
        in: query
        description: The date up to which all EmploymentStatuses will be replaced
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, validate the request\
          \ without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The new JSON-formatted EmploymentStatus with which to replace\
          \ the deleted ones\r\nFor more information and examples, please refer to\
          \ the Dayforce Web Services RESTful Developer's Guide."
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeEmploymentStatus'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeEmploymentStatus'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeEmploymentStatus'
        required: true
      responses:
        "200":
          description: The Employee's Employment Statuses are replaced within the
            given date range; no response body
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/EmploymentTypes:
    get:
      tags:
      - EmployeeEmploymentType
      summary: GET EmployeeEmploymentType Details
      operationId: EmployeeEmploymentType_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ whose data will be retrieved.  The value provided must be the exact match\
          \ for an employee; otherwise, a bad request (400) error will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: contextDate
        in: query
        description: "The Context Date value is an “as-of” date used to determine\
          \ which employee data to search when records have specific start and end\
          \ dates.  The service defaults to the current datetime if the requester\
          \ does not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: contextDateRangeFrom
        in: query
        description: "The Context Date Range From value is the start of the range\
          \ of dates used to determine which employee data to search when records\
          \ have specific start and end dates.  The service defaults to null if the\
          \ requester does not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: contextDateRangeTo
        in: query
        description: "The Context Date Range To value is the end of the range of dates\
          \ to determine which employee data to search when records have specific\
          \ start and end dates.  The service defaults to null if the requester does\
          \ not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: The EmployeeEmploymentType with the requested XRefCode
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeEmploymentType'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeEmploymentType'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeEmploymentType'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
      - EmployeeEmploymentType
      summary: POST an EmployeeEmploymentType
      operationId: EmployeeEmploymentType_Post_By_employeeEmploymentType_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be updated.  The value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST and PATCH operations.  For more information\
          \ and examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeEmploymentType'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeEmploymentType'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeEmploymentType'
        required: true
      responses:
        "200":
          description: "An EmployeeEmploymentType is created, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
      - EmployeeEmploymentType
      summary: PATCH an EmployeeEmploymentType
      operationId: EmployeeEmploymentType_Patch_By_employeeEmploymentType_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be updated.  The value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST and PATCH operations.  For more information\
          \ and examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeEmploymentType'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeEmploymentType'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeEmploymentType'
        required: true
      responses:
        "200":
          description: "The EmployeeEmploymentType is updated, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/Ethnicities:
    get:
      tags:
      - EmployeeEthnicity
      summary: GET EmployeeEthnicity Details
      operationId: EmployeeEthnicity_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ whose data will be retrieved.  The value provided must be the exact match\
          \ for an employee; otherwise, a bad request (400) error will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: contextDate
        in: query
        description: "The Context Date value is an “as-of” date used to determine\
          \ which employee data to search when records have specific start and end\
          \ dates.  The service defaults to the current datetime if the requester\
          \ does not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: contextDateRangeFrom
        in: query
        description: "The Context Date Range From value is the start of the range\
          \ of dates used to determine which employee data to search when records\
          \ have specific start and end dates.  The service defaults to null if the\
          \ requester does not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: contextDateRangeTo
        in: query
        description: "The Context Date Range To value is the end of the range of dates\
          \ to determine which employee data to search when records have specific\
          \ start and end dates.  The service defaults to null if the requester does\
          \ not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: The EmployeeEthnicity with the requested XRefCode
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeEthnicity'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeEthnicity'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeEthnicity'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
      - EmployeeEthnicity
      summary: POST EmployeeEthnicity Details
      operationId: EmployeeEthnicity_Post_By_employeeEthnicity_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be updated.  The value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST and PATCH operations.  For more information\
          \ and examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeEthnicity'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeEthnicity'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeEthnicity'
        required: true
      responses:
        "200":
          description: "A EmployeeEthnicity Detail is created, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
      - EmployeeEthnicity
      summary: PATCH EmployeeEthnicity Details
      operationId: EmployeeEthnicity_Patch_By_employeeEthnicity_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be updated.  The value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeEthnicity'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeEthnicity'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeEthnicity'
        required: true
      responses:
        "200":
          description: "The EmployeeEthnicity Detail is updated, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/v1/EmployeeExportJobs/Status/{backgroundJobQueueItemId}:
    get:
      tags:
      - EmployeeExportJobs
      summary: Get the status of Job Queue tables.
      operationId: EmployeeExportJobs_Get_By_backgroundJobQueueItemId_clientNamespace
      parameters:
      - name: backgroundJobQueueItemId
        in: path
        description: To find a status of employee export background job
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: Job Status and Access API URL
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
  /{clientNamespace}/v1/EmployeeExportJobs/Data/{jobId}:
    get:
      tags:
      - EmployeeExportJobs
      summary: Get bulk employee of data as a string in json format
      operationId: EmployeeExportJobs_Get_By_jobId_clientNamespace
      parameters:
      - name: jobId
        in: path
        description: To get background job processed data for employee export
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: Returns a page of employee data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayloadIEnumerableEmployee'
            text/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayloadIEnumerableEmployee'
            text/html:
              schema:
                $ref: '#/components/schemas/PaginatedPayloadIEnumerableEmployee'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
  /{clientNamespace}/V1/EmployeeExportJobs:
    post:
      tags:
      - EmployeeExportJobs
      summary: Add new HR Bulk Export details into Job Queue tables.
      operationId: EmployeeExportJobs_Post_By_export_isValidateOnly_clientNamespace
      parameters:
      - name: isValidateOnly
        in: query
        description: This parameter used to run a test case without fail
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST. For more information and examples, please\
          \ refer to the Dayforce Web Services RESTful Developer's Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeExportParams'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeExportParams'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeExportParams'
        required: true
      responses:
        "200":
          description: A HR Bulk Export is created with an empty response body
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadString'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadString'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadString'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadString'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadString'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadString'
  /{clientNamespace}/V1/Employees/{xRefCode}/EmployeeGlobalProperties:
    get:
      tags:
      - EmployeeGlobalPropertyValue
      summary: GET EmployeeGlobalPropertyValue Details
      operationId: EmployeeGlobalPropertyValue_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ whose data will be retrieved.  The value provided must be the exact match\
          \ for an employee; otherwise, a bad request (400) error will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: contextDate
        in: query
        description: "The Context Date value is an “as-of” date used to determine\
          \ which employee data to search when records have specific start and end\
          \ dates.  The service defaults to the current datetime if the requester\
          \ does not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: contextDateRangeFrom
        in: query
        description: "The Context Date Range From value is the start of the range\
          \ of dates used to determine which employee data to search when records\
          \ have specific start and end dates.  The service defaults to null if the\
          \ requester does not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: contextDateRangeTo
        in: query
        description: "The Context Date Range To value is the end of the range of dates\
          \ to determine which employee data to search when records have specific\
          \ start and end dates.  The service defaults to null if the requester does\
          \ not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: The EmployeeGlobalPropertyValue with the requested XRefCode
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeGlobalPropertyValue'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeGlobalPropertyValue'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeGlobalPropertyValue'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
      - EmployeeGlobalPropertyValue
      summary: POST a EmployeeGlobalPropertyValue
      operationId: EmployeeGlobalPropertyValue_Post_By_employeeGlobalPropertyValue_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be updated.  The value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST and PATCH operations.  For more information\
          \ and examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeGlobalPropertyValue'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeGlobalPropertyValue'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeGlobalPropertyValue'
        required: true
      responses:
        "200":
          description: "An Employee Global Property is created, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
      - EmployeeGlobalPropertyValue
      summary: PATCH an EmployeeGlobalPropertyValue
      operationId: EmployeeGlobalPropertyValue_Patch_By_employeeGlobalPropertyValue_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be updated.  The value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST and PATCH operations.  For more information\
          \ and examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeGlobalPropertyValue'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeGlobalPropertyValue'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeGlobalPropertyValue'
        required: true
      responses:
        "200":
          description: "The EmployeeGlobalPropertyValue is updated, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Payroll/EmployeeGLSplits:
    get:
      tags:
      - EmployeeGLSplits
      summary: GET the list of employee gl splits.
      operationId: EmployeeGLSplits_Get_By_payGroupXRefCode_employeeXRefCodes_splitStatus_pageSize_clientNamespace
      parameters:
      - name: payGroupXRefCode
        in: query
        description: The pay group reference code
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: employeeXRefCodes
        in: query
        description: The comma separated employee XRef codes
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: splitStatus
        in: query
        description: Filter to fetch all or current/future effective GL splits. Value
          can be All or Active. Default value is Active
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: Number of records to be loaded
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: Employee GL Splits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayloadIEnumerableEmployeeGLSplits'
            text/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayloadIEnumerableEmployeeGLSplits'
            text/html:
              schema:
                $ref: '#/components/schemas/PaginatedPayloadIEnumerableEmployeeGLSplits'
        "400":
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
    post:
      tags:
      - EmployeeGLSplits
      summary: POST a list of employee GLSplitSets.
      operationId: EmployeeGLSplits_Post_By_glSplits_isValidateOnly_clientNamespace
      parameters:
      - name: isValidateOnly
        in: query
        description: "If TRUE, POST operations validate the request without queue\
          \ the import. The default value is FALSE. Note, POST operation will only\
          \ validate data structure"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST operation. For more information and examples,\
          \ please refer to the Dayforce Web Services RESTful Developer's Guide"
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/EmployeeGLSplitUpsert'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/EmployeeGLSplitUpsert'
          text/html:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/EmployeeGLSplitUpsert'
        required: true
      responses:
        "200":
          description: OK response
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed or has validation errors.  Correct and
            resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
    patch:
      tags:
      - EmployeeGLSplits
      summary: PATCH a list of employee GLSplitSets.
      operationId: EmployeeGLSplits_Patch_By_glSplits_isValidateOnly_clientNamespace
      parameters:
      - name: isValidateOnly
        in: query
        description: "If TRUE, PATCH operations validate the request without queue\
          \ the import. The default value is FALSE. Note, PATCH operation will only\
          \ validate data structure"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in PATCH operation. For more information and\
          \ examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/EmployeeGLSplitUpsert'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/EmployeeGLSplitUpsert'
          text/html:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/EmployeeGLSplitUpsert'
        required: true
      responses:
        "200":
          description: OK response
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed or has validation errors.  Correct and
            resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
  /{clientNamespace}/V1/Employees/{xRefCode}/HighlyCompensatedEmployees:
    get:
      tags:
      - EmployeeHCE
      summary: GET HighlyCompensatedEmployee Details
      operationId: EmployeeHCE_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ whose data will be retrieved.  The value provided must be the exact match\
          \ for an employee; otherwise, a bad request (400) error will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: contextDate
        in: query
        description: "The Context Date value is an “as-of” date used to determine\
          \ which employee data to search when records have specific start and end\
          \ dates.  The service defaults to the current datetime if the requester\
          \ does not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: contextDateRangeFrom
        in: query
        description: "The Context Date Range From value is the start of the range\
          \ of dates used to determine which employee data to search when records\
          \ have specific start and end dates.  The service defaults to null if the\
          \ requester does not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: contextDateRangeTo
        in: query
        description: "The Context Date Range To value is the end of the range of dates\
          \ to determine which employee data to search when records have specific\
          \ start and end dates.  The service defaults to null if the requester does\
          \ not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: The HighlyCompensatedEmployee with the requested XRefCode
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeHighlyCompensatedEmployeeIndicator'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeHighlyCompensatedEmployeeIndicator'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeHighlyCompensatedEmployeeIndicator'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
      - EmployeeHCE
      summary: POST a HighlyCompensatedEmployee
      operationId: EmployeeHCE_Post_By_highlyCompensatedEmpoyee_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be updated.  The value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST and PATCH operations.  For more information\
          \ and examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeHighlyCompensatedEmployeeIndicator'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeHighlyCompensatedEmployeeIndicator'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeHighlyCompensatedEmployeeIndicator'
        required: true
      responses:
        "200":
          description: "A HighlyCompensatedEmployee is created, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
      - EmployeeHCE
      summary: PATCH a HighlyCompensatedEmployee
      operationId: EmployeeHCE_Patch_By_highlyCompensatedEmpoyee_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be updated.  The value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST and PATCH operations.  For more information\
          \ and examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeHighlyCompensatedEmployeeIndicator'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeHighlyCompensatedEmployeeIndicator'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeHighlyCompensatedEmployeeIndicator'
        required: true
      responses:
        "200":
          description: "The HighlyCompensatedEmployee is updated, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/HealthWellnessDetails:
    get:
      tags:
      - EmployeeHealthWellness
      summary: GET EmployeeHealthWellness Details
      operationId: EmployeeHealthWellness_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ whose data will be retrieved.  The value provided must be the exact match\
          \ for an employee; otherwise, a bad request (400) error will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: contextDate
        in: query
        description: "The Context Date value is an “as-of” date used to determine\
          \ which employee data to search when records have specific start and end\
          \ dates.  The service defaults to the current datetime if the requester\
          \ does not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: contextDateRangeFrom
        in: query
        description: "The Context Date Range From value is the start of the range\
          \ of dates used to determine which employee data to search when records\
          \ have specific start and end dates.  The service defaults to null if the\
          \ requester does not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: contextDateRangeTo
        in: query
        description: "The Context Date Range To value is the end of the range of dates\
          \ to determine which employee data to search when records have specific\
          \ start and end dates.  The service defaults to null if the requester does\
          \ not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: The EmployeeHealthWellness with the requested XRefCode
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeHealthWellness'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeHealthWellness'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeHealthWellness'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
      - EmployeeHealthWellness
      summary: POST a EmployeeHealthWellness
      operationId: EmployeeHealthWellness_Post_By_employeeHealthWellness_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be updated.  The value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST and PATCH operations.  For more information\
          \ and examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeHealthWellness'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeHealthWellness'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeHealthWellness'
        required: true
      responses:
        "200":
          description: "A EmployeeHealthWellness is created, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
      - EmployeeHealthWellness
      summary: PATCH a EmployeeHealthWellness
      operationId: EmployeeHealthWellness_Patch_By_employeeHealthWellness_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be updated.  The value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST and PATCH operations.  For more information\
          \ and examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeHealthWellness'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeHealthWellness'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeHealthWellness'
        required: true
      responses:
        "200":
          description: "The EmployeeHealthWellness is updated, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/HRIncidents:
    get:
      tags:
      - EmployeeHRIncident
      summary: GET EmployeeHRIncident Details
      operationId: EmployeeHRIncident_Get_By_xRefCode_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ whose data will be retrieved.  The value provided must be the exact match\
          \ for an employee; otherwise, a bad request (400) error will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: The EmployeeHRIncident with the requested XRefCode
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeHRIncident'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeHRIncident'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeHRIncident'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
      - EmployeeHRIncident
      summary: POST an EmployeeHRIncident
      operationId: EmployeeHRIncident_Post_By_incident_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be updated.  The value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeHRIncident'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeHRIncident'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeHRIncident'
        required: true
      responses:
        "200":
          description: "An EmployeeHRIncident is created, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/HRPolicies:
    get:
      tags:
      - EmployeeHRPolicy
      summary: GET EmployeeHRPolicy Details
      operationId: EmployeeHRPolicy_Get_By_xRefCode_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ whose data will be retrieved.  The value provided must be the exact match\
          \ for an employee; otherwise, a bad request (400) error will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: The Employee HRPolicy with the requested XRefCode
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeHRPolicy'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeHRPolicy'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeHRPolicy'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
      - EmployeeHRPolicy
      summary: POST an EmployeeHRPolicy
      operationId: EmployeeHRPolicy_Post_By_employeeHRPolicy_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be updated.  The value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST operation\
          \ validates the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST and PATCH operations.  For more information\
          \ and examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeHRPolicy'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeHRPolicy'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeHRPolicy'
        required: true
      responses:
        "200":
          description: "An Employee HRPolicy is created, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
  /{clientNamespace}/V1/Employees/{xRefCode}/IRLTax/EWSS:
    get:
      tags:
      - EmployeeIRLTaxEWSS
      summary: GET an EmployeeIRLTax
      operationId: EmployeeIRLTaxEWSS_Get_By_xRefCode_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ whose data will be retrieved.  The value provided must be the exact match\
          \ for an employee; otherwise, a bad request (400) error will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: The EmployeeIRLTaxEWSS with the requested XRefCode
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeIRLTaxEWSS'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeIRLTaxEWSS'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeIRLTaxEWSS'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
      - EmployeeIRLTaxEWSS
      summary: POST an EmployeeIRLTax
      operationId: EmployeeIRLTaxEWSS_Post_By_employeeIRLTaxEWSS_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be updated.  The value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST and PATCH operations.  For more information\
          \ and examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeIRLTaxEWSS'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeIRLTaxEWSS'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeIRLTaxEWSS'
        required: true
      responses:
        "200":
          description: "An EmployeeIRLTaxEWSS is created, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
      - EmployeeIRLTaxEWSS
      summary: PATCH an EmployeeIRLTax
      operationId: EmployeeIRLTaxEWSS_Patch_By_employeeIRLTaxEWSS_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be updated.  The value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST and PATCH operations.  For more information\
          \ and examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeIRLTaxEWSS'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeIRLTaxEWSS'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeIRLTaxEWSS'
        required: true
      responses:
        "200":
          description: "The EmployeeIRLTaxEWSS is updated, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/IRLTax/PAYEExclusion:
    get:
      tags:
      - EmployeeIRLTaxPAYEExclusion
      summary: GET EmployeeIRLTaxPAYEExclusion Details
      operationId: EmployeeIRLTaxPAYEExclusion_Get_By_xRefCode_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ whose data will be retrieved.  The value provided must be the exact match\
          \ for an employee; otherwise, a bad request (400) error will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: The EmployeeIRLTaxPAYEExclusion with the requested XRefCode
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeIRLTaxPAYEExclusion'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeIRLTaxPAYEExclusion'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeIRLTaxPAYEExclusion'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
      - EmployeeIRLTaxPAYEExclusion
      summary: POST an EmployeeIRLTaxPAYEExclusion
      operationId: EmployeeIRLTaxPAYEExclusion_Post_By_employeeIRLTaxPAYEExclusion_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be updated.  The value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeIRLTaxPAYEExclusion'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeIRLTaxPAYEExclusion'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeIRLTaxPAYEExclusion'
        required: true
      responses:
        "200":
          description: "An EmployeeIRLTaxPAYEExclusion is created, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
      - EmployeeIRLTaxPAYEExclusion
      summary: PATCH an EmployeeIRLTaxPAYEExclusion
      operationId: EmployeeIRLTaxPAYEExclusion_Patch_By_employeeIRLTaxPAYEExclusion_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be updated.  The value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeIRLTaxPAYEExclusion'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeIRLTaxPAYEExclusion'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeIRLTaxPAYEExclusion'
        required: true
      responses:
        "200":
          description: "The EmployeeIRLTaxPAYEExclusion is updated, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/IRLTax/PRSI:
    get:
      tags:
      - EmployeeIRLTaxPRSI
      summary: GET EmployeeIRLTax Details
      operationId: EmployeeIRLTaxPRSI_Get_By_xRefCode_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ whose data will be retrieved.  The value provided must be the exact match\
          \ for an employee; otherwise, a bad request (400) error will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: The EmployeeIRLTaxPRSI with the requested XRefCode
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeIRLTaxPRSI'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeIRLTaxPRSI'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeIRLTaxPRSI'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
      - EmployeeIRLTaxPRSI
      summary: POST a EmployeeIRLTax
      operationId: EmployeeIRLTaxPRSI_Post_By_employeeIRLTaxPRSI_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be updated.  The value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST and PATCH operations.  For more information\
          \ and examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeIRLTaxPRSI'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeIRLTaxPRSI'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeIRLTaxPRSI'
        required: true
      responses:
        "200":
          description: "An EmployeeIRLTaxPRSI is created, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
      - EmployeeIRLTaxPRSI
      summary: PATCH a EmployeeIRLTax
      operationId: EmployeeIRLTaxPRSI_Patch_By_employeeIRLTaxPRSI_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be updated.  The value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST and PATCH operations.  For more information\
          \ and examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeIRLTaxPRSI'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeIRLTaxPRSI'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeIRLTaxPRSI'
        required: true
      responses:
        "200":
          description: "The EmployeeIRLTaxPRSI is updated, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/IRLTax/RPN:
    get:
      tags:
      - EmployeeIRLTaxRPN
      summary: GET an EmployeeIRLTax
      operationId: EmployeeIRLTaxRPN_Get_By_xRefCode_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ whose data will be retrieved.  The value provided must be the exact match\
          \ for an employee; otherwise, a bad request (400) error will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: The EmployeeIRLTaxRPN with the requested XRefCode
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeIRLTaxRPN'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeIRLTaxRPN'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeIRLTaxRPN'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
      - EmployeeIRLTaxRPN
      summary: POST an EmployeeIRLTax
      operationId: EmployeeIRLTaxRPN_Post_By_employeeIRLTaxRPN_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be updated.  The value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST and PATCH operations.  For more information\
          \ and examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeIRLTaxRPN'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeIRLTaxRPN'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeIRLTaxRPN'
        required: true
      responses:
        "200":
          description: "An EmployeeIRLTaxRPN is created, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
      - EmployeeIRLTaxRPN
      summary: PATCH an EmployeeIRLTax
      operationId: EmployeeIRLTaxRPN_Patch_By_employeeRPN_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be updated.  The value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeIRLTaxRPN'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeIRLTaxRPN'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeIRLTaxRPN'
        required: true
      responses:
        "200":
          description: "The EmployeeIRLTaxRPN is updated, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/Locations:
    get:
      tags:
      - EmployeeLocation
      summary: GET EmployeeLocation Details
      operationId: EmployeeLocation_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ whose data will be retrieved.  The value provided must be the exact match\
          \ for an employee; otherwise, a bad request (400) error will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: contextDate
        in: query
        description: "The Context Date value is an “as-of” date used to determine\
          \ which employee data to search when records have specific start and end\
          \ dates.  The service defaults to the current datetime if the requester\
          \ does not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: contextDateRangeFrom
        in: query
        description: "The Context Date Range From value is the start of the range\
          \ of dates used to determine which employee data to search when records\
          \ have specific start and end dates.  The service defaults to null if the\
          \ requester does not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: contextDateRangeTo
        in: query
        description: "The Context Date Range To value is the end of the range of dates\
          \ to determine which employee data to search when records have specific\
          \ start and end dates.  The service defaults to null if the requester does\
          \ not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: The EmployeeLocation with the requested XRefCode
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeLocation'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeLocation'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeLocation'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
      - EmployeeLocation
      summary: POST a EmployeeLocation
      operationId: EmployeeLocation_Post_By_location_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be updated.  The value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST and PATCH operations.  For more information\
          \ and examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeLocation'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeLocation'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeLocation'
        required: true
      responses:
        "200":
          description: "An EmployeeLocation is created, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
      - EmployeeLocation
      summary: PATCH a EmployeeLocation
      operationId: EmployeeLocation_Patch_By_location_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be updated.  The value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST and PATCH operations.  For more information\
          \ and examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeLocation'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeLocation'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeLocation'
        required: true
      responses:
        "200":
          description: "The EmployeeLocation is updated, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/EmployeeManagers:
    get:
      tags:
      - EmployeeManagers
      summary: GET EmployeeManager Details
      operationId: EmployeeManagers_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ whose data will be retrieved.  The value provided must be the exact match\
          \ for an employee; otherwise, a bad request (400) error will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: contextDate
        in: query
        description: "The Context Date value is an “as-of” date used to determine\
          \ which employee data to search when records have specific start and end\
          \ dates.  The service defaults to the current datetime if the requester\
          \ does not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: contextDateRangeFrom
        in: query
        description: "The Context Date Range From value is the start of the range\
          \ of dates used to determine which employee data to search when records\
          \ have specific start and end dates.  The service defaults to null if the\
          \ requester does not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: contextDateRangeTo
        in: query
        description: "The Context Date Range To value is the end of the range of dates\
          \ to determine which employee data to search when records have specific\
          \ start and end dates.  The service defaults to null if the requester does\
          \ not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: The EmployeeManager with the requested XRefCode
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeManager'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeManager'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeManager'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/OnboardingPolicies:
    get:
      tags:
      - EmployeeOnboardingPolicies
      summary: GET EmployeeOnboardingPolicy Details
      operationId: EmployeeOnboardingPolicies_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ whose data will be retrieved.  The value provided must be the exact match\
          \ for an employee; otherwise, a bad request (400) error will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: contextDate
        in: query
        description: "The Context Date value is an “as-of” date used to determine\
          \ which employee data to search when records have specific start and end\
          \ dates.  The service defaults to the current datetime if the requester\
          \ does not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: contextDateRangeFrom
        in: query
        description: "The Context Date Range From value is the start of the range\
          \ of dates used to determine which employee data to search when records\
          \ have specific start and end dates.  The service defaults to null if the\
          \ requester does not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: contextDateRangeTo
        in: query
        description: "The Context Date Range To value is the end of the range of dates\
          \ to determine which employee data to search when records have specific\
          \ start and end dates.  The service defaults to null if the requester does\
          \ not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: The EmployeeOnboardingPolicy with the requested XRefCode
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeOnboardingPolicy'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeOnboardingPolicy'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeOnboardingPolicy'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
      - EmployeeOnboardingPolicies
      summary: POST a EmployeeOnboardingPolicy
      operationId: EmployeeOnboardingPolicies_Post_By_employeeOnboardingPolicy_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be updated.  The value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST and PATCH operations.  For more information\
          \ and examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeOnboardingPolicy'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeOnboardingPolicy'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeOnboardingPolicy'
        required: true
      responses:
        "200":
          description: "An Employee is created, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
      - EmployeeOnboardingPolicies
      summary: PATCH a EmployeeOnboardingPolicy
      operationId: EmployeeOnboardingPolicies_Patch_By_employeeOnboardingPolicy_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be updated.  The value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST and PATCH operations.  For more information\
          \ and examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeOnboardingPolicy'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeOnboardingPolicy'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeOnboardingPolicy'
        required: true
      responses:
        "200":
          description: "The EmployeeOnboardingPolicy is updated, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/OrgUnitInfos:
    get:
      tags:
      - EmployeeOrgUnitInfo
      summary: GET EmployeeOrgUnitInfo Details
      operationId: EmployeeOrgUnitInfo_Get_By_xRefCode_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ whose data will be retrieved.  The value provided must be the exact match\
          \ for an employee; otherwise, a bad request (400) error will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: The EmployeeOrgUnitInfo with the requested XRefCode
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeOrgUnitInformation'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeOrgUnitInformation'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeOrgUnitInformation'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/EmployeePayAdjustCodeGroups:
    get:
      tags:
      - EmployeePayAdjustCodeGroup
      summary: GET EmployeePayAdjCodeGroupList Details
      operationId: EmployeePayAdjustCodeGroup_Get_By_xRefCode_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ whose data will be retrieved.  The value provided must be the exact match\
          \ for an employee; otherwise, a bad request (400) error will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: The EmployeePayAdjCodeGroupList with the requested XRefCode
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeePayAdjustCodeGroup'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeePayAdjustCodeGroup'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeePayAdjustCodeGroup'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
      - EmployeePayAdjustCodeGroup
      summary: POST a EmployeePayAdjCodeGroupList
      operationId: EmployeePayAdjustCodeGroup_Post_By_employeePayAdjCodeGroupList_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be updated.  The value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST and PATCH operations.  For more information\
          \ and examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeePayAdjustCodeGroup'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeePayAdjustCodeGroup'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeePayAdjustCodeGroup'
        required: true
      responses:
        "200":
          description: "The EmployeePayAdjCodeGroupList is created, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
      - EmployeePayAdjustCodeGroup
      summary: PATCH a EmployeePayAdjCodeGroupList
      operationId: EmployeePayAdjustCodeGroup_Patch_By_employeePayAdjCodeGroupList_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be updated.  The value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST and PATCH operations.  For more information\
          \ and examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeePayAdjustCodeGroup'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeePayAdjustCodeGroup'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeePayAdjustCodeGroup'
        required: true
      responses:
        "200":
          description: "The EmployeePayAdjCodeGroupList is updated, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/EmployeePayAdjustments:
    get:
      tags:
      - EmployeePayAdjustments
      summary: Get a list of Employee Pay Adjustments
      operationId: EmployeePayAdjustments_GetEmployeePayAdjustments_By_filterPayAdjustmentStartDate_filterPayAdjustmentEndDate_filterLastModifiedStartDateUTC_filterLastModifiedEndDateUTC_orgUnitXRefCode_employeeXRefCode_payAdjustmentCodeXRefCode_projectXRefCode_departmentXRefCode_jobXRefCode_docketXRefCode_referenceDate_managerAuthorized_employeeAuthorized_isDeleted_pageSize_clientNamespace
      parameters:
      - name: filterPayAdjustmentStartDate
        in: query
        description: "Inclusive period start date in UTC to determine which employee\
          \ pay adjustment data to retrieve. Example: 2017-01-01T00:00:00"
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: filterPayAdjustmentEndDate
        in: query
        description: "Inclusive period end date in UTC to determine which employee\
          \ pay adjustment data to retrieve. Example: 2017-01-01T00:00:00"
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: filterLastModifiedStartDateUTC
        in: query
        description: "Inclusive period last modified start date in UTC to determine\
          \ which employee pay adjustment data to retrieve. Example: 2017-01-01T00:00:00Z"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: filterLastModifiedEndDateUTC
        in: query
        description: "Inclusive period last modified end date in UTC to determine\
          \ which employee pay adjustment data to retrieve. Example: 2017-01-01T00:00:00Z"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: orgUnitXRefCode
        in: query
        description: A case-sensitive field that identifies a unique organization
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: employeeXRefCode
        in: query
        description: A case-sensitive field that identifies a unique employee
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: payAdjustmentCodeXRefCode
        in: query
        description: A case-sensitive field that identifies a unique pay adjustment
          code
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: projectXRefCode
        in: query
        description: A case-sensitive field that identifies a unique project
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: departmentXRefCode
        in: query
        description: A case-sensitive field that identifies a unique department
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: jobXRefCode
        in: query
        description: A case-sensitive field that identifies a unique job
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: docketXRefCode
        in: query
        description: A case-sensitive field that identifies a unique docket
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: referenceDate
        in: query
        description: "Inclusive period reference date in UTC to determine which employee\
          \ pay adjustment data to retrieve. Example: 2017-01-01T00:00:00"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: managerAuthorized
        in: query
        description: A flag to determine if a pay adjustment is manager authorized
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: employeeAuthorized
        in: query
        description: A flag to determine if a pay adjustment is employee authorized
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: isDeleted
        in: query
        description: A flag to determine if a pay adjustment is deleted
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: pageSize
        in: query
        description: The number of records returned per page in the paginated response
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: A collection of EmployeePayAdjustment data meeting the search
            criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayloadIEnumerableEmployeePayAdjustment'
            text/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayloadIEnumerableEmployeePayAdjustment'
            text/html:
              schema:
                $ref: '#/components/schemas/PaginatedPayloadIEnumerableEmployeePayAdjustment'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
    post:
      tags:
      - EmployeePayAdjustments
      summary: POST (Create) Employee Pay Adjustment
      operationId: EmployeePayAdjustments_Post_By_payAdjustment_isValidateOnly_isValidateLabor_clientNamespace
      parameters:
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST operations\
          \ validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: isValidateLabor
        in: query
        description: "When a TRUE value is used in this parameter, POST operations\
          \ validate against Labor Validation Engine to verify pay adjustment follows\
          \ rules/qualifiers created"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST operation.  For more information and\
          \ examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeePayAdjustmentForSubmit'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeePayAdjustmentForSubmit'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeePayAdjustmentForSubmit'
        required: true
      responses:
        "200":
          description: An employee pay adjustment is created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeePayAdjustmentPostResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/EmployeePayAdjustmentPostResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/EmployeePayAdjustmentPostResponse'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
  /{clientNamespace}/V1/EmployeePayAdjustments/{xRefCode}:
    patch:
      tags:
      - EmployeePayAdjustments
      summary: PATCH (Update) Employee Pay Adjustment
      operationId: EmployeePayAdjustments_Patch_By_payAdjustment_xRefCode_isValidateOnly_isValidateLabor_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, PATCH operations\
          \ validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: isValidateLabor
        in: query
        description: "When a TRUE value is used in this parameter, PATCH operations\
          \ validate against Labor Validation Engine to verify pay adjustment follows\
          \ rules/qualifiers created"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in PATCH operation.  For more information and\
          \ examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeePayAdjustmentForSubmit'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeePayAdjustmentForSubmit'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeePayAdjustmentForSubmit'
        required: true
      responses:
        "200":
          description: An employee pay adjustment is updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeePayAdjustmentPostResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/EmployeePayAdjustmentPostResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/EmployeePayAdjustmentPostResponse'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
  /{clientNamespace}/V1/Employees/{xRefCode}/PayGradeRates:
    get:
      tags:
      - EmployeePayGradeRate
      summary: GET EmployeePayGradeRate Details
      operationId: EmployeePayGradeRate_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ whose data will be retrieved.  The value provided must be the exact match\
          \ for an employee; otherwise, a bad request (400) error will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: contextDate
        in: query
        description: "The Context Date value is an “as-of” date used to determine\
          \ which employee data to search when records have specific start and end\
          \ dates.  The service defaults to the current datetime if the requester\
          \ does not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: contextDateRangeFrom
        in: query
        description: "The Context Date Range From value is the start of the range\
          \ of dates used to determine which employee data to search when records\
          \ have specific start and end dates.  The service defaults to null if the\
          \ requester does not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: contextDateRangeTo
        in: query
        description: "The Context Date Range To value is the end of the range of dates\
          \ to determine which employee data to search when records have specific\
          \ start and end dates.  The service defaults to null if the requester does\
          \ not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: The EmployeePayGradeRate with the requested XRefCode
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeePayGradeRate'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeePayGradeRate'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeePayGradeRate'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/EmployeePayrollTaxes:
    get:
      tags:
      - EmployeePayrollTax
      summary: GET List of Taxes for a specific employee.
      operationId: EmployeePayrollTax_Get_By_xRefCode_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ whose data will be retrieved. The value provided must be the exact match\
          \ for an employee; otherwise, a bad request (400) error will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: The EmployeePayrollTax with the requested XRefCode
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeePayrollTax'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeePayrollTax'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeePayrollTax'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeePayrollTax'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeePayrollTax'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeePayrollTax'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeePayrollTax'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeePayrollTax'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeePayrollTax'
  /{clientNamespace}/V1/Employees/{xRefCode}/EmployeePayrollTaxParameters:
    get:
      tags:
      - EmployeePayrollTaxParameter
      summary: GET List of Tax Parameters for a specific employee.
      operationId: EmployeePayrollTaxParameter_Get_By_xRefCode_contextDateRangeFrom_contextDateRangeTo_taxAuthorityInstance_legalEntityXRefCode_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ whose data will be retrieved. The value provided must be the exact match\
          \ for an employee; otherwise, a bad request (400) error will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: contextDateRangeFrom
        in: query
        description: "The Context Date Range From value is the start of the range\
          \ of dates used to determine which employee data to search when records\
          \ have specific start and end dates. The service defaults to the current\
          \ day if the requester does not specify a value. Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: contextDateRangeTo
        in: query
        description: "The Context Date Range To value is the end of the range of dates\
          \ to determine which employee data to search when records have specific\
          \ start and end dates. The service defaults to null if the requester does\
          \ not specify a value. Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: taxAuthorityInstance
        in: query
        description: "The Governmental Authority having jurisdiction over the assessment,\
          \ determination, collection or imposition of any tax. The value provided\
          \ must be an exact match to an authority assigned to the employee. Example:\
          \ USA-00000000-001"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: legalEntityXRefCode
        in: query
        description: The unique reference code which identifies the organization that
          the federal tax authorities recognize. The value provided must be an exact
          match to the Legal Entity reference to which the employee is assigned
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: The EmployeePayrollTax with the requested XRefCode
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeePayrollTaxParameter'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeePayrollTaxParameter'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeePayrollTaxParameter'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeePayrollTaxParameter'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeePayrollTaxParameter'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeePayrollTaxParameter'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeePayrollTaxParameter'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeePayrollTaxParameter'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeePayrollTaxParameter'
    post:
      tags:
      - EmployeePayrollTaxParameter
      summary: POST Tax Parameter for an employee.
      operationId: EmployeePayrollTaxParameter_Post_By_employeePayrollTaxParameter_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ whose data will be retrieved.  The value provided must be the exact match\
          \ for an employee; otherwise, a bad request (400) error will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying the updates to the database.\
          \  The default value is FALSE if parameter is not specified"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST and PATCH operations. For more information\
          \ and examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeePayrollTaxParameter'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeePayrollTaxParameter'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeePayrollTaxParameter'
        required: true
      responses:
        "200":
          description: "An EmployeePayrollTaxParameter is created, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
      - EmployeePayrollTaxParameter
      summary: PATCH Tax Parameter for an employee.
      operationId: EmployeePayrollTaxParameter_Patch_By_employeePayrollTaxParameter_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ whose data will be retrieved.  The value provided must be the exact match\
          \ for an employee; otherwise, a bad request (400) error will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying the updates to the database.\
          \  The default value is FALSE if parameter is not specified"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST and PATCH operations. For more information\
          \ and examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeePayrollTaxParameter'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeePayrollTaxParameter'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeePayrollTaxParameter'
        required: true
      responses:
        "200":
          description: "An EmployeePayrollTaxParameter is created, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/EmployeePayrollTaxParametersList:
    post:
      tags:
      - EmployeePayrollTaxParameter
      summary: POST Tax Parameter for an employee.
      operationId: EmployeePayrollTaxParameter_Post_By_employeePayrollTaxParameters_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ whose data will be retrieved.  The value provided must be the exact match\
          \ for an employee; otherwise, a bad request (400) error will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying the updates to the database.\
          \  The default value is FALSE if parameter is not specified"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST and PATCH operations. For more information\
          \ and examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/EmployeePayrollTaxParameter'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/EmployeePayrollTaxParameter'
          text/html:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/EmployeePayrollTaxParameter'
        required: true
      responses:
        "200":
          description: "EmployeePayrollTaxParameter is created, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
      - EmployeePayrollTaxParameter
      summary: PATCH Tax Parameter for an employee.
      operationId: EmployeePayrollTaxParameter_Patch_By_employeePayrollTaxParameters_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ whose data will be retrieved.  The value provided must be the exact match\
          \ for an employee; otherwise, a bad request (400) error will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying the updates to the database.\
          \  The default value is FALSE if parameter is not specified"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST and PATCH operations. For more information\
          \ and examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/EmployeePayrollTaxParameter'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/EmployeePayrollTaxParameter'
          text/html:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/EmployeePayrollTaxParameter'
        required: true
      responses:
        "200":
          description: "EmployeePayrollTaxParameter is created, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/EmployeePaySummaries:
    get:
      tags:
      - EmployeePaySummaries
      summary: GET a List of Employee pay summaries
      operationId: EmployeePaySummaries_GetEmployeePaySummaries_By_filterPaySummaryStartDate_filterPaySummaryEndDate_employeeXRefCode_locationXRefCode_payGroupXRefCode_payCategoryXRefCode_clientNamespace
      parameters:
      - name: filterPaySummaryStartDate
        in: query
        description: "Inclusive period start date in UTC to determine which employee\
          \ pay summary data to retrieve. Example: 2017-01-01T00:00:00"
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: filterPaySummaryEndDate
        in: query
        description: "Inclusive period end date in UTC to determine which employee\
          \ pay summary data to retrieve. Example: 2017-01-01T00:00:00"
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: employeeXRefCode
        in: query
        description: The unique identifier (external reference code) of the employee
          to be retrieved. The value provided must be the exact match for an employee
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: locationXRefCode
        in: query
        description: The unique identifier (external reference code) of the location
          to be retrieved. The value provided must be the exact match for a location
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: payGroupXRefCode
        in: query
        description: The unique identifier (external reference code) of the position
          to be retrieved. The value provided must be the exact match for a position
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: payCategoryXRefCode
        in: query
        description: The unique identifier (external reference code) of the payCatergory
          to be retrieved. The value provided must be the exact match for a payCatergory
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: A collection of EmployeePaySummary data meeting the search
            criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayloadIEnumerableEmployeePaySummary'
            text/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayloadIEnumerableEmployeePaySummary'
            text/html:
              schema:
                $ref: '#/components/schemas/PaginatedPayloadIEnumerableEmployeePaySummary'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
  /{clientNamespace}/V1/EmployeePaySummariesRetro:
    get:
      tags:
      - EmployeePaySummariesRetro
      summary: GET a List of Employee pay summaries retro
      operationId: EmployeePaySummariesRetro_GetEmployeePaySummaries_By_payGroupXRefCode_periodStartDate_periodEndDate_payDate_employeeXRefCode_locationXRefCode_payCategoryXRefCode_onlyRetros_payExportId_pageSize_clientNamespace
      parameters:
      - name: payGroupXRefCode
        in: query
        description: The unique identifier (external reference code) of the pay group
          to be retrieved. The value provided must be the exact match for a pay group
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: periodStartDate
        in: query
        description: The start date of the pay calendar to be retrieved. The value
          provided must be the exact match for an effective start of a pay calendar
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: periodEndDate
        in: query
        description: The end date of the pay calendar to be retrieved. The value provided
          must be the exact match for an effective end of a pay calendar
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: payDate
        in: query
        description: The pay date of the pay calendar to be retrieved. The value provided
          must be the exact match for a pay date of a pay calendar
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: employeeXRefCode
        in: query
        description: The unique identifier (external reference code) of the employee
          to be retrieved. The value provided must be the exact match for an employee
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: locationXRefCode
        in: query
        description: The unique identifier (external reference code) of the location
          to be retrieved. The value provided must be the exact match for a location
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: payCategoryXRefCode
        in: query
        description: The unique identifier (external reference code) of the payCategory
          to be retrieved. The value provided must be the exact match for a payCategory
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: onlyRetros
        in: query
        description: Filters only Retro Employee Pay Summaries (defaults to false)
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: payExportId
        in: query
        description: The unique identifier of the Pay export data to be retrieved.
          The value provided must be the exact match for a Pay export
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: pageSize
        in: query
        description: Number of records to be loaded (defaults to a 1000 records)
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: A collection of EmployeePaySummary retro data meeting the search
            criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayloadIEnumerableEmployeePaySummaryRetro'
            text/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayloadIEnumerableEmployeePaySummaryRetro'
            text/html:
              schema:
                $ref: '#/components/schemas/PaginatedPayloadIEnumerableEmployeePaySummaryRetro'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
  /{clientNamespace}/V1/Employees/{xRefCode}/PerformanceRatings:
    get:
      tags:
      - EmployeePerformanceRating
      summary: GET EmployeePerformanceRating Details
      operationId: EmployeePerformanceRating_Get_By_xRefCode_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ whose data will be retrieved.  The value provided must be the exact match\
          \ for an employee; otherwise, a bad request (400) error will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: The EmployeePerformanceRating with the requested XRefCode
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeePerformanceRating'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeePerformanceRating'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeePerformanceRating'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
      - EmployeePerformanceRating
      operationId: EmployeePerformanceRating_Post_By_employeePerformanceRating_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeePerformanceRating'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeePerformanceRating'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeePerformanceRating'
        required: true
      responses:
        "200":
          description: "An Employee Performance Rating is created, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
    patch:
      tags:
      - EmployeePerformanceRating
      operationId: EmployeePerformanceRating_Patch_By_employeePerformanceRating_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeePerformanceRating'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeePerformanceRating'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeePerformanceRating'
        required: true
      responses:
        "200":
          description: "An Employee Performance Rating is created, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
  /{clientNamespace}/V1/Employees/{xRefCode}/EmployeeProperties:
    get:
      tags:
      - EmployeePropertyValue
      summary: GET EmployeePropertyValue Details
      operationId: EmployeePropertyValue_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ whose data will be retrieved.  The value provided must be the exact match\
          \ for an employee; otherwise, a bad request (400) error will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: contextDate
        in: query
        description: "The Context Date value is an “as-of” date used to determine\
          \ which employee data to search when records have specific start and end\
          \ dates.  The service defaults to the current datetime if the requester\
          \ does not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: contextDateRangeFrom
        in: query
        description: "The Context Date Range From value is the start of the range\
          \ of dates used to determine which employee data to search when records\
          \ have specific start and end dates.  The service defaults to null if the\
          \ requester does not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: contextDateRangeTo
        in: query
        description: "The Context Date Range To value is the end of the range of dates\
          \ to determine which employee data to search when records have specific\
          \ start and end dates.  The service defaults to null if the requester does\
          \ not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: The EmployeePropertyValue with the requested XRefCode
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeePropertyValue'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeePropertyValue'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeePropertyValue'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
      - EmployeePropertyValue
      summary: POST a EmployeePropertyValue
      operationId: EmployeePropertyValue_Post_By_employeePropertyValue_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be updated.  The value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST and PATCH operations.  For more information\
          \ and examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeePropertyValue'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeePropertyValue'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeePropertyValue'
        required: true
      responses:
        "200":
          description: "An Employee is created, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
      - EmployeePropertyValue
      summary: PATCH a EmployeePropertyValue
      operationId: EmployeePropertyValue_Patch_By_employeePropertyValue_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be updated.  The value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST and PATCH operations.  For more information\
          \ and examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeePropertyValue'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeePropertyValue'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeePropertyValue'
        required: true
      responses:
        "200":
          description: "The EmployeePropertyValue is updated, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/EmployeePunches:
    get:
      tags:
      - EmployeePunches
      summary: GET a List of Employee Punches
      operationId: EmployeePunches_GetEmployeePunches_By_filterTransactionStartTimeUTC_filterTransactionEndTimeUTC_employeeXRefCode_locationXRefCode_positionXRefCode_departmentXRefCode_jobXRefCode_docketXRefCode_projectXRefCode_payAdjustmentXRefCode_shiftStatus_filterShiftTimeStart_filterShiftTimeEnd_businessDate_pageSize_clientNamespace
      parameters:
      - name: filterTransactionStartTimeUTC
        in: query
        description: "Inclusive transaction period start date in UTC to determine\
          \ which employee punch data to retrieve. Example: 2017-01-01T00:00:00"
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: filterTransactionEndTimeUTC
        in: query
        description: "Inclusive transaction period end date in UTC to determine which\
          \ employee punch data to retrieve. Example: 2017-01-01T00:00:00"
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: employeeXRefCode
        in: query
        description: The unique identifier (external reference code) of the employee
          to be retrieved. The value provided must be the exact match for an employee
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: locationXRefCode
        in: query
        description: A case-sensitive field that identifies a location or organizational
          units
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: positionXRefCode
        in: query
        description: A case-sensitive field that identifies one or more Positions
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: departmentXRefCode
        in: query
        description: A case-sensitive field that identifies one or more Departments
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: jobXRefCode
        in: query
        description: A case-sensitive field that identifies one or more Jobs
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: docketXRefCode
        in: query
        description: A case-sensitive field that identifies one or more dockets
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: projectXRefCode
        in: query
        description: A case-sensitive field that identifies one or more projects
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: payAdjustmentXRefCode
        in: query
        description: A case-sensitive field that identifies one or more pay adjustment
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: shiftStatus
        in: query
        description: "A case-sensitive field containing shift status groups. Examples:\
          \ [ACTIVE, COMPLETED, PROBLEM, ALL]"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: filterShiftTimeStart
        in: query
        description: "Use with FilterTransactionStartTimeUTC to search for shifts\
          \ with a Start and end time in a given timeframe. Example: Used to include\
          \ or exclude edits made to historical punches"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: filterShiftTimeEnd
        in: query
        description: "Use with FilterTransactionEndTimeUTC to search for shifts with\
          \ a Start and end time in a given timeframe. Example: Used to include or\
          \ exclude edits made to historical"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: businessDate
        in: query
        description: "The Business Date value is intended as a “Timesheet View” to\
          \ return punch data related to a clients Business day parameter configuration.\
          \ Example: 2017-01-01T00:00:00"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: pageSize
        in: query
        description: The number of records returned per page in the paginated response
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: A collection of EmployeePunch data meeting the search criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayloadIEnumerableEmployeePunch'
            text/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayloadIEnumerableEmployeePunch'
            text/html:
              schema:
                $ref: '#/components/schemas/PaginatedPayloadIEnumerableEmployeePunch'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
    delete:
      tags:
      - EmployeePunches
      operationId: EmployeePunches_DeleteEmployeePunch_By_employeePunchXRefCode_clientNamespace
      parameters:
      - name: employeePunchXRefCode
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: EmployeePunch details which matches XRefCode were Deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadEmployeePunchPatchPostDeleteResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadEmployeePunchPatchPostDeleteResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadEmployeePunchPatchPostDeleteResponse'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
  /{clientNamespace}/V1/EmployeeRawPunches:
    get:
      tags:
      - EmployeeRawPunches
      summary: GET a List of Employee Raw Punches
      operationId: EmployeeRawPunches_GetEmployeeRawPunches_By_filterTransactionStartTimeUTC_filterTransactionEndTimeUTC_employeeXRefCode_employeeBadge_punchState_punchTypes_pageSize_clientNamespace
      parameters:
      - name: filterTransactionStartTimeUTC
        in: query
        description: "Inclusive transaction period start date in UTC to determine\
          \ which employee punch data to retrieve. Example: 2017-01-01T00:00:00"
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: filterTransactionEndTimeUTC
        in: query
        description: "Inclusive transaction period end date in UTC to determine which\
          \ employee punch data to retrieve. Example: 2017-01-01T00:00:00"
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: employeeXRefCode
        in: query
        description: The unique identifier (external reference code) of the employee
          to be retrieved. The value provided must be the exact match for an employee
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: employeeBadge
        in: query
        description: The badge number of the employee to be retrieved. The value provided
          must be the exact match for a badge
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: punchState
        in: query
        description: "The state of the punch. Examples: [PROCESSED, REJECTED, ALL]"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: punchTypes
        in: query
        description: "Comma separated values of punch types. Example: [Punch_In, Break_Out,\
          \ Job_Transfer, ALL, etc]"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: The number of records returned per page in the paginated response
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: A collection of EmployeePunch data meeting the search criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayloadIEnumerableEmployeeRawPunch'
            text/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayloadIEnumerableEmployeeRawPunch'
            text/html:
              schema:
                $ref: '#/components/schemas/PaginatedPayloadIEnumerableEmployeeRawPunch'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
    post:
      tags:
      - EmployeeRawPunches
      summary: POST (Create) Employee Raw Punch
      operationId: EmployeeRawPunches_Post_By_punch_isValidateOnly_clientNamespace
      parameters:
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST operation\
          \ validates the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeRawPunchForSubmit'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeRawPunchForSubmit'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeRawPunchForSubmit'
        required: true
      responses:
        "200":
          description: A raw punch is created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayloadIEnumerableEmployeeRawPunch'
            text/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayloadIEnumerableEmployeeRawPunch'
            text/html:
              schema:
                $ref: '#/components/schemas/PaginatedPayloadIEnumerableEmployeeRawPunch'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
  /{clientNamespace}/V1/Employees/{xRefCode}/Roles:
    get:
      tags:
      - EmployeeRole
      summary: GET EmployeeRole Details
      operationId: EmployeeRole_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ whose data will be retrieved.  The value provided must be the exact match\
          \ for an employee; otherwise, a bad request (400) error will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: contextDate
        in: query
        description: "The Context Date value is an “as-of” date used to determine\
          \ which employee data to search when records have specific start and end\
          \ dates.  The service defaults to the current datetime if the requester\
          \ does not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: contextDateRangeFrom
        in: query
        description: "The Context Date Range From value is the start of the range\
          \ of dates used to determine which employee data to search when records\
          \ have specific start and end dates.  The service defaults to null if the\
          \ requester does not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: contextDateRangeTo
        in: query
        description: "The Context Date Range To value is the end of the range of dates\
          \ to determine which employee data to search when records have specific\
          \ start and end dates.  The service defaults to null if the requester does\
          \ not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: The EmployeeRole with the requested XRefCode
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeRole'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeRole'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeRole'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
      - EmployeeRole
      summary: POST a EmployeeRole
      operationId: EmployeeRole_Post_By_employeeRole_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be updated.  The value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST and PATCH operations.  For more information\
          \ and examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeRole'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeRole'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeRole'
        required: true
      responses:
        "200":
          description: "An Employee is created, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
      - EmployeeRole
      summary: PATCH a EmployeeRole
      operationId: EmployeeRole_Patch_By_employeeRole_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be updated.  The value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST and PATCH operations.  For more information\
          \ and examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeRole'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeRole'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeRole'
        required: true
      responses:
        "200":
          description: "The EmployeeRole is updated, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees:
    get:
      tags:
      - Employees
      summary: GET a List of Employees
      operationId: Employees_Get_By_employeeNumber_displayName_socialSecurityNumber_employmentStatusXRefCode_orgUnitXRefCode_departmentXRefCode_jobXRefCode_positionXRefCode_payClassXRefCode_payGroupXRefCode_payPolicyXRefCode_payTypeXRefCode_payrollPolicyXRefCode_filterHireStartDate_filterHireEndDate_filterTerminationStartDate_filterTerminationEndDate_filterUpdatedStartDate_filterUpdatedEndDate_filterUpdatedEntities_filterOriginalHireStartDate_filterOriginalHireEndDate_filterSeniorityStartDate_filterSeniorityEndDate_filterBaseSalaryFrom_filterBaseSalaryTo_filterBaseRateFrom_filterBaseRateTo_contextDate_clientNamespace
      parameters:
      - name: employeeNumber
        in: query
        description: Employment identification number assigned to an employee.  A
          partial value can be provided for a wider search
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: displayName
        in: query
        description: Employee Name. A partial value can be provided for a wider search
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: socialSecurityNumber
        in: query
        description: Social Security Number of the employee. A partial value can be
          provided for a wider search
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: employmentStatusXRefCode
        in: query
        description: "Employment status xrefcode, which can be client-specific. Use\
          \ this to search employees having the given employment status. Use a ContextDate\
          \ value to search for employees with a given status as of a point in time.\
          \ Otherwise, the search will use the current date and time"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: orgUnitXRefCode
        in: query
        description: "Organizational units' xrefcode. Use this to search all levels\
          \ of the employees’ organization including department, location, region,\
          \ corporate, etc. Use a ContextDate value to search for employees with a\
          \ specific value as of a point in time.  Otherwise, the search will use\
          \ the current date and time"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: departmentXRefCode
        in: query
        description: "Department xrefcode value, which can be client-specific. Use\
          \ this to search employees' work assignments having the given department.Use\
          \ a ContextDate value to search for employees with a given department as\
          \ of a point in time. Otherwise, the search will use the current date and\
          \ time"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: jobXRefCode
        in: query
        description: "Job xrefcode value, which can be client-specific. Use this to\
          \ search employees' work assignments having the given job. Use a ContextDate\
          \ value to search for employees with a given job as of a point in time.\
          \ Otherwise, the search will use the current date and time"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: positionXRefCode
        in: query
        description: "Position xrefcode value, which can be client-specific. Use this\
          \ to search employees' work assignments having the given position. Use a\
          \ ContextDate value to search for employees with a given position as of\
          \ a point in time. Otherwise, the search will use the current date and time"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: payClassXRefCode
        in: query
        description: "Pay class xrefcode value, which can be client-specific. Use\
          \ this to search employees having the given pay class. Use a ContextDate\
          \ value to search for employees with a given pay class as of a point in\
          \ time. Otherwise, the search will use the current date and time"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: payGroupXRefCode
        in: query
        description: "Pay group xrefcode value, which can be client-specific. Use\
          \ this to search employees having the given pay group. Use a ContextDate\
          \ value to search for employees with a given pay group as of a point in\
          \ time. Otherwise, the search will use the current date and time"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: payPolicyXRefCode
        in: query
        description: "Pay policy xrefcode value, which can be client-specific. Use\
          \ this to search employees having the given pay policy. Use a ContextDate\
          \ value to search for employees with a given pay policy as of a point in\
          \ time. Otherwise, the search will use the current date and time"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: payTypeXRefCode
        in: query
        description: "Pay type xrefcode value, which can be client-specific. Use this\
          \ to search employees having the given pay type. Use a ContextDate value\
          \ to search for employees with a given pay type as of a point in time. Otherwise,\
          \ the search will use the current date and time"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: payrollPolicyXRefCode
        in: query
        description: "Payroll policy xrefcode value, which can be client-specific.\
          \ Use this to search employees having the given payroll policy. Use a ContextDate\
          \ value to search for employees with a given payroll policy as of a point\
          \ in time. Otherwise, the search will use the current date and time"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: filterHireStartDate
        in: query
        description: Use to search for employees whose most recent hire date is greater
          than or equal to the specified value (e.g. 2017-01-01T13:24:56). Use with
          filterHireEndDate to search for employees hired or rehired in a given timeframe
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: filterHireEndDate
        in: query
        description: "Use to search for employees whose most recent hire date is less\
          \ than or equal to the specified value. Typically this parameter is used\
          \ in conjunction with FilterHireStartDate to search for employees hired\
          \ or rehired in a given timeframe. Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: filterTerminationStartDate
        in: query
        description: "Use to search for employees with termination date values greater\
          \ than or equal to the specified value. Typically this parameter is used\
          \ in conjunction with FilterTerminationStartDate to search for employees\
          \ terminated in a given timeframe. Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: filterTerminationEndDate
        in: query
        description: "Use to search for employees with termination date values less\
          \ than or equal to the specified value. Typically this parameter is used\
          \ in conjunction with filterTerminationStartDate to search for employees\
          \ terminated in a given timeframe. Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: filterUpdatedStartDate
        in: query
        description: "The beginning date used when searching for employees with updates\
          \ (and newly effective records) in a specified timeframe. When a value is\
          \ provided for this parameter, a filterUpdatedEndDate value must also be\
          \ provided. Because this search is conducted across all entities in the\
          \ HR data model regardless of whether the requesting user has access to\
          \ them, it is possible that the query will return XRefCode of employees\
          \ with changes in which the consuming application is not interested.  Example:\
          \ 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: filterUpdatedEndDate
        in: query
        description: "The end date used when searching for employees with updates\
          \ (and newly effective records) in a specified timeframe. When a value is\
          \ provided for this parameter, a filterUpdatedStartDate value must also\
          \ be provided.   Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: filterUpdatedEntities
        in: query
        description: "Use to search employees with changes to specific employee sub-entities.\
          \ These sub-entity names, based on the employee model, can be provided in\
          \ a comma-separated value, e.g. filterUpdatedEntities=EmploymentStatuses,WorkAssignments,Addresses.\
          \ The base Employee is always searched by default. This parameter requires\
          \ that filterUpdatedStartDate/filterUpdatedEndDate range is provided, otherwise\
          \ it is ignored and all relevant employee entities are searched"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: filterOriginalHireStartDate
        in: query
        description: "Use to search for employees with original hire date values greater\
          \ than or equal to the specified value. Typically this parameter is used\
          \ in conjunction with filterOriginialHireEndDate to search for employees\
          \ who were originally hired in a given timeframe. Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: filterOriginalHireEndDate
        in: query
        description: "Use to search for employees with original hire date values less\
          \ than or equal to the specified value. Typically this parameter is used\
          \ in conjunction with filterOriginialHireStartDate to search for employees\
          \ who were originally hired in a given timeframe. Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: filterSeniorityStartDate
        in: query
        description: "Use to search for employees with seniority date values greater\
          \ than or equal to the specified value. Typically this parameter is used\
          \ in conjunction with filterSeniorityEndDate to search for employees seniority\
          \ date in a given timeframe. Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: filterSeniorityEndDate
        in: query
        description: "Use to search for employees with original hire date values less\
          \ than or equal to the specified value. Typically this parameter is used\
          \ in conjunction with filterSeniorityStartDate to search for employees seniority\
          \ date in a given timeframe. Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: filterBaseSalaryFrom
        in: query
        description: "Use to search for employees base salary greater than or equal\
          \ to the specified value. Typically this parameter is used in conjunction\
          \ with filterBaseSalaryTo to search for employees base salary in a given\
          \ range. Example: 20000"
        required: false
        style: form
        explode: true
        schema:
          type: number
          format: double
      - name: filterBaseSalaryTo
        in: query
        description: "Use to search for employees base salary less than or equal to\
          \ the specified value. Typically this parameter is used in conjunction with\
          \ filterBaseSalaryFrom to search for employees base salary in a given range.\
          \ Example: 40000"
        required: false
        style: form
        explode: true
        schema:
          type: number
          format: double
      - name: filterBaseRateFrom
        in: query
        description: "Use to search for employees base rate greater than or equal\
          \ to the specified value. Typically this parameter is used in conjunction\
          \ with filterBaseRateTo to search for employees base rate in a given range.\
          \ Example: 10"
        required: false
        style: form
        explode: true
        schema:
          type: number
          format: double
      - name: filterBaseRateTo
        in: query
        description: "Use to search for employees base rate less than or equal to\
          \ the specified value. Typically this parameter is used in conjunction with\
          \ filterBaseRateFrom to search for employees base rate in a given range.\
          \ Example: 40"
        required: false
        style: form
        explode: true
        schema:
          type: number
          format: double
      - name: contextDate
        in: query
        description: "The Context Date value is an “as-of” date used to determine\
          \ which employee data to search when records have specific start and end\
          \ dates.  The service defaults to the current datetime if the requester\
          \ does not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: A collection of Employees XRefCodes meeting the search criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployee'
              example:
                Data:
                - XRefCode: string
                - XRefCode: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployee'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployee'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
    post:
      tags:
      - Employees
      summary: POST (Hire) an Employee
      operationId: Employees_Post_By_employee_isValidateOnly_clientNamespace
      parameters:
      - name: isValidateOnly
        in: query
        description: "If true, then the POST data is validated without being submitted"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST (hire and rehire ) and PATCH (employee\
          \ update) operations.  For more information and examples, please refer to\
          \ the Dayforce Web Services RESTful Developer's Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Employee'
          text/json:
            schema:
              $ref: '#/components/schemas/Employee'
          text/html:
            schema:
              $ref: '#/components/schemas/Employee'
        required: true
      responses:
        "200":
          description: "An Employee is created, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
  /{clientNamespace}/V1/Employees/{xRefCode}:
    get:
      tags:
      - Employees
      summary: GET Employee Details
      operationId: Employees_Get_By_xRefCode_contextDate_expand_contextDateRangeFrom_contextDateRangeTo_amfEntity_amfLevel_amfLevelValue_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ to be retrieved.  The value provided must be the exact match for an employee;\
          \ otherwise, a bad request (400) error will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: contextDate
        in: query
        description: "The Context Date value is an “as-of” date used to determine\
          \ which employee data to search when records have specific start and end\
          \ dates.  The service defaults to the current datetime if the requester\
          \ does not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: expand
        in: query
        description: "This parameter accepts a comma-separated list of top-level entities\
          \ that contain the data elements needed for downstream processing.  When\
          \ this parameter is not used, only data elements from the employee master\
          \ record will be included.  For more information, please refer to the Introduction\
          \ to Dayforce Web Services document"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: contextDateRangeFrom
        in: query
        description: "The Context Date Range From value is the start of the range\
          \ of dates used to determine which employee data to search when records\
          \ have specific start and end dates.  The service defaults to null if the\
          \ requester does not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: contextDateRangeTo
        in: query
        description: "The Context Date Range To value is end of the range of dates\
          \ to determine which employee data to search when records have specific\
          \ start and end dates.  The service defaults to null if the requester does\
          \ not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: amfEntity
        in: query
        description: This parameter is to identify the application object for Application
          Metadata Framework (AMF) request
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: amfLevel
        in: query
        description: This parameter is to identify the level for Application Metadata
          Framework (AMF) request
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: amfLevelValue
        in: query
        description: This parameter is to identify context specific to amfLevel for
          Application Metadata Framework (AMF) request
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: The Employee with the requested XRefCode
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadEmployee'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadEmployee'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadEmployee'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
    patch:
      tags:
      - Employees
      summary: PATCH (Update) an Employee
      operationId: Employees_Patch_By_employee_xRefCode_isValidateOnly_replaceExisting_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ to be retrieved.  The value provided must be the exact match for an employee;\
          \ otherwise, a bad request (400) error will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: replaceExisting
        in: query
        description: "This parameter accepts a comma-separated list of employee-subordinate\
          \ entities where the respective data provided will replace all existing\
          \ records.\r\n            \r\nIt applies to the following collections (which\
          \ are not effective dated and thus require this special treatment):\r\n\
          \            \r\n<list type=\"bullet\"><item>ClockDeviceGroups, </item><item>DirectDeposits,\
          \ </item><item>EmployeePayAdjustCodeGroups, </item><item>OrgUnitLocationTypes,\
          \ </item><item>SSOAccounts, </item><item>UserPayAdjustCodeGroups</item></list>"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST (hire and rehire ) and PATCH (employee\
          \ update) operations.  For more information and examples, please refer to\
          \ the Dayforce Web Services RESTful Developer's Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Employee'
          text/json:
            schema:
              $ref: '#/components/schemas/Employee'
          text/html:
            schema:
              $ref: '#/components/schemas/Employee'
        required: true
      responses:
        "200":
          description: "The Employee is updated, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableProcessResult'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableProcessResult'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
  /{clientNamespace}/V1/Employees/{xRefCode}/Schedules:
    get:
      tags:
      - Employees
      summary: GET List Employee Schedules
      operationId: EmployeeSchedules_Get_By_xRefCode_filterScheduleStartDate_filterScheduleEndDate_isPosted_expand_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ to be retrieved.  The value provided must be the exact match for an employee;\
          \ otherwise, a bad request (400) error will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: filterScheduleStartDate
        in: query
        description: "Inclusive period start aligned to the employee business day\
          \ start date to determine which employee schedule data to retrieve . Example:\
          \ 2017-01-01T13:24:56"
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: filterScheduleEndDate
        in: query
        description: "Exclusive period end aligned to the employee business day start\
          \ to determine which employee schedule data to retrieve . Example: 2017-01-01T13:24:56"
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: isPosted
        in: query
        description: A flag to determine whether to display posted schedules.By default
          it searches for published schedules
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: expand
        in: query
        description: "This parameter accepts a comma-separated list of top-level entities\
          \ that contain the data elements needed for downstream processing.  When\
          \ this parameter is not used, only data elements from the master record\
          \ will be included.  For more information, please refer to the Introduction\
          \ to Dayforce Web Services document"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: A collection of employee schedule meeting the search criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeSchedule'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeSchedule'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeSchedule'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
  /{clientNamespace}/V1/EmployeeSchedules:
    get:
      tags:
      - EmployeeSchedules
      summary: GET List of Employee Schedules
      operationId: EmployeeSchedules_Get_By_filterScheduleStartDate_filterScheduleEndDate_employeeXRefCode_departmentXRefCode_jobXRefCode_positionXRefCode_orgUnitXRefCode_unfill_expand_pageSize_clientNamespace
      parameters:
      - name: filterScheduleStartDate
        in: query
        description: "Inclusive period start aligned to the employee business day\
          \ start date to determine which employee schedule data to retrieve . Example:\
          \ 2017-01-01T13:24:56"
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: filterScheduleEndDate
        in: query
        description: "Exclusive period end aligned to the employee business day start\
          \ to determine which employee schedule data to retrieve . Example: 2017-01-01T13:24:56"
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: employeeXRefCode
        in: query
        description: Only valid when Unfill = FALSE or not provided
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: departmentXRefCode
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: jobXRefCode
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: positionXRefCode
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: orgUnitXRefCode
        in: query
        description: "Not required when Unfill = TRUE, Will send all unfilled shifts\
          \ for the specified date range"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: unfill
        in: query
        description: "When a TRUE value is used in this parameter, the API returns\
          \ all Unfill shifts.\r\n                                 When a FALSE value\
          \ is used in this parameter, only employee schdules are returned"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: expand
        in: query
        description: "This parameter accepts a comma-separated list of top-level entities\
          \ that contain the data elements needed for downstream processing.  When\
          \ this parameter is not used, only data elements from the master record\
          \ will be included.  For more information, please refer to the Introduction\
          \ to Dayforce Web Services document"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: The number of records returned per page in the paginated response
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: A collection of employee schedule meeting the search criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayloadIEnumerableEmployeeSchedule'
            text/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayloadIEnumerableEmployeeSchedule'
            text/html:
              schema:
                $ref: '#/components/schemas/PaginatedPayloadIEnumerableEmployeeSchedule'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "403":
          description: User does not have access to the Organization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
    post:
      tags:
      - EmployeeSchedules
      summary: POST (Create) Employee schedule
      operationId: EmployeeSchedules_Post_By_orgUnitXRefCode_employeeSchedules_isValidateOnly_violationLevel_clientNamespace
      parameters:
      - name: orgUnitXRefCode
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST operation\
          \ validates the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: violationLevel
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/EmployeeSchedulePostAPIRequestDTO'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/EmployeeSchedulePostAPIRequestDTO'
          text/html:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/EmployeeSchedulePostAPIRequestDTO'
        required: true
      responses:
        "200":
          description: OK response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeSchedulePostAPIResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeSchedulePostAPIResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeSchedulePostAPIResponse'
        "400":
          description: Request is malformed or has validation errors.  Correct and
            resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
    patch:
      tags:
      - EmployeeSchedules
      summary: PATCH (Update) Employee schedule
      operationId: EmployeeSchedules_Patch_By_orgUnitXRefCode_employeeSchedules_isValidateOnly_violationLevel_clientNamespace
      parameters:
      - name: orgUnitXRefCode
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, PATCH operation\
          \ validates the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: violationLevel
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/EmployeeSchedulePatchAPIRequestDTO'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/EmployeeSchedulePatchAPIRequestDTO'
          text/html:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/EmployeeSchedulePatchAPIRequestDTO'
        required: true
      responses:
        "200":
          description: OK response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeSchedulePostAPIResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeSchedulePostAPIResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeSchedulePostAPIResponse'
        "400":
          description: Request is malformed or has validation errors.  Correct and
            resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
  /{clientNamespace}/V1/EmployeeSchedulesDelta:
    get:
      tags:
      - EmployeeSchedulesDelta
      summary: GET List of Employee Schedules that have been changed since a given
        date (or between a date range)
      operationId: EmployeeSchedulesDelta_Get_By_orgUnitXRefCode_scheduleChangesFromDate_scheduleChangesToDate_unscheduledEmployeeDays_unscheduledEmployeeOption_schedulePostedOption_excludeNonProductiveShifts_pageSize_clientNamespace
      parameters:
      - name: orgUnitXRefCode
        in: query
        description: The unique identifier (external reference code) of the org unit.
          Schedules fetched will belong to this org unit (or children thereof)
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: scheduleChangesFromDate
        in: query
        description: "Date from which to look for changes to schedules from Example:\
          \ 2017-01-01T13:24:56"
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: scheduleChangesToDate
        in: query
        description: "Optional Date until which to look for changes to schedules Example:\
          \ 2017-02-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: unscheduledEmployeeDays
        in: query
        description: "Number of days from scheduleChangesFromDate date to return unscheduled\
          \ employee free days for (Maximum : 60)"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: unscheduledEmployeeOption
        in: query
        description: "Return Unscheduled Employee Days Option possible values are\
          \ None, PrimaryOnly, SecondaryOnly and Both"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          enum:
          - 0
          - 1
          - 2
          - 3
      - name: schedulePostedOption
        in: query
        description: "Whether or not to include only schedules that are posted or\
          \ not - possible values are:  All, Posted, Unposted"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          enum:
          - 0
          - 1
          - 2
      - name: excludeNonProductiveShifts
        in: query
        description: Whether or not to exclude schedules that are entirely or partially
          marked as non-productive
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: pageSize
        in: query
        description: The number of records returned per page in the paginated response
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: A collection of employee schedules meeting the search criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayloadIEnumerableEmployeeScheduleExtended'
            text/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayloadIEnumerableEmployeeScheduleExtended'
            text/html:
              schema:
                $ref: '#/components/schemas/PaginatedPayloadIEnumerableEmployeeScheduleExtended'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "403":
          description: User does not have access to the Organization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
  /{clientNamespace}/V1/Employees/{xRefCode}/EmployeeShortTimeWorks:
    get:
      tags:
      - EmployeeShortTimeWork
      summary: GET EmployeeShortTimeWork Details
      operationId: EmployeeShortTimeWork_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ whose data will be retrieved.  The value provided must be the exact match\
          \ for an employee; otherwise, a bad request (400) error will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: contextDate
        in: query
        description: "The Context Date value is an “as-of” date used to determine\
          \ which employee data to search when records have specific start and end\
          \ dates.  The service defaults to the current datetime if the requester\
          \ does not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: contextDateRangeFrom
        in: query
        description: "The Context Date Range From value is the start of the range\
          \ of dates used to determine which employee data to search when records\
          \ have specific start and end dates.  The service defaults to null if the\
          \ requester does not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: contextDateRangeTo
        in: query
        description: "The Context Date Range To value is the end of the range of dates\
          \ to determine which employee data to search when records have specific\
          \ start and end dates.  The service defaults to null if the requester does\
          \ not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: The EmployeeShortTimeWorkController with the requested XRefCode
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeShortTimeWork'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeShortTimeWork'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeShortTimeWork'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/Skills:
    get:
      tags:
      - EmployeeSkill
      summary: GET EmployeeSkill Details
      operationId: EmployeeSkill_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ whose data will be retrieved.  The value provided must be the exact match\
          \ for an employee; otherwise, a bad request (400) error will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: contextDate
        in: query
        description: "The Context Date value is an “as-of” date used to determine\
          \ which employee data to search when records have specific start and end\
          \ dates.  The service defaults to the current datetime if the requester\
          \ does not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: contextDateRangeFrom
        in: query
        description: "The Context Date Range From value is the start of the range\
          \ of dates used to determine which employee data to search when records\
          \ have specific start and end dates.  The service defaults to null if the\
          \ requester does not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: contextDateRangeTo
        in: query
        description: "The Context Date Range To value is the end of the range of dates\
          \ to determine which employee data to search when records have specific\
          \ start and end dates.  The service defaults to null if the requester does\
          \ not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: The EmployeeSkill with the requested XRefCode
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeSkill'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeSkill'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeSkill'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
      - EmployeeSkill
      summary: POST an Employee Skill
      operationId: EmployeeSkill_Post_By_employeeSkill_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be updated.  The value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST and PATCH operations.  For more information\
          \ and examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeSkill'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeSkill'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeSkill'
        required: true
      responses:
        "200":
          description: "An Employee Skill is created, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
    patch:
      tags:
      - EmployeeSkill
      summary: PATCH (Update) an Employee Skill
      operationId: EmployeeSkill_Patch_By_employeeSkill_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be updated.  The value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST and PATCH operations.  For more information\
          \ and examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeSkill'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeSkill'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeSkill'
        required: true
      responses:
        "200":
          description: "An Employee Skill is updated, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
  /{clientNamespace}/V1/Employees/{xRefCode}/TrainingPrograms:
    get:
      tags:
      - EmployeeTrainingProgram
      summary: GET EmployeeTrainingProgram Details
      operationId: EmployeeTrainingProgram_Get_By_xRefCode_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ whose data will be retrieved.  The value provided must be the exact match\
          \ for an employee; otherwise, a bad request (400) error will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: The EmployeeTrainingProgram with the requested XRefCode
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeTrainingProgram'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeTrainingProgram'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeTrainingProgram'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
      - EmployeeTrainingProgram
      summary: POST an EmployeeTrainingProgram
      operationId: EmployeeTrainingProgram_Post_By_employeeTrainingProgram_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be updated.  The value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST and PATCH operations.  For more information\
          \ and examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeTrainingProgram'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeTrainingProgram'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeTrainingProgram'
        required: true
      responses:
        "200":
          description: "An EmployeeTrainingProgram is created, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
  /{clientNamespace}/V1/Employees/{xRefCode}/UKTax/Irregular:
    get:
      tags:
      - EmployeeUKIrregularPaymentDetails
      summary: GET an EmployeeUKIrregularPaymentDetails
      operationId: EmployeeUKIrregularPaymentDetails_Get_By_xRefCode_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ whose data will be retrieved.  The value provided must be the exact match\
          \ for an employee; otherwise, a bad request (400) error will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: The EmployeeUKIrregularPaymentDetail with the requested XRefCode
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeUKIrregularPaymentDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeUKIrregularPaymentDetails'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeUKIrregularPaymentDetails'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
      - EmployeeUKIrregularPaymentDetails
      summary: POST an EmployeeUKIrregularPaymentDetails
      operationId: EmployeeUKIrregularPaymentDetails_Post_By_employeeUKIrregularPaymentDetails_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be updated.  The value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST and PATCH operations.  For more information\
          \ and examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeUKIrregularPaymentDetails'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeUKIrregularPaymentDetails'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeUKIrregularPaymentDetails'
        required: true
      responses:
        "200":
          description: "An EmployeeUKIrregularPaymentDetails is created, no response\
            \ body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
      - EmployeeUKIrregularPaymentDetails
      summary: PATCH an EmployeeUKIrregularPaymentDetails
      operationId: EmployeeUKIrregularPaymentDetails_Patch_By_employeeUKIrregularPaymentDetails_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be updated.  The value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeUKIrregularPaymentDetails'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeUKIrregularPaymentDetails'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeUKIrregularPaymentDetails'
        required: true
      responses:
        "200":
          description: "The EmployeeUKIrregularPaymentDetails is updated, no response\
            \ body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/UKNI/NIInfo:
    get:
      tags:
      - EmployeeUKNIDetails
      summary: GET Employee NI Details
      operationId: EmployeeUKNIDetails_Get_By_xRefCode_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ whose data will be retrieved.  The value provided must be the exact match\
          \ for an employee; otherwise, a bad request (400) error will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: The EmployeeUKNIDetails with the requested XRefCode
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeUKNIDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeUKNIDetails'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeUKNIDetails'
        "400":
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
      - EmployeeUKNIDetails
      summary: POST Employee NI Details
      operationId: EmployeeUKNIDetails_Post_By_employeeNi_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ whose data will be retrieved.  The value provided must be the exact match\
          \ for an employee; otherwise, a bad request (400) error will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeUKNIDetails'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeUKNIDetails'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeUKNIDetails'
        required: true
      responses:
        "200":
          description: Created NI Details for Employee with supplied XRefCode
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeUKNIDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeUKNIDetails'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeUKNIDetails'
        "400":
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
      - EmployeeUKNIDetails
      summary: PATCH Employee NI Details
      operationId: EmployeeUKNIDetails_Patch_By_employeeNi_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: ""
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: ""
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeUKNIDetails'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeUKNIDetails'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeUKNIDetails'
        required: true
      responses:
        "200":
          description: "The EmployeeUKTaxDetails is updated, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/UKTax/PostgraduateLoan:
    get:
      tags:
      - EmployeeUKPostgraduateLoan
      summary: GET EmployeeUKPostgraduateLoan Details
      operationId: EmployeeUKPostgraduateLoan_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ whose data will be retrieved.  The value provided must be the exact match\
          \ for an employee; otherwise, a bad request (400) error will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: contextDate
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: contextDateRangeFrom
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: contextDateRangeTo
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: The EmployeeUKPostgraduateLoan with the requested XRefCode
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeUKPostgraduateLoan'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeUKPostgraduateLoan'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeUKPostgraduateLoan'
        "400":
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
      - EmployeeUKPostgraduateLoan
      summary: POST an EmployeeUKPostgraduateLoan
      operationId: EmployeeUKPostgraduateLoan_Post_By_employeeUKPostgraduateLoan_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be updated.  The value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST and PATCH operations.  For more information\
          \ and examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeUKPostgraduateLoan'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeUKPostgraduateLoan'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeUKPostgraduateLoan'
        required: true
      responses:
        "200":
          description: "An EmployeeUKPostgraduateLoan is created, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
      - EmployeeUKPostgraduateLoan
      summary: PATCH an EmployeeUKPostgraduateLoan
      operationId: EmployeeUKPostgraduateLoan_Patch_By_employeeUKPostgraduateLoan_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be updated.  The value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST and PATCH operations.  For more information\
          \ and examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeUKPostgraduateLoan'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeUKPostgraduateLoan'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeUKPostgraduateLoan'
        required: true
      responses:
        "200":
          description: "The EmployeeUKPostgraduateLoan is updated, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/UKTax/StudentLoan:
    get:
      tags:
      - EmployeeUKStudentLoan
      summary: GET EmployeeUKStudentLoan Details
      operationId: EmployeeUKStudentLoan_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ whose data will be retrieved.  The value provided must be the exact match\
          \ for an employee; otherwise, a bad request (400) error will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: contextDate
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: contextDateRangeFrom
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: contextDateRangeTo
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: The EmployeeUKStudentLoan with the requested XRefCode
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeUKStudentLoan'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeUKStudentLoan'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeUKStudentLoan'
        "400":
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
      - EmployeeUKStudentLoan
      summary: POST an EmployeeUKStudentLoan
      operationId: EmployeeUKStudentLoan_Post_By_employeeUKStudentLoan_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be updated.  The value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST and PATCH operations.  For more information\
          \ and examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeUKStudentLoan'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeUKStudentLoan'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeUKStudentLoan'
        required: true
      responses:
        "200":
          description: "An EmployeeUKStudentLoan is created, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
      - EmployeeUKStudentLoan
      summary: PATCH an EmployeeUKStudentLoan
      operationId: EmployeeUKStudentLoan_Patch_By_employeeUKStudentLoan_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be updated.  The value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST and PATCH operations.  For more information\
          \ and examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeUKStudentLoan'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeUKStudentLoan'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeUKStudentLoan'
        required: true
      responses:
        "200":
          description: "The EmployeeUKStudentLoan is updated, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/UKTax/TaxInfo:
    get:
      tags:
      - EmployeeUKTaxDetails
      summary: GET EmployeeUKTaxDetails Details
      operationId: EmployeeUKTaxDetails_Get_By_xRefCode_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ whose data will be retrieved.  The value provided must be the exact match\
          \ for an employee; otherwise, a bad request (400) error will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: The EmployeeUKTaxDetails with the requested XRefCode
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeUKTaxDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeUKTaxDetails'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeUKTaxDetails'
        "400":
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
      - EmployeeUKTaxDetails
      summary: POST an EmployeeUKTaxDetails
      operationId: EmployeeUKTaxDetails_Post_By_employeeUKTaxDetails_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be updated.  The value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST and PATCH operations.  For more information\
          \ and examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeUKTaxDetails'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeUKTaxDetails'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeUKTaxDetails'
        required: true
      responses:
        "200":
          description: "An EmployeeUKTaxDetails is created, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
      - EmployeeUKTaxDetails
      summary: PATCH an EmployeeUKTaxDetails
      operationId: EmployeeUKTaxDetails_Patch_By_employeeUKTaxDetails_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be updated.  The value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST and PATCH operations.  For more information\
          \ and examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeUKTaxDetails'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeUKTaxDetails'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeUKTaxDetails'
        required: true
      responses:
        "200":
          description: "The EmployeeUKTaxDetails is updated, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/UnionMemberships:
    get:
      tags:
      - EmployeeUnion
      summary: GET EmployeeUnion Details
      operationId: EmployeeUnion_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ whose data will be retrieved.  The value provided must be the exact match\
          \ for an employee; otherwise, a bad request (400) error will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: contextDate
        in: query
        description: "The Context Date value is an “as-of” date used to determine\
          \ which employee data to search when records have specific start and end\
          \ dates.  The service defaults to the current datetime if the requester\
          \ does not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: contextDateRangeFrom
        in: query
        description: "The Context Date Range From value is the start of the range\
          \ of dates used to determine which employee data to search when records\
          \ have specific start and end dates.  The service defaults to null if the\
          \ requester does not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: contextDateRangeTo
        in: query
        description: "The Context Date Range To value is the end of the range of dates\
          \ to determine which employee data to search when records have specific\
          \ start and end dates.  The service defaults to null if the requester does\
          \ not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: The EmployeeUnion with the requested XRefCode
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeUnionMembership'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeUnionMembership'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeUnionMembership'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
      - EmployeeUnion
      summary: POST an EmployeeUnion
      operationId: EmployeeUnion_Post_By_employeeUnion_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be updated.  The value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST and PATCH operations.  For more information\
          \ and examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeUnionMembership'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeUnionMembership'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeUnionMembership'
        required: true
      responses:
        "200":
          description: "A EmployeeUnion is created, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
      - EmployeeUnion
      summary: PATCH an EmployeeUnion
      operationId: EmployeeUnion_Patch_By_employeeUnion_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be updated.  The value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeUnionMembership'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeUnionMembership'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeUnionMembership'
        required: true
      responses:
        "200":
          description: "The EmployeeUnion is updated, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/USFederalTaxes:
    get:
      tags:
      - EmployeeUSFederalTax
      summary: GET EmployeeUSFederalTax Details
      operationId: EmployeeUSFederalTax_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ whose data will be retrieved.  The value provided must be the exact match\
          \ for an employee; otherwise, a bad request (400) error will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: contextDate
        in: query
        description: "The Context Date value is an “as-of” date used to determine\
          \ which employee data to search when records have specific start and end\
          \ dates.  The service defaults to the current datetime if the requester\
          \ does not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: contextDateRangeFrom
        in: query
        description: "The Context Date Range From value is the start of the range\
          \ of dates used to determine which employee data to search when records\
          \ have specific start and end dates.  The service defaults to null if the\
          \ requester does not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: contextDateRangeTo
        in: query
        description: "The Context Date Range To value is the end of the range of dates\
          \ to determine which employee data to search when records have specific\
          \ start and end dates.  The service defaults to null if the requester does\
          \ not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: The EmployeeUSFederalTax with the requested XRefCode
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeUSFederalTax'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeUSFederalTax'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeUSFederalTax'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
      - EmployeeUSFederalTax
      summary: POST a EmployeeUSFederalTax
      operationId: EmployeeUSFederalTax_Post_By_employeeUSFederalTax_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be updated.  The value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST and PATCH operations.  For more information\
          \ and examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeUSFederalTax'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeUSFederalTax'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeUSFederalTax'
        required: true
      responses:
        "200":
          description: "An EmployeeUSFederalTax is created, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
      - EmployeeUSFederalTax
      summary: PATCH a EmployeeUSFederalTax
      operationId: EmployeeUSFederalTax_Patch_By_employeeUSFederalTax_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be updated.  The value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST and PATCH operations.  For more information\
          \ and examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeUSFederalTax'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeUSFederalTax'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeUSFederalTax'
        required: true
      responses:
        "200":
          description: "The EmployeeUSFederalTax is updated, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/USStateTaxes:
    get:
      tags:
      - EmployeeUSStateTax
      summary: GET EmployeeUSStateTax Details
      operationId: EmployeeUSStateTax_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ whose data will be retrieved.  The value provided must be the exact match\
          \ for an employee; otherwise, a bad request (400) error will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: contextDate
        in: query
        description: "The Context Date value is an “as-of” date used to determine\
          \ which employee data to search when records have specific start and end\
          \ dates.  The service defaults to the current datetime if the requester\
          \ does not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: contextDateRangeFrom
        in: query
        description: "The Context Date Range From value is the start of the range\
          \ of dates used to determine which employee data to search when records\
          \ have specific start and end dates.  The service defaults to null if the\
          \ requester does not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: contextDateRangeTo
        in: query
        description: "The Context Date Range To value is the end of the range of dates\
          \ to determine which employee data to search when records have specific\
          \ start and end dates.  The service defaults to null if the requester does\
          \ not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: The EmployeeUSStateTax with the requested XRefCode
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeUSStateTax'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeUSStateTax'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeUSStateTax'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
      - EmployeeUSStateTax
      summary: POST EmployeeUSStateTax Details
      operationId: EmployeeUSStateTax_Post_By_emplyeeUSStateTax_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be updated.  The value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST and PATCH operations.  For more information\
          \ and examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeUSStateTax'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeUSStateTax'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeUSStateTax'
        required: true
      responses:
        "200":
          description: "A EmployeeUSStateTax Detail is created, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
      - EmployeeUSStateTax
      summary: PATCH EmployeeUSStateTax Details
      operationId: EmployeeUSStateTax_Patch_By_emplyeeUSStateTax_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be updated.  The value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST and PATCH operations.  For more information\
          \ and examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeUSStateTax'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeUSStateTax'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeUSStateTax'
        required: true
      responses:
        "200":
          description: "The EmployeeUSStateTax Detail is updated, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/USTaxStatuses:
    get:
      tags:
      - EmployeeUSTaxStatus
      summary: GET EmployeeUSTaxStatus Details
      operationId: EmployeeUSTaxStatus_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ whose data will be retrieved.  The value provided must be the exact match\
          \ for an employee; otherwise, a bad request (400) error will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: contextDate
        in: query
        description: "The Context Date value is an “as-of” date used to determine\
          \ which employee data to search when records have specific start and end\
          \ dates.  The service defaults to the current datetime if the requester\
          \ does not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: contextDateRangeFrom
        in: query
        description: "The Context Date Range From value is the start of the range\
          \ of dates used to determine which employee data to search when records\
          \ have specific start and end dates.  The service defaults to null if the\
          \ requester does not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: contextDateRangeTo
        in: query
        description: "The Context Date Range To value is the end of the range of dates\
          \ to determine which employee data to search when records have specific\
          \ start and end dates.  The service defaults to null if the requester does\
          \ not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: The EmployeeUSTaxStatus with the requested XRefCode
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeUSTaxStatus'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeUSTaxStatus'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeUSTaxStatus'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
      - EmployeeUSTaxStatus
      summary: POST EmployeeUSTaxStatus Details
      operationId: EmployeeUSTaxStatus_Post_By_employeeUSTaxStatus_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be updated.  The value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST and PATCH operations.  For more information\
          \ and examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeUSTaxStatus'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeUSTaxStatus'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeUSTaxStatus'
        required: true
      responses:
        "200":
          description: "A EmployeeUSTaxStatus Detail is created, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
      - EmployeeUSTaxStatus
      summary: PATCH EmployeeUSTaxStatus Details
      operationId: EmployeeUSTaxStatus_Patch_By_employeeUSTaxStatus_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be updated.  The value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST and PATCH operations.  For more information\
          \ and examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeUSTaxStatus'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeUSTaxStatus'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeUSTaxStatus'
        required: true
      responses:
        "200":
          description: "The EmployeeUSTaxStatus Detail is updated, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/EmployeeVOE/{countryCode}/{employeeXRefCode}:
    get:
      tags:
      - EmployeeVerification
      summary: GET Verification of Employment (VOE) for a specific employee.
      operationId: EmployeeVerification_GetEmployeeVOE_By_countryCode_employeeXRefCode_clientNamespace
      parameters:
      - name: countryCode
        in: path
        description: Employee's Country Code
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: employeeXRefCode
        in: path
        description: The unique identifier (external reference code) of the employee
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: The EmployeePayrollTax with the requested XRefCode
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadEmployeeVOE'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadEmployeeVOE'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadEmployeeVOE'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/EmployeeVOI/{countryCode}/{employeeXRefCode}:
    get:
      tags:
      - EmployeeVerification
      summary: GET Verification of Income (VOI) for a specific employee.
      operationId: EmployeeVerification_GetEmployeeVOI_By_countryCode_employeeXRefCode_clientNamespace
      parameters:
      - name: countryCode
        in: path
        description: Employee's Country Code
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: employeeXRefCode
        in: path
        description: The unique identifier (external reference code) of the employee
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: The EmployeePayrollTax with the requested XRefCode
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadEmployeeVOI'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadEmployeeVOI'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadEmployeeVOI'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/VeteranStatuses:
    get:
      tags:
      - EmployeeVeteransStatus
      summary: GET EmployeeVeteransStatus Details
      operationId: EmployeeVeteransStatus_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ whose data will be retrieved.  The value provided must be the exact match\
          \ for an employee; otherwise, a bad request (400) error will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: contextDate
        in: query
        description: "The Context Date value is an “as-of” date used to determine\
          \ which employee data to search when records have specific start and end\
          \ dates.  The service defaults to the current datetime if the requester\
          \ does not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: contextDateRangeFrom
        in: query
        description: "The Context Date Range From value is the start of the range\
          \ of dates used to determine which employee data to search when records\
          \ have specific start and end dates.  The service defaults to null if the\
          \ requester does not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: contextDateRangeTo
        in: query
        description: "The Context Date Range To value is the end of the range of dates\
          \ to determine which employee data to search when records have specific\
          \ start and end dates.  The service defaults to null if the requester does\
          \ not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: The EmployeeVeteransStatusController with the requested XRefCode
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeVeteransStatus'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeVeteransStatus'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeVeteransStatus'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
      - EmployeeVeteransStatus
      summary: POST an EmployeeVeteransStatus
      operationId: EmployeeVeteransStatus_Post_By_employeeVeteransStatus_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be updated.  The value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST and PATCH operations.  For more information\
          \ and examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeVeteransStatus'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeVeteransStatus'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeVeteransStatus'
        required: true
      responses:
        "200":
          description: "A EmployeeVeteransStatus is created, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
      - EmployeeVeteransStatus
      summary: PATCH an EmployeeVeteransStatus
      operationId: EmployeeVeteransStatus_Patch_By_employeeVeteransStatus_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be updated.  The value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST and PATCH operations.  For more information\
          \ and examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeVeteransStatus'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeVeteransStatus'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeVeteransStatus'
        required: true
      responses:
        "200":
          description: "The EmployeeVeteransStatus is updated, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/VolunteerLists:
    get:
      tags:
      - EmployeeVolunteerList
      summary: GET Employee's Volunteer List Details
      operationId: EmployeeVolunteerList_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ whose data will be retrieved.  The value provided must be the exact match\
          \ for an employee; otherwise, a bad request (400) error will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: contextDate
        in: query
        description: "The Context Date value is an “as-of” date used to determine\
          \ which employee data to search when records have specific start and end\
          \ dates.  The service defaults to the current datetime if the requester\
          \ does not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: contextDateRangeFrom
        in: query
        description: "The Context Date Range From value is the start of the range\
          \ of dates used to determine which employee data to search when records\
          \ have specific start and end dates.  The service defaults to null if the\
          \ requester does not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: contextDateRangeTo
        in: query
        description: "The Context Date Range To value is the end of the range of dates\
          \ to determine which employee data to search when records have specific\
          \ start and end dates.  The service defaults to null if the requester does\
          \ not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: The  EmployeeVolunteerList for the requested employee XRefCode
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeVolunteerList'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeVolunteerList'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeVolunteerList'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
      - EmployeeVolunteerList
      summary: POST an EmployeeVolunteerList
      operationId: EmployeeVolunteerList_Post_By_employeeVolunteerList_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be updated.  The value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST and PATCH operations.  For more information\
          \ and examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeVolunteerList'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeVolunteerList'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeVolunteerList'
        required: true
      responses:
        "200":
          description: "A EmployeeVolunteerList is created, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
      - EmployeeVolunteerList
      summary: PATCH an EmployeeVolunteerList
      operationId: EmployeeVolunteerList_Patch_By_employeeVolunteerList_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be updated.  The value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST and PATCH operations.  For more information\
          \ and examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeVolunteerList'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeVolunteerList'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeVolunteerList'
        required: true
      responses:
        "200":
          description: "A EmployeeVolunteerList is updated, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/EmployeeWorkAssignmentManagers:
    get:
      tags:
      - EmployeeWorkAssigmentManager
      summary: GET EmployeeWorkAssignmentManager Details
      operationId: EmployeeWorkAssigmentManager_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ whose data will be retrieved.  The value provided must be the exact match\
          \ for an employee; otherwise, a bad request (400) error will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: contextDate
        in: query
        description: "The Context Date value is an “as-of” date used to determine\
          \ which employee data to search when records have specific start and end\
          \ dates.  The service defaults to the current datetime if the requester\
          \ does not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: contextDateRangeFrom
        in: query
        description: "The Context Date Range From value is the start of the range\
          \ of dates used to determine which employee data to search when records\
          \ have specific start and end dates.  The service defaults to null if the\
          \ requester does not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: contextDateRangeTo
        in: query
        description: "The Context Date Range To value is the end of the range of dates\
          \ to determine which employee data to search when records have specific\
          \ start and end dates.  The service defaults to null if the requester does\
          \ not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: The EmployeeWorkAssignmentManager with the requested XRefCode
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeWorkAssignmentManager'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeWorkAssignmentManager'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeWorkAssignmentManager'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
      - EmployeeWorkAssigmentManager
      summary: POST a EmployeeWorkAssignmentManager
      operationId: EmployeeWorkAssigmentManager_Post_By_ewam_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be updated.  The value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST and PATCH operations.  For more information\
          \ and examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeWorkAssignmentManager'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeWorkAssignmentManager'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeWorkAssignmentManager'
        required: true
      responses:
        "200":
          description: "An EmployeeWorkAssignmentManager is created, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
      - EmployeeWorkAssigmentManager
      summary: PATCH a EmployeeWorkAssignmentManager
      operationId: EmployeeWorkAssigmentManager_Patch_By_ewam_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be updated.  The value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST and PATCH operations.  For more information\
          \ and examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeWorkAssignmentManager'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeWorkAssignmentManager'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeWorkAssignmentManager'
        required: true
      responses:
        "200":
          description: "The EmployeeWorkAssignmentManager is updated, no response\
            \ body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/EmployeeWorkAssignmentManagers/Replacement:
    patch:
      tags:
      - EmployeeWorkAssigmentManager
      summary: Replace EmployeeWorkAssignmentManagers
      operationId: EmployeeWorkAssigmentManager_Replace_By_workAssignmentManager_xRefCode_replaceFrom_replaceTo_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the Employee\
          \ for whom the subordinate data will be replaced.\r\nThe value provided\
          \ must be the exact match for an Employee; otherwise, a bad request (400)\
          \ error will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: replaceFrom
        in: query
        description: The date from which all EmployeeWorkAssignmentManagers will be
          replaced
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: replaceTo
        in: query
        description: The date up to which all EmployeeWorkAssignmentManagers will
          be replaced
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, validate the request\
          \ without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The new JSON-formatted EmployeeWorkAssignmentManager with which\
          \ to replace the deleted ones\r\nFor more information and examples, please\
          \ refer to the Dayforce Web Services RESTful Developer's Guide."
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeWorkAssignmentManager'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeWorkAssignmentManager'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeWorkAssignmentManager'
        required: true
      responses:
        "200":
          description: The Employee's Work Assignment Managers are replaced within
            the given date range; no response body
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/WorkAssignments:
    get:
      tags:
      - EmployeeWorkAssignment
      summary: GET WorkAssignment Details
      operationId: EmployeeWorkAssignment_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ whose data will be retrieved.  The value provided must be the exact match\
          \ for an employee; otherwise, a bad request (400) error will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: contextDate
        in: query
        description: "The Context Date value is an “as-of” date used to determine\
          \ which employee data to search when records have specific start and end\
          \ dates.  The service defaults to the current datetime if the requester\
          \ does not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: contextDateRangeFrom
        in: query
        description: "The Context Date Range From value is the start of the range\
          \ of dates used to determine which employee data to search when records\
          \ have specific start and end dates.  The service defaults to null if the\
          \ requester does not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: contextDateRangeTo
        in: query
        description: "The Context Date Range To value is the end of the range of dates\
          \ to determine which employee data to search when records have specific\
          \ start and end dates.  The service defaults to null if the requester does\
          \ not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: The Work Assignments of employee with the requested XRefCode
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeWorkAssignment'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeWorkAssignment'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeWorkAssignment'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
      - EmployeeWorkAssignment
      summary: POST a WorkAssignment
      operationId: EmployeeWorkAssignment_Post_By_workAssignment_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be updated.  The value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeWorkAssignment'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeWorkAssignment'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeWorkAssignment'
        required: true
      responses:
        "200":
          description: "An EmployeeWorkAssignment is created, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
      - EmployeeWorkAssignment
      summary: PATCH a Work Assignment
      operationId: EmployeeWorkAssignment_Patch_By_workAssignment_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be updated.  The value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST and PATCH operations.  For more information\
          \ and examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeWorkAssignment'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeWorkAssignment'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeWorkAssignment'
        required: true
      responses:
        "200":
          description: "The Work Assignment is updated, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/WorkAssignments/Replacement:
    patch:
      tags:
      - EmployeeWorkAssignment
      summary: Replace WorkAssignments
      operationId: EmployeeWorkAssignment_Replace_By_workAssignment_xRefCode_replaceFrom_replaceTo_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the Employee\
          \ for whom the subordinate data will be replaced.\r\nThe value provided\
          \ must be the exact match for an Employee; otherwise, a bad request (400)\
          \ error will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: replaceFrom
        in: query
        description: The date from which all WorkAssignments will be replaced
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: replaceTo
        in: query
        description: The date up to which all WorkAssignments will be replaced
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, validate the request\
          \ without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The new JSON-formatted WorkAssignment with which to replace\
          \ the deleted ones\r\nFor more information and examples, please refer to\
          \ the Dayforce Web Services RESTful Developer's Guide."
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeWorkAssignment'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeWorkAssignment'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeWorkAssignment'
        required: true
      responses:
        "200":
          description: The Employee's Work Assignments are replaced within the given
            date range; no response body
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Payroll/WorkLocationOverride:
    get:
      tags:
      - EmployeeWorkLocationOverride
      summary: GET List of work location overrides.
      operationId: EmployeeWorkLocationOverride_Get_By_workLocationOverrideXRefCodes_locationAddressStateCodes_legalEntityXRefCode_legalEntityOverrideDetails_pageSize_clientNamespace
      parameters:
      - name: workLocationOverrideXRefCodes
        in: query
        description: The comma delimited list of work location overrides XRef codes
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: locationAddressStateCodes
        in: query
        description: The comma delimited list of location address state codes
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: legalEntityXRefCode
        in: query
        description: The legal entity XRef code
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: legalEntityOverrideDetails
        in: query
        description: Filter to fetch all or current/future effective legal entity
          overrides. Value can be All or Active. Default value is Active
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: Number of records to be loaded
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: Work location overrides
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayloadIEnumerableEmployeeWorkLocationOverride'
            text/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayloadIEnumerableEmployeeWorkLocationOverride'
            text/html:
              schema:
                $ref: '#/components/schemas/PaginatedPayloadIEnumerableEmployeeWorkLocationOverride'
        "204":
          description: No work location overrides available.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayloadIEnumerableEmployeeWorkLocationOverride'
            text/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayloadIEnumerableEmployeeWorkLocationOverride'
            text/html:
              schema:
                $ref: '#/components/schemas/PaginatedPayloadIEnumerableEmployeeWorkLocationOverride'
        "400":
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
  /{clientNamespace}/v1/Payroll/WorkLocationOverrides:
    post:
      tags:
      - EmployeeWorkLocationOverride
      summary: POST Employee Elections
      operationId: EmployeeWorkLocationOverride_Post_By_workLocationOverrides_isValidateOnly_clientNamespace
      parameters:
      - name: isValidateOnly
        in: query
        description: "If TRUE, POST operations validate the request without queue\
          \ the import. The default value is FALSE. Note, POST operation will only\
          \ validate data structure"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST operation. For more information and examples,\
          \ please refer to the Dayforce Web Services RESTful Developer's Guide"
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/EmployeeWorkLocationOverride'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/EmployeeWorkLocationOverride'
          text/html:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/EmployeeWorkLocationOverride'
        required: true
      responses:
        "200":
          description: OK response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeWorkLocationOverride'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeWorkLocationOverride'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeWorkLocationOverride'
        "400":
          description: Request is malformed or has validation errors.  Correct and
            resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
    patch:
      tags:
      - EmployeeWorkLocationOverride
      summary: PATCH Employee Elections
      operationId: EmployeeWorkLocationOverride_Patch_By_workLocationOverrides_isValidateOnly_clientNamespace
      parameters:
      - name: isValidateOnly
        in: query
        description: "If TRUE, PATCH operations validate the request without queue\
          \ the import. The default value is FALSE. Note, PATCH operation will only\
          \ validate data structure"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in PATCH operation. For more information and\
          \ examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/EmployeeWorkLocationOverride'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/EmployeeWorkLocationOverride'
          text/html:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/EmployeeWorkLocationOverride'
        required: true
      responses:
        "200":
          description: OK response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeWorkLocationOverride'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeWorkLocationOverride'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeWorkLocationOverride'
        "400":
          description: Request is malformed or has validation errors.  Correct and
            resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
  /{clientNamespace}/V1/EmploymentStatuses:
    get:
      tags:
      - EmploymentStatuses
      summary: GET a List of EmploymentStatus XRefCodes
      operationId: EmploymentStatuses_Get_By_clientNamespace
      parameters:
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: A collection of EmploymentStatus XRefCodes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmploymentStatus'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmploymentStatus'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmploymentStatus'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/EmploymentStatuses/{xrefCode}:
    get:
      tags:
      - EmploymentStatuses
      summary: GET a EmploymentStatus with the requested XRefCode.
      operationId: EmploymentStatuses_Get_By_xrefCode_clientNamespace
      parameters:
      - name: xrefCode
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: The EmploymentStatus with the requested XRefCode
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadEmploymentStatus'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadEmploymentStatus'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadEmploymentStatus'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/EmploymentStatusReasons:
    get:
      tags:
      - EmploymentStatusReasons
      summary: GET a List of EmploymentStatusReason XRefCodes
      operationId: EmploymentStatusReasons_Get_By_clientNamespace
      parameters:
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: A collection of EmploymentStatusReason XRefCodes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmploymentStatusReason'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmploymentStatusReason'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmploymentStatusReason'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/EmploymentStatusReasons/{xrefCode}:
    get:
      tags:
      - EmploymentStatusReasons
      summary: GET a EmploymentStatusReason with the requested XRefCode.
      operationId: EmploymentStatusReasons_Get_By_xrefCode_clientNamespace
      parameters:
      - name: xrefCode
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: The EmploymentStatusReason with the requested XRefCode
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadEmploymentStatusReason'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadEmploymentStatusReason'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadEmploymentStatusReason'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/ESignatureOrder:
    post:
      tags:
      - ESignatureOrder
      summary: POST e-signature order status.
      operationId: ESignatureOrder_Post_By_requestXML_clientNamespace
      parameters:
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
          text/json:
            schema:
              type: array
              items:
                type: object
          text/html:
            schema:
              type: array
              items:
                type: object
          application/xml:
            schema:
              type: array
              items:
                type: object
          text/xml:
            schema:
              type: array
              items:
                type: object
        required: true
      responses:
        "200":
          description: Returns a HTTP OK response indicating the acceptance of e-signature
            order status
          content:
            application/xml: {}
  /{clientNamespace}/V1/ExtensibleProperty/{typeCode}/{entityType}/{countryCode}/{entityXRefCode}:
    get:
      tags:
      - ExtensibleProperty
      summary: GET The list of regional property.
      operationId: ExtensibleProperty_Get_By_typeCode_entityType_countryCode_entityXRefCode_elementXRefCode_activeAll_clientNamespace
      parameters:
      - name: typeCode
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: entityType
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: countryCode
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: entityXRefCode
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: elementXRefCode
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: activeAll
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: "The ExtensibleProperty with the requested TypeCode,EntityType,CountryCode,EntityXrefCode"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableExtensibleProperty'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableExtensibleProperty'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableExtensibleProperty'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableExtensibleProperty'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableExtensibleProperty'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableExtensibleProperty'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableExtensibleProperty'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableExtensibleProperty'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableExtensibleProperty'
    post:
      tags:
      - ExtensibleProperty
      summary: POST (Create) Extensible Property
      operationId: ExtensibleProperty_Post_By_extensiblePropertyModel_typeCode_entityType_countryCode_entityXRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: typeCode
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: entityType
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: countryCode
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: entityXRefCode
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ExtensibleProperty'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ExtensibleProperty'
          text/html:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ExtensibleProperty'
        required: true
      responses:
        "200":
          description: "The ExtensibleProperty with the requested TypeCode,EntityType,CountryCode,EntityXrefCode"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExtensibleProperty'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExtensibleProperty'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExtensibleProperty'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
  /{clientNamespace}/V1/ExtensibleProperty/Remove/{typeCode}/{entityType}/{countryCode}/{entityXRefCode}:
    post:
      tags:
      - ExtensibleProperty
      operationId: ExtensibleProperty_Delete_By_typeCode_entityType_countryCode_entityXRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: typeCode
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: entityType
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: countryCode
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: entityXRefCode
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: The ExtensibleProperty with the requested EntityXrefCode
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtensibleProperty'
            text/json:
              schema:
                $ref: '#/components/schemas/ExtensibleProperty'
            text/html:
              schema:
                $ref: '#/components/schemas/ExtensibleProperty'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
  /{clientNamespace}/V1/GLOBALPayRunImport:
    post:
      tags:
      - GlobalPayRun
      summary: POST Global Pay Run/s Details
      operationId: GlobalPayRun_Post_By_isValidateOnly_clientNamespace
      parameters:
      - name: isValidateOnly
        in: query
        description: "If TRUE, POST operations validate the request without queue\
          \ the import. The default value is FALSE. Note, POST operation will only\
          \ validate data structure"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: A Global Pay Run is created with an empty response body
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
  /{clientNamespace}/V1/I9Orders/{i9OrderId}:
    patch:
      tags:
      - I9Orders
      summary: PATCH (Update) an I-9 order
      operationId: I9Orders_Patch_By_i9Order_i9OrderId_isValidateOnly_clientNamespace
      parameters:
      - name: i9OrderId
        in: path
        description: The unique identifier for the I-9 order on the I-9 partner's
          system. The value of this parameter needs to match the value for the I9OrderId
          property in the request body
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: ""
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: Details about the I-9 order to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/I9Order'
          text/json:
            schema:
              $ref: '#/components/schemas/I9Order'
          text/html:
            schema:
              $ref: '#/components/schemas/I9Order'
          application/xml:
            schema:
              $ref: '#/components/schemas/I9Order'
          text/xml:
            schema:
              $ref: '#/components/schemas/I9Order'
        required: true
      responses:
        "200":
          description: "The I-9 order is updated, no response body"
          content:
            application/xml: {}
  /{clientNamespace}/V1/JobFeeds:
    get:
      tags:
      - JobFeeds
      summary: GET Job Feeds
      operationId: JobFeeds_Get_By_companyName_parentCompanyName_internalJobBoardCode_includeActivePostingOnly_lastUpdateTimeFrom_lastUpdateTimeTo_datePostedFrom_datePostedTo_htmlDescription_clientNamespace
      parameters:
      - name: companyName
        in: query
        description: "Company name. Example: XYZ Co"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: parentCompanyName
        in: query
        description: "Parent Company name. Example: Ceridian"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: internalJobBoardCode
        in: query
        description: "XRefCode of Job Board. Example: CANDIDATEPORTAL"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: includeActivePostingOnly
        in: query
        description: "If true, then exclude inactive postings from the result. If\
          \ False, then the 'Last Update Time From' and 'Last Update Time To' parameters\
          \ are required and the range specified between the 'Last Update Time From'\
          \ and 'Last Update Time To' parameters must not be larger than 1 month.\
          \ Example: True"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: lastUpdateTimeFrom
        in: query
        description: "A starting timestamp of last updated job posting. Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: lastUpdateTimeTo
        in: query
        description: "An ending timestamp of last updated job posting. Example: 2017-02-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: datePostedFrom
        in: query
        description: "A starting timestamp of job posting date. Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: datePostedTo
        in: query
        description: "An ending timestamp of job posting date. Example: 2017-02-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: htmlDescription
        in: query
        description: A flag to feed the jobs over with html formatting or plain text
          description
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: A collection of all active external job postings (i.e. public
            facing job postings) based on specified filter parameters
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobFeed'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobFeed'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobFeed'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobFeed'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json: {}
            text/html: {}
            application/xml: {}
  /{clientNamespace}/V1/Jobs:
    get:
      tags:
      - Jobs
      summary: GET a List of Jobs
      operationId: Jobs_Get_By_contextDate_clientNamespace
      parameters:
      - name: contextDate
        in: query
        description: "The Context Date value is an “as-of” date used to determine\
          \ which job data to search when records have specific start and end dates.\
          \  The service defaults to the current datetime if the requester does not\
          \ specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: A collection of Job XRefCodes meeting the search criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableJob'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableJob'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableJob'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
      - Jobs
      summary: POST (Add) a Job
      operationId: Jobs_Post_By_job_isValidateOnly_clientNamespace
      parameters:
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, PATCH (job update)\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in PATCH (job update) operations.  For more information\
          \ and examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Job'
          text/json:
            schema:
              $ref: '#/components/schemas/Job'
          text/html:
            schema:
              $ref: '#/components/schemas/Job'
        required: true
      responses:
        "200":
          description: "A Job is created, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
  /{clientNamespace}/V1/Jobs/{xrefCode}:
    get:
      tags:
      - Jobs
      summary: GET a List of Jobs
      operationId: Jobs_Get_By_XrefCode_clientNamespace
      parameters:
      - name: xrefCode
        in: path
        description: "The unique identifier (external reference code) of the job to\
          \ be retrieved.  The value provided must be the exact match for a job; otherwise,\
          \ a bad request (400) error will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: The Job with the requested XRefCode
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadJob'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadJob'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadJob'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Jobs/{xRefCode}:
    patch:
      tags:
      - Jobs
      summary: PATCH (Update) a Job
      operationId: Jobs_Patch_By_job_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the job to\
          \ be retrieved.  The value provided must be the exact match for a job; otherwise,\
          \ a bad request (400) error will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, PATCH (job update)\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in PATCH (job update) operations.  For more information\
          \ and examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Job'
          text/json:
            schema:
              $ref: '#/components/schemas/Job'
          text/html:
            schema:
              $ref: '#/components/schemas/Job'
        required: true
      responses:
        "200":
          description: "A Job is updated, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
  /{clientNamespace}/V1/KpiData:
    get:
      tags:
      - KpiData
      summary: "Get KPI Data matching search criteria\r\n(if neither Zone or MDSE\
        \ supplied the data is assumed to be organization-wide)"
      operationId: KpiData_Get_By_orgUnitXRefCode_kpiXRefCode_kpiDataType_timePeriod_filterFrom_filterTo_axisXRefCode_mdseXRefCode_clientNamespace
      parameters:
      - name: orgUnitXRefCode
        in: query
        description: Unique identifier of the Org
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: kpiXRefCode
        in: query
        description: The unique identifier of the KPI
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: kpiDataType
        in: query
        description: "The data type of the KPI; Enter values for either actual, plan\
          \ or forecast"
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: timePeriod
        in: query
        description: "The time period for the KPI; Enter values in terms of either\
          \ minutes, days or weeks"
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: filterFrom
        in: query
        description: Start date for the KPI data. Format yyyy-mm-dd
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: filterTo
        in: query
        description: End date for the KPI data. Format yyyy-mm-dd
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: axisXRefCode
        in: query
        description: The unique identifier of the KPI's axis . Axis data can be identified
          from 'Axis' table
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: mdseXRefCode
        in: query
        description: The unique identifier of the MDSE to select a specific department.
          Use only when merchandise departments have been configured
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: KPI Data which matches the supplied parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableKpiData'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableKpiData'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableKpiData'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "501":
          description: The supplied parameter combination has not been implemented
            and is unsupported.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
    post:
      tags:
      - KpiData
      summary: Post KPI Data for the supplied parameters
      operationId: KpiData_Post_By_orgUnitXRefCode_kpiXRefCode_kpiDataType_timePeriod_models_AggregateToDay_isValidateOnly_clientNamespace
      parameters:
      - name: orgUnitXRefCode
        in: query
        description: Org unit reference code
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: kpiXRefCode
        in: query
        description: KPI reference code
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: kpiDataType
        in: query
        description: "KPI data type - Enter values for either actual, plan or forecast"
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: timePeriod
        in: query
        description: "KPI time period - Enter values for either minute, day or week"
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: AggregateToDay
        in: query
        description: Aggregate to day will be set to true by default. This will aggregate
          data from minute to day
        required: false
        style: form
        explode: true
        schema:
          type: boolean
        x-ballerina-name: aggregateToDay
      - name: isValidateOnly
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/KpiData'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/KpiData'
          text/html:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/KpiData'
        required: true
      responses:
        "201":
          description: The KPI Data has been created
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "403":
          description: User does not have sufficient access rights to create KPI Data.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "409":
          description: The KPI Data has not been created as conflicting KPI Data already
            exists
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "500":
          description: An unexpected server error occurred.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
    patch:
      tags:
      - KpiData
      summary: Patch KPI Data for the supplied parameters
      operationId: KpiData_Patch_By_orgUnitXRefCode_kpiXRefCode_kpiDataType_timePeriod_models_AggregateToDay_isValidateOnly_clientNamespace
      parameters:
      - name: orgUnitXRefCode
        in: query
        description: Org unit reference code
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: kpiXRefCode
        in: query
        description: KPI reference code
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: kpiDataType
        in: query
        description: "KPI data type - Enter values for either actual, plan or forecast"
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: timePeriod
        in: query
        description: "KPI time period - Enter values for either minute, day or week"
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: AggregateToDay
        in: query
        description: Aggregate to day will be set to true by default. This will aggregate
          data from minute to day
        required: false
        style: form
        explode: true
        schema:
          type: boolean
        x-ballerina-name: aggregateToDay
      - name: isValidateOnly
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/KpiData'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/KpiData'
          text/html:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/KpiData'
        required: true
      responses:
        "204":
          description: The KPI Data has been updated
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "403":
          description: User does not have sufficient access rights to update KPI Data.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "404":
          description: The Kpi Data has not been patched as could not be found
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "500":
          description: An unexpected server error occurred.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
  /{clientNamespace}/V1/KpiTargetPattern:
    get:
      tags:
      - KpiTargetPattern
      summary: Get KPI Target Patterns matching search criteria
      operationId: KpiTargetPattern_Get_By_orgUnitXRefCode_kpiXRefCode_startDate_endDate_zoneXRefCode_clientNamespace
      parameters:
      - name: orgUnitXRefCode
        in: query
        description: Unique identifier of the Org
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: kpiXRefCode
        in: query
        description: The unique identifier of the KPI
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: startDate
        in: query
        description: Date to represent the start of the period for which KPI target
          patterns should be retrieved. Format yyyy-mm-dd
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: endDate
        in: query
        description: Date to represent the end of the period for which KPI target
          patterns should be retrieved. Format yyyy-mm-dd
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: zoneXRefCode
        in: query
        description: The unique identifier of the zone
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: KPI Target Pattern details which matches the supplied parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableKpiTargetPattern'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableKpiTargetPattern'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableKpiTargetPattern'
        "400":
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableKpiTargetPattern'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableKpiTargetPattern'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableKpiTargetPattern'
        "501":
          description: The supplied parameter combination has not been implemented
            and is unsupported.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
    post:
      tags:
      - KpiTargetPattern
      summary: Post KPI Target Pattern for the supplied parameters
      operationId: KpiTargetPattern_Post_By_orgUnitXRefCode_kpiXRefCode_kpiTargetPatternApiModel_isValidateOnly_clientNamespace
      parameters:
      - name: orgUnitXRefCode
        in: query
        description: Org unit reference code
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: kpiXRefCode
        in: query
        description: KPI reference code
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, the POST operation\
          \ validates the\r\n                request without creating records in the\
          \ database. The default value is FALSE if parameter is not specified"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/KpiTargetPatternPOST'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/KpiTargetPatternPOST'
          text/html:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/KpiTargetPatternPOST'
        required: true
      responses:
        "200":
          description: "If isValidateOnly was passed in as true, this shows that the\
            \ validation passed"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "201":
          description: The KPI Target Pattern has been created.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed. Correct and resubmit.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "403":
          description: User does not have sufficient acess rights to create a KPI
            Target Pattern.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "409":
          description: The KPI Target Pattern has not been created as conflicting
            data exists.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "500":
          description: An unexpected server error occurred.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
    patch:
      tags:
      - KpiTargetPattern
      summary: Patch KPI Target Pattern for the supplied parameters
      operationId: KpiTargetPattern_Patch_By_orgUnitXRefCode_kpiXRefCode_kpiTargetPatternApiModel_isValidateOnly_clientNamespace
      parameters:
      - name: orgUnitXRefCode
        in: query
        description: Org unit reference code
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: kpiXRefCode
        in: query
        description: KPI reference code
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, the PATCH operation\
          \ validates the\r\n                request without applying the updates\
          \ to the database. The default value is FALSE if parameter is not specified"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/KpiTargetPatternPOST'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/KpiTargetPatternPOST'
          text/html:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/KpiTargetPatternPOST'
        required: true
      responses:
        "200":
          description: "If isValidateOnly was passed in as true, this shows that the\
            \ validation passed"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "204":
          description: The KPI Target Pattern was updated successfully
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed. Correct and resubmit
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "403":
          description: User does not have sufficient acess rights to update KPI Target
            Pattern
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "404":
          description: The KPI Target Pattern does not exist in Dayforce
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "500":
          description: An unexpected server error occurred
          content:
            application/json: {}
            text/json: {}
            text/html: {}
  /{clientNamespace}/V1/LaborCosts:
    get:
      tags:
      - LaborCosts
      operationId: LaborCosts_GetLaborCostEstimate_By_businessDate_locationXRefCode_workedLocationXRefCode_payCategoryXRefCode_clientNamespace
      parameters:
      - name: businessDate
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: locationXRefCode
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: workedLocationXRefCode
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: payCategoryXRefCode
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: Labor cost result in the segment of 15 minutes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadLaborCostResult'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadLaborCostResult'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadLaborCostResult'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: Server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
  /{clientNamespace}/V1/LaborDemands:
    get:
      tags:
      - LaborDemands
      summary: Get Labor Demand Curve details for Org over period
      operationId: LaborDemands_Get_By_orgUnitXRefCode_schedulePeriodStart_filterFrom_filterTo_zoneXRefCode_activityXRefCode_laborMeasureXRefCode_axisXRefCode_clientNamespace
      parameters:
      - name: orgUnitXRefCode
        in: query
        description: Unique identifier of the Org
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: schedulePeriodStart
        in: query
        description: Start of schedule period of the labor demand. Format yyyy-mm-dd
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: filterFrom
        in: query
        description: Start of range (optional) - defaults to schedulePeriodStart if
          not supplied. Format yyyy-mm-dd
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: filterTo
        in: query
        description: End of range (optional) - defaults to a week from schedulePeriodStart
          if not supplied. Format yyyy-mm-dd
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: zoneXRefCode
        in: query
        description: The unique identifier of the zone
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: activityXRefCode
        in: query
        description: The unique identifier of the activity
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: laborMeasureXRefCode
        in: query
        description: The unique identifier of the labor measure
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: axisXRefCode
        in: query
        description: The unique identifier of the axis
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: Labor demand details which matches the supplied OrgXrefCode
            and SchedulePeriod
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadLaborDemand'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadLaborDemand'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadLaborDemand'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadLaborDemand'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadLaborDemand'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadLaborDemand'
    post:
      tags:
      - LaborDemands
      summary: Create a set of labor demands for an organization in the defined SchedulePeriod
      operationId: LaborDemands_Post_By_model_isValidateOnly_clientNamespace
      parameters:
      - name: isValidateOnly
        in: query
        description: ""
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LaborDemand'
          text/json:
            schema:
              $ref: '#/components/schemas/LaborDemand'
          text/html:
            schema:
              $ref: '#/components/schemas/LaborDemand'
        required: true
      responses:
        "201":
          description: The Labor Demands have been created
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "409":
          description: The Labor Demands have not been created as conflicting labor
            demands already exist
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "500":
          description: An unexpected server error occurred.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
    delete:
      tags:
      - LaborDemands
      summary: "Deletes Labor Demand Curve details for Org over period\r\nOptional\
        \ will only delete demands matching filters"
      operationId: LaborDemands_Delete_By_orgUnitXRefCode_schedulePeriodStart_filterFrom_filterTo_zoneXRefCode_activityXRefCode_laborMeasureXRefCode_axisXRefCode_clientNamespace
      parameters:
      - name: orgUnitXRefCode
        in: query
        description: Org Unit Ref Code
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: schedulePeriodStart
        in: query
        description: start of schedule period
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: filterFrom
        in: query
        description: start of range (optional) - defaults to schedulePeriodStart if
          not supplied
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: filterTo
        in: query
        description: end of range (optional) - defaults to a week from schedulePeriodStart
          if not supplied
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: zoneXRefCode
        in: query
        description: filter by Zone Ref Code (optional)
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: activityXRefCode
        in: query
        description: filter by Activity Ref Code (optional)
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: laborMeasureXRefCode
        in: query
        description: filter by Labor Measure Ref Code (optional)
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: axisXRefCode
        in: query
        description: filter by Axis Ref Code (optional)
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "204":
          description: The Labor demand details for the supplied OrgXrefCode and SchedulePeriod
            have been deleted
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "500":
          description: An unexpected server error occurred.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
    patch:
      tags:
      - LaborDemands
      summary: Update a set of labor demands for an organization in the defined SchedulePeriod
      operationId: LaborDemands_Patch_By_model_dayToPatch_zoneXRefCode_activityXRefCode_laborMeasureXRefCode_axisXRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: dayToPatch
        in: query
        description: ""
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: zoneXRefCode
        in: query
        description: ""
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: activityXRefCode
        in: query
        description: ""
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: laborMeasureXRefCode
        in: query
        description: ""
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: axisXRefCode
        in: query
        description: ""
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: ""
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LaborDemand'
          text/json:
            schema:
              $ref: '#/components/schemas/LaborDemand'
          text/html:
            schema:
              $ref: '#/components/schemas/LaborDemand'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            text/html:
              schema:
                type: object
        "204":
          description: The Labor Demands have been updated
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "404":
          description: The Labor Demands have not been patched as could not be found
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "409":
          description: Conflict
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "500":
          description: An unexpected server error occurred.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
  /{clientNamespace}/V1/LaborMetrics/{xRefCode}:
    get:
      tags:
      - LaborMetrics
      summary: Get Labor Metric details
      operationId: LaborMetrics_GetLaborMetrics_By_xRefCode_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: Labor metric details which matches the XRefCode
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadLaborMetricCodes'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadLaborMetricCodes'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadLaborMetricCodes'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
  /{clientNamespace}/V1/LaborMetrics:
    post:
      tags:
      - LaborMetrics
      summary: Post Insert Labor metrics codes
      operationId: LaborMetrics_Post_By_laborMetricsCodeData_isValidateOnly_clientNamespace
      parameters:
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST operations\
          \ validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST operation. For more information and examples,\
          \ please refer to the Dayforce Web Services RESTful Developer's Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LaborMetricsCodesForSubmit'
          text/json:
            schema:
              $ref: '#/components/schemas/LaborMetricsCodesForSubmit'
          text/html:
            schema:
              $ref: '#/components/schemas/LaborMetricsCodesForSubmit'
        required: true
      responses:
        "200":
          description: New Labor metrics code data is inserted into Dayforce
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LaborMetricsCodePostPatchResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/LaborMetricsCodePostPatchResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/LaborMetricsCodePostPatchResponse'
        "400":
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
    patch:
      tags:
      - LaborMetrics
      summary: Patch (Update) a Labor metrics code
      operationId: LaborMetrics_Patch_By_laborMetricsCodeData_isValidateOnly_clientNamespace
      parameters:
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, PATCH operations\
          \ validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in PATCH operation. For more information and\
          \ examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LaborMetricsCodesForSubmit'
          text/json:
            schema:
              $ref: '#/components/schemas/LaborMetricsCodesForSubmit'
          text/html:
            schema:
              $ref: '#/components/schemas/LaborMetricsCodesForSubmit'
        required: true
      responses:
        "200":
          description: Labor metrics code data is updated
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed. Correct and resubmit.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "500":
          description: An unexpected server error occurred.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
  /{clientNamespace}/V1/LaborMetricTypes/{xRefCode}:
    get:
      tags:
      - LaborMetricTypes
      summary: Get Labor Metric Type details
      operationId: LaborMetricTypes_GetLaborMetricType_By_xRefCode_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: Labor metric type details which matches the XRefCode
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadLaborMetricType'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadLaborMetricType'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadLaborMetricType'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
  /{clientNamespace}/V1/LaborMetricTypes:
    post:
      tags:
      - LaborMetricTypes
      summary: POST Labor Metric Type details
      operationId: LaborMetricTypes_PostLaborMetricType_By_laborMetricTypeData_isValidateOnly_clientNamespace
      parameters:
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST operations\
          \ validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST operation. For more information and examples,\
          \ please refer to the Dayforce Web Services RESTful Developer's Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LaborMetricTypeForSubmit'
          text/json:
            schema:
              $ref: '#/components/schemas/LaborMetricTypeForSubmit'
          text/html:
            schema:
              $ref: '#/components/schemas/LaborMetricTypeForSubmit'
        required: true
      responses:
        "200":
          description: New Labor Metric Type is inserted into Dayforce
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LaborMetricTypePatchPostResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/LaborMetricTypePatchPostResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/LaborMetricTypePatchPostResponse'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
    patch:
      tags:
      - LaborMetricTypes
      summary: Patch (Update) Labor Metric Type
      operationId: LaborMetricTypes_LaborMetricType_By_laborMetricTypeData_laborMetricTypeXRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: laborMetricTypeXRefCode
        in: query
        description: Labor Metric Type XRefCode
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, PATCH operations\
          \ validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in PATCH operation.  For more information and\
          \ examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LaborMetricTypeForSubmit'
          text/json:
            schema:
              $ref: '#/components/schemas/LaborMetricTypeForSubmit'
          text/html:
            schema:
              $ref: '#/components/schemas/LaborMetricTypeForSubmit'
        required: true
      responses:
        "200":
          description: Labor Metric Type data is updated
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed. Correct and resubmit.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "500":
          description: An unexpected server error occurred.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
  /{clientNamespace}/V1/LaborValidationPolicy/Search:
    post:
      tags:
      - LaborValidationPolicy
      operationId: LaborValidationPolicy_SearchLaborValidationPolicy_By_laborValidationFilterParams_pageSize_clientNamespace
      parameters:
      - name: pageSize
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LaborValidationFilters'
          text/json:
            schema:
              $ref: '#/components/schemas/LaborValidationFilters'
          text/html:
            schema:
              $ref: '#/components/schemas/LaborValidationFilters'
        required: true
      responses:
        "200":
          description: Search results for Labor Validation Policy rules based on parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayloadIEnumerableLaborValidationRule'
            text/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayloadIEnumerableLaborValidationRule'
            text/html:
              schema:
                $ref: '#/components/schemas/PaginatedPayloadIEnumerableLaborValidationRule'
        "400":
          description: Request is malformed.  Correct it and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
  /{clientNamespace}/V1/LaborValidationPolicy/Rule/{laborValidationPolicyRuleXRefCode}:
    get:
      tags:
      - LaborValidationPolicy
      summary: Get Labor Validation Policy Rule Details
      operationId: LaborValidationPolicy_GetLaborValidationRule_By_laborValidationPolicyRuleXRefCode_clientNamespace
      parameters:
      - name: laborValidationPolicyRuleXRefCode
        in: path
        description: ""
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: Labor Validation Policy rules  which matches the XRefCode
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableLaborValidationRule'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableLaborValidationRule'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableLaborValidationRule'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
    delete:
      tags:
      - LaborValidationPolicy
      operationId: LaborValidationPolicy_DeleteLaborValidationRule_By_laborValidationPolicyRuleXRefCode_clientNamespace
      parameters:
      - name: laborValidationPolicyRuleXRefCode
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: Delete labor validation policy rules based on xrefcode
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Invalid Request xrefcode
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
    patch:
      tags:
      - LaborValidationPolicy
      operationId: LaborValidationPolicy_UpdateLaborValidationPolicy_By_laborValidationRule_laborValidationPolicyRuleXRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: laborValidationPolicyRuleXRefCode
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST operation\
          \ validates the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LaborValidationRule'
          text/json:
            schema:
              $ref: '#/components/schemas/LaborValidationRule'
          text/html:
            schema:
              $ref: '#/components/schemas/LaborValidationRule'
        required: true
      responses:
        "200":
          description: Post Validation Policy Rule
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadBoolean'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadBoolean'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadBoolean'
        "400":
          description: Request is malformed.  Correct it and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
  /{clientNamespace}/V1/LaborValidationPolicy/Rule:
    post:
      tags:
      - LaborValidationPolicy
      operationId: LaborValidationPolicy_InsertLaborValidationPolicy_By_laborValidationRule_clientNamespace
      parameters:
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LaborValidationRule'
          text/json:
            schema:
              $ref: '#/components/schemas/LaborValidationRule'
          text/html:
            schema:
              $ref: '#/components/schemas/LaborValidationRule'
        required: true
      responses:
        "200":
          description: Post Validation Policy Rule
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadBoolean'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadBoolean'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadBoolean'
        "400":
          description: Request is malformed.  Correct it and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
  /{clientNamespace}/V1/LegacyLaborMetric:
    get:
      tags:
      - LegacyLaborMetric
      summary: Get Legacy Labor Metric data
      operationId: LegacyLaborMetric_GetLegacyLaborMetric_By_legacyLaborMetricType_legacyLaborMetricXRefCode_clientNamespace
      parameters:
      - name: legacyLaborMetricType
        in: query
        description: ""
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: legacyLaborMetricXRefCode
        in: query
        description: ""
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: Legacy labor metric details which matches the Type and XRefCode
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadLegacyLaborMetricCodes'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadLegacyLaborMetricCodes'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadLegacyLaborMetricCodes'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
    post:
      tags:
      - LegacyLaborMetric
      summary: Post Insert Legacy Labor metrics
      operationId: LegacyLaborMetric_Post_By_legacyLaborMetricData_isValidateOnly_clientNamespace
      parameters:
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST operations\
          \ validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST operation. For more information and examples,\
          \ please refer to the Dayforce Web Services RESTful Developer's Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LegacyLaborMetricForSubmit'
          text/json:
            schema:
              $ref: '#/components/schemas/LegacyLaborMetricForSubmit'
          text/html:
            schema:
              $ref: '#/components/schemas/LegacyLaborMetricForSubmit'
        required: true
      responses:
        "200":
          description: New Legacy Labor Metric data is inserted into Dayforce
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LegacyLaborMetricPatchPostDeleteResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/LegacyLaborMetricPatchPostDeleteResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/LegacyLaborMetricPatchPostDeleteResponse'
        "400":
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
    delete:
      tags:
      - LegacyLaborMetric
      operationId: LegacyLaborMetric_DeleteLegacyLaborMetric_By_legacyLaborMetricType_legacyLaborMetricXRefCode_clientNamespace
      parameters:
      - name: legacyLaborMetricType
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: legacyLaborMetricXRefCode
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: Legacy labor metric details which matches the Type and XRefCode
            were Deleted
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
    patch:
      tags:
      - LegacyLaborMetric
      summary: Patch (Update) a Legacy Labor Metric
      operationId: LegacyLaborMetric_Patch_By_legacyLaborMetricData_legacyLaborMetricXRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: legacyLaborMetricXRefCode
        in: query
        description: XRefCode
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, PATCH operations\
          \ validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in PATCH operation. For more information and\
          \ examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LegacyLaborMetricForSubmit'
          text/json:
            schema:
              $ref: '#/components/schemas/LegacyLaborMetricForSubmit'
          text/html:
            schema:
              $ref: '#/components/schemas/LegacyLaborMetricForSubmit'
        required: true
      responses:
        "200":
          description: Legacy Labor Metric data is updated
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed. Correct and resubmit.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "500":
          description: An unexpected server error occurred.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
  /{clientNamespace}/V1/LocationAddresses:
    get:
      tags:
      - LocationAddresses
      summary: GET List of Location Addresses.
      operationId: LocationAddresses_Get_By_ShortName_CountryCode_StateProvinceCode_clientNamespace
      parameters:
      - name: ShortName
        in: query
        description: Filter the location addresses by their ShortName. The service
          defaults to NULL if the requester does not specify a value
        required: false
        style: form
        explode: true
        schema:
          type: string
        x-ballerina-name: shortName
      - name: CountryCode
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
        x-ballerina-name: countryCode
      - name: StateProvinceCode
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
        x-ballerina-name: stateProvinceCode
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: "A collection of Location Addresses meeting the search criteria,\
            \ if provided"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableLocationAddresses'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableLocationAddresses'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableLocationAddresses'
        "400":
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LocationAddresses'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LocationAddresses'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LocationAddresses'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LocationAddresses'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LocationAddresses'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LocationAddresses'
    post:
      tags:
      - LocationAddresses
      summary: POST Location Address.
      operationId: LocationAddresses_Post_By_payrollLocationAddresses_isValidateOnly_clientNamespace
      parameters:
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying the updates to the database.\
          \  The default value is FALSE if parameter is not specified"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST and PATCH operations. For more information\
          \ and examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationAddresses'
          text/json:
            schema:
              $ref: '#/components/schemas/LocationAddresses'
          text/html:
            schema:
              $ref: '#/components/schemas/LocationAddresses'
        required: true
      responses:
        "200":
          description: A Location Address is created with an empty response body
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
    patch:
      tags:
      - LocationAddresses
      summary: PATCH Location Address.
      operationId: LocationAddresses_Patch_By_payrollLocationAddresses_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: query
        description: "The unique identifier (external reference code) of the position.\
          \ The value provided must be the exact match for a position; otherwise,\
          \ a bad request (400) error will be returned"
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying the updates to the database.\
          \  The default value is FALSE if parameter is not specified"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST (position add) and PATCH (position update)\
          \ operations.  For more information and examples, please refer to the Dayforce\
          \ Web Services RESTful Developer's Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationAddresses'
          text/json:
            schema:
              $ref: '#/components/schemas/LocationAddresses'
          text/html:
            schema:
              $ref: '#/components/schemas/LocationAddresses'
        required: true
      responses:
        "200":
          description: "A Location Address is updated, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
  /{clientNamespace}/V1/Employees/{xRefCode}/MaritalStatuses:
    get:
      tags:
      - MaritalStatus
      summary: GET MaritalStatus Details
      operationId: MaritalStatus_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ whose data will be retrieved.  The value provided must be the exact match\
          \ for an employee; otherwise, a bad request (400) error will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: contextDate
        in: query
        description: "The Context Date value is an “as-of” date used to determine\
          \ which employee data to search when records have specific start and end\
          \ dates.  The service defaults to the current datetime if the requester\
          \ does not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: contextDateRangeFrom
        in: query
        description: "The Context Date Range From value is the start of the range\
          \ of dates used to determine which employee data to search when records\
          \ have specific start and end dates.  The service defaults to null if the\
          \ requester does not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: contextDateRangeTo
        in: query
        description: "The Context Date Range To value is the end of the range of dates\
          \ to determine which employee data to search when records have specific\
          \ start and end dates.  The service defaults to null if the requester does\
          \ not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: The Marital Statuses of employee with the requested XRefCode
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeMaritalStatus'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeMaritalStatus'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeMaritalStatus'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
      - MaritalStatus
      summary: POST a MaritalStatus
      operationId: MaritalStatus_Post_By_maritalStatus_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be updated.  The value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST and PATCH operations.  For more information\
          \ and examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeMaritalStatus'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeMaritalStatus'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeMaritalStatus'
        required: true
      responses:
        "200":
          description: "A MaritalStatus is created, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
      - MaritalStatus
      summary: PATCH a MaritalStatus
      operationId: MaritalStatus_Patch_By_maritalStatus_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be updated.  The value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST and PATCH operations.  For more information\
          \ and examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeMaritalStatus'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeMaritalStatus'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeMaritalStatus'
        required: true
      responses:
        "200":
          description: "The MaritalStatus is updated, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/OperatingHours/GetOperatingHours:
    get:
      tags:
      - OperatingHours
      operationId: OperatingHours_Get_By_startDate_endDate_orgUnitXRefCode_clientNamespace
      parameters:
      - name: startDate
        in: query
        description: Date to represent the start of the period for which operating
          hours should be retrieved. Format yyyy-mm-dd
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: endDate
        in: query
        description: Date to represent the end of the period for which operating hours
          should be retrieved. Format yyyy-mm-dd
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: orgUnitXRefCode
        in: query
        description: The unique identifier (external reference code) of the organization
          to be retrieved. The value provided must be the exact match for an organization
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: Operating Hours details which matches the supplied OrgUnitXRefCode
            and date range
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadOperatingHours'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadOperatingHours'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadOperatingHours'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadOperatingHours'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadOperatingHours'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadOperatingHours'
  /{clientNamespace}/V1/OperatingHours/PostOperatingHoursException:
    post:
      tags:
      - OperatingHours
      operationId: OperatingHours_PostOperatingHoursException_By_OperatingHoursExceptionAPIPostPayload_isValidateOnly_clientNamespace
      parameters:
      - name: isValidateOnly
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/OperatingHoursExceptionPOST'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/OperatingHoursExceptionPOST'
          text/html:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/OperatingHoursExceptionPOST'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            text/html:
              schema:
                type: object
        "201":
          description: The Operating Hours Exception have been created
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "409":
          description: The Operating Hours Exception have not been created as conflicting
            Operating Hours already exist
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "500":
          description: An unexpected server error occurred.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
  /{clientNamespace}/V1/OperatingHours/PatchOperatingHoursException:
    patch:
      tags:
      - OperatingHours
      operationId: OperatingHours_PatchOperatingHoursException_By_OperatingHoursExceptionAPIPostPayload_isValidateOnly_clientNamespace
      parameters:
      - name: isValidateOnly
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/OperatingHoursExceptionPOST'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/OperatingHoursExceptionPOST'
          text/html:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/OperatingHoursExceptionPOST'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            text/html:
              schema:
                type: object
        "201":
          description: The Operating Hours Exception have been created
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "409":
          description: The Operating Hours have not been created as conflicting Operating
            Hours Exception does not exist
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "500":
          description: An unexpected server error occurred.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
  /{clientNamespace}/V1/OrgUnits:
    get:
      tags:
      - OrgUnits
      summary: Get a list of OrgUnits
      operationId: OrgUnits_Get_By_clientNamespace
      parameters:
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: A collection of OrgUnit XRefCodes meeting the search criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableLocation'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableLocation'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableLocation'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
      - OrgUnits
      summary: POST (Add) an OrgUnit
      operationId: OrgUnits_Post_By_orgUnit_isValidateOnly_calibrateOrg_clientNamespace
      parameters:
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying the updates to the database.\
          \  The default value is FALSE if parameter is not specified"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: calibrateOrg
        in: query
        description: This parameter accepts TRUE or FALSE values to determine whether
          the Org Recalculation process is to be triggered. The default value is TRUE
          if parameter is not specified
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST (orgunit add) and PATCH (orgunit update)\
          \ operations.  For more information and examples, please refer to the Dayforce\
          \ Web Services RESTful Developer's Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Location'
          text/json:
            schema:
              $ref: '#/components/schemas/Location'
          text/html:
            schema:
              $ref: '#/components/schemas/Location'
        required: true
      responses:
        "200":
          description: "An Org Unit is created, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
  /{clientNamespace}/V1/OrgUnits/{xrefCode}:
    get:
      tags:
      - OrgUnits
      summary: Get OrgUnit details
      operationId: OrgUnits_Get_By_XrefCode_contextDate_expand_includeChildOrgUnits_clientNamespace
      parameters:
      - name: xrefCode
        in: path
        description: "The unique identifier (external reference code) of the org unit.\
          \ The value provided must be the exact match for an org unit; otherwise,\
          \ a bad request (400) error will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: contextDate
        in: query
        description: "The Context Date value is an “as-of” date used to determine\
          \ which org unit data to search when records have specific start and end\
          \ dates.  The service defaults to the current datetime if the requester\
          \ does not specify a value.  Example: 2019-01-01T12:34:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: expand
        in: query
        description: "This parameter accepts a comma-separated list of top-level entities\
          \ that contain the data elements needed for downstream processing.  When\
          \ this parameter is not used, only data elements from the orgunit master\
          \ record will be included.  For more information, please refer to the Introduction\
          \ to Dayforce Web Services document"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: includeChildOrgUnits
        in: query
        description: "When a TRUE value is used in this parameter, the immediate child\
          \ org units’ information under the org unit being retrieved will be returned\
          \ as well.  The default value is FALSE if parameter is not specified"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: The Org Unit with the requested XRefCode
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadLocation'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadLocation'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadLocation'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/OrgUnits/{xRefCode}:
    patch:
      tags:
      - OrgUnits
      summary: PATCH (Update) an OrgUnit
      operationId: OrgUnits_Patch_By_orgUnit_xRefCode_isValidateOnly_replaceExisting_calibrateOrg_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the org unit.\
          \ The value provided must be the exact match for an org unit; otherwise,\
          \ a bad request (400) error will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying the updates to the database.\
          \  The default value is FALSE if parameter is not specified"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: replaceExisting
        in: query
        description: "This parameter accepts a comma-separated list of OrgUnit sub-entities\
          \ where the respective data provided will replace all existing records.\
          \ This currently applies to OrgUnitLocationTypes sub-entities, which are\
          \ considered as a list and are not effective dated"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: calibrateOrg
        in: query
        description: This parameter accepts TRUE or FALSE values to determine whether
          the Org Recalculation process is to be triggered. The default value is TRUE
          if parameter is not specified
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST (orgunit add) and PATCH (orgunit update)\
          \ operations.  For more information and examples, please refer to the Dayforce\
          \ Web Services RESTful Developer's Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Location'
          text/json:
            schema:
              $ref: '#/components/schemas/Location'
          text/html:
            schema:
              $ref: '#/components/schemas/Location'
        required: true
      responses:
        "200":
          description: "An Org Unit is updated, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
  /{clientNamespace}/V1/PayClasses:
    get:
      tags:
      - PayClasses
      summary: GET a List of PayClasses
      operationId: PayClasses_Get_By_contextDate_clientNamespace
      parameters:
      - name: contextDate
        in: query
        description: "The Context Date value is an “as-of” date used to determine\
          \ which PayClass data to search when records have specific start and end\
          \ dates.  The service defaults to the current datetime if the requester\
          \ does not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: A collection of PayClass XRefCodes meeting the search criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerablePayClass'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerablePayClass'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerablePayClass'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/PayClasses/{xrefCode}:
    get:
      tags:
      - PayClasses
      summary: Get PayClass details
      operationId: PayClasses_Get_By_XrefCode_clientNamespace
      parameters:
      - name: xrefCode
        in: path
        description: "The unique identifier (external reference code) of the PayClass\
          \ to be retrieved.  The value provided must be the exact match for a PayClass;\
          \ otherwise, a bad request (400) error will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: The PayClass with the requested XRefCode
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadPayClass'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadPayClass'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadPayClass'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Payee:
    get:
      tags:
      - Payee
      summary: GET List of Third Party Payees.
      operationId: Payee_Get_By_PayeeStatus_PayeeXRefCodes_PayeeCategoryXRefCodes_PaymentMethodXRefCodes_OperatingCountries_EarningPayee_DeductionPayee_SystemPayee_clientNamespace
      parameters:
      - name: PayeeStatus
        in: query
        description: "&gt;Can be Active, InActive or All. The default value is Active"
        required: false
        style: form
        explode: true
        schema:
          type: string
        x-ballerina-name: payeeStatus
      - name: PayeeXRefCodes
        in: query
        description: '&gt;List of Payee Reference Codes with comma separator to filter
          the result'
        required: false
        style: form
        explode: true
        schema:
          type: string
        x-ballerina-name: payeeXRefCodes
      - name: PayeeCategoryXRefCodes
        in: query
        description: '&gt;List of Payee Category Reference Codes with comma separator
          to filter the result'
        required: false
        style: form
        explode: true
        schema:
          type: string
        x-ballerina-name: payeeCategoryXRefCodes
      - name: PaymentMethodXRefCodes
        in: query
        description: '&gt;List of Pay Method Reference Codes with comma separator
          to filter the result'
        required: false
        style: form
        explode: true
        schema:
          type: string
        x-ballerina-name: paymentMethodXRefCodes
      - name: OperatingCountries
        in: query
        description: '&gt;List of country codes with comma separator to filter the
          result base on country'
        required: false
        style: form
        explode: true
        schema:
          type: string
        x-ballerina-name: operatingCountries
      - name: EarningPayee
        in: query
        description: '&gt;Set to true to only get Earning Payees'
        required: false
        style: form
        explode: true
        schema:
          type: boolean
        x-ballerina-name: earningPayee
      - name: DeductionPayee
        in: query
        description: '&gt;Set to true to only get Deduction Payees'
        required: false
        style: form
        explode: true
        schema:
          type: boolean
        x-ballerina-name: deductionPayee
      - name: SystemPayee
        in: query
        description: '&gt;Set to true to only get System Payees'
        required: false
        style: form
        explode: true
        schema:
          type: boolean
        x-ballerina-name: systemPayee
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: List of payees
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerablePayee'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerablePayee'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerablePayee'
        "400":
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
      - Payee
      summary: POST Add Third Party Payees
      operationId: Payee_Post_By_payees_isValidateOnly_clientNamespace
      parameters:
      - name: isValidateOnly
        in: query
        description: "If true, only validate the request. Otherwise, validate and\
          \ save"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Payee'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Payee'
          text/html:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Payee'
        required: true
      responses:
        "200":
          description: OK response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadListPayee'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadListPayee'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadListPayee'
        "400":
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
      - Payee
      summary: PATCH Update Third Party Payees
      operationId: Payee_Patch_By_payees_isValidateOnly_clientNamespace
      parameters:
      - name: isValidateOnly
        in: query
        description: "If true, only validate the request. Otherwise, validate and\
          \ save"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Payee'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Payee'
          text/html:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Payee'
        required: true
      responses:
        "200":
          description: OK response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadListPayee'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadListPayee'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadListPayee'
        "400":
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/PayGroupCalendar/{payGroupXRefCode}:
    get:
      tags:
      - PayGroupCalendar
      summary: GET List of Pay Group Calendars.
      operationId: PayGroupCalendar_Get_By_payGroupXRefCode_payrollCommitted_payDateYear_payDate_periodStartDate_periodEndDate_payPeriod_clientNamespace
      parameters:
      - name: payGroupXRefCode
        in: path
        description: The pay group's reference code
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: payrollCommitted
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: payDateYear
        in: query
        description: The pay group calen xdar's pay date year
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: payDate
        in: query
        description: The pay group calendar's pay date
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: periodStartDate
        in: query
        description: The pay group calendar's period start date
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: periodEndDate
        in: query
        description: The pay group calendar's period end date
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: payPeriod
        in: query
        description: The pay group calendar's pay period number
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: The Pay Group Calendar
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadPayGroupCalendar'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadPayGroupCalendar'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadPayGroupCalendar'
        "400":
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Payroll/PayrollElection:
    get:
      tags:
      - PayrollElections
      summary: GET List of Employee Elections.
      operationId: PayrollElections_GetEmployeeElections_By_source_codeType_electionStatus_payGroupXRefCode_employeeXRefCodes_employmentStatusXRefCode_pageSize_clientNamespace
      parameters:
      - name: source
        in: query
        description: ""
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: codeType
        in: query
        description: ""
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: electionStatus
        in: query
        description: ""
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: payGroupXRefCode
        in: query
        description: ""
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: employeeXRefCodes
        in: query
        description: ""
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: employmentStatusXRefCode
        in: query
        description: ""
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: ""
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: The Employee Payroll Election
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayloadIEnumerableEmployeePayrollElection'
            text/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayloadIEnumerableEmployeePayrollElection'
            text/html:
              schema:
                $ref: '#/components/schemas/PaginatedPayloadIEnumerableEmployeePayrollElection'
        "400":
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/v1/Payroll/PayrollElections:
    post:
      tags:
      - PayrollElections
      summary: POST Employee Elections
      operationId: PayrollElections_Post_By_payrollElections_isValidateOnly_AutoUpdateExisting_clientNamespace
      parameters:
      - name: isValidateOnly
        in: query
        description: "If TRUE, POST operations validate the request without queue\
          \ the import. The default value is FALSE. Note, POST operation will only\
          \ validate data structure"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: AutoUpdateExisting
        in: query
        description: "If TRUE, all other elections of the same employee will be end-dated.\
          \ The default value is FALSE"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
        x-ballerina-name: autoUpdateExisting
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST operation. For more information and examples,\
          \ please refer to the Dayforce Web Services RESTful Developer's Guide"
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/EmployeePayrollElection'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/EmployeePayrollElection'
          text/html:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/EmployeePayrollElection'
        required: true
      responses:
        "200":
          description: OK response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeePayrollElection'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeePayrollElection'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeePayrollElection'
        "400":
          description: Request is malformed or has validation errors.  Correct and
            resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
    patch:
      tags:
      - PayrollElections
      summary: PATCH Employee Elections
      operationId: PayrollElections_Patch_By_payrollElections_isValidateOnly_AutoUpdateExisting_clientNamespace
      parameters:
      - name: isValidateOnly
        in: query
        description: "If TRUE, POST operations validate the request without queue\
          \ the import. The default value is FALSE. Note, POST operation will only\
          \ validate data structure"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: AutoUpdateExisting
        in: query
        description: "If TRUE, all other elections of the same employee will be end-dated.\
          \ The default value is FALSE"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
        x-ballerina-name: autoUpdateExisting
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in PATCH operation. For more information and\
          \ examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/EmployeePayrollElection'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/EmployeePayrollElection'
          text/html:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/EmployeePayrollElection'
        required: true
      responses:
        "200":
          description: OK response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeePayrollElection'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeePayrollElection'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeePayrollElection'
        "400":
          description: Request is malformed or has validation errors.  Correct and
            resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
  /{clientNamespace}/v1/Payroll/DeletePayrollElections:
    patch:
      tags:
      - PayrollElections
      summary: PATCH Employee Elections
      operationId: PayrollElections_DeleteElections_By_payrollElections_isValidateOnly_clientNamespace
      parameters:
      - name: isValidateOnly
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in PATCH operation. For more information and\
          \ examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/EmployeePayrollElectionDeletionModel'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/EmployeePayrollElectionDeletionModel'
          text/html:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/EmployeePayrollElectionDeletionModel'
        required: true
      responses:
        "200":
          description: OK response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeePayrollElectionDeletionModel'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeePayrollElectionDeletionModel'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeePayrollElectionDeletionModel'
        "400":
          description: Request is malformed or has validation errors.  Correct and
            resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
  /{clientNamespace}/V1/PayrollGL/Import:
    post:
      tags:
      - PayrollGL
      summary: POST Import GL Result
      operationId: PayrollGL_Post_By_importData_isValidateOnly_clientNamespace
      parameters:
      - name: isValidateOnly
        in: query
        description: "If TRUE, POST operations validate the request without queue\
          \ the import. The default value is FALSE. Note, POST operation will only\
          \ validate data structure"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST operation. For more information and examples,\
          \ please refer to the Dayforce Web Services RESTful Developer's Guide"
        content:
          application/json:
            schema:
              type: object
              example:
                ImportSetName: GL Import 20210422
                PayrollGeneralLedgerImport:
                  Setting:
                    Mode: INSERT
                  PayRun:
                    PayGroupXrefCode: QAUSAW
                    PayDate: 2021-09-03T00:00:00.0000000-04:00
                    PeriodStartDate: 2021-09-03T00:00:00.0000000-04:00
                    PayPeriod: 35
                    PayCalendarLedgerCode1: PayCalendarLedgerCode11
                    PayCalendarLedgerCode2: PayCalendarLedgerCode12
                    PayGroupName: PayGroupName1
                    PayrollGeneralLedgerOrgUnitHierarchy:
                    - OrgUnitXrefCode: DeptOrg1
                      OrgUnitLevelXrefCode: OrgUnitLevelXrefCode1
                      OrgUnitName: OrgUnitName1
                      OrgUnitLedgerCode: OrgUnitLedgerCode1
                    PayrollGeneralLedgerLaborMetrics:
                    - CodeXrefCode: CodeXrefCode1
                      CodeName: CodeName1
                      LedgerCode: LedgerCode1
                    Employees:
                    - EmployeeXrefCode: qacbw101
                      EmployeeNumber: luffy123
                      PayClassXrefCode: PayClassXrefCode3
                      PayClassLedgerCode: PayClassLedgerCode3
                      PayTypeXrefCode: PayTypeXrefCode3
                      PayTypeLedgerCode: PayTypeLedgerCode3
                      Checks:
                      - LegalEntityXrefCode: LegalEntityXrefCode9
                        LegalEntityFundingIdentifier: LegalEntityFundingIdentifier9
                        LegalEntityName: LegalEntityName9
                        CheckNumber: CheckNumber9
                        HomeOrgUnitXrefCode: HomeOrgUnitXrefCode9
                        HomeOrgUnitName: HomeOrgUnitName9
                        HomeOrgUnitLedgerCode: HomeOrgUnitLedgerCode9
                        HomeJobAssignmentXrefCode: HomeJobAssignmentXrefCode9
                        HomeJobAssignmentName: HomeJobAssignmentName9
                        HomeJobAssignmentLedgerCode: HomeJobAssignmentLedgerCode9
                        HomeDepartmentXrefCode: HomeDeprtmentXrefCode9
                        HomeDepartmentName: HomeDeprtmentName9
                        HomeDepartmentLedgerCode: HomeDepartmentLedgerCode9
                        HomeJobXrefCode: HomeJobXrefCode9
                        HomeJobName: HomeJobName9
                        HomeJobLedgerCode: HomeJobLedgerCode9
                        PayrollGeneralLedgerOrgUnitHierarchy:
                        - HomeOrgUnitXrefCode: HomeOrgUnitXrefCode27
                          HomeOrgUnitLevelXrefCode: HomeOrgUnitLevelXrefCode27
                          HomeOrgUnitName: HomeOrgUnitName27
                          HomeOrgUnitLedgerCode: HomeOrgUnitLedgerCode27
                        CheckElements:
                        - ChargedOrgUnitXrefCode: ChargedOrgUnitXrefCode27
                          ChargedOrgUnitName: ChargedOrgUnitName27
                          ChargedOrgUnitLedgerCode: ChargedOrgUnitLedgerCode27
                          ChargedOrgIsPrimary: true
                          ChargedJobAssignmentXrefCode: ChargedJobAssignmentXrefCode27
                          ChargedJobAssignmentName: ChargedJobAssignmentName27
                          ChargedJobAssignmentLedgerCode: ChargedJobAssignmentLedgerCode27
                          ChargedDepartmentXrefCode: ChargedDepartmentXrefCode27
                          ChargedDepartmentName: ChargedDepartmentName27
                          ChargedDepartmentLedgerCode: ChargedDepartmentLedgerCode27
                          ChargedDepartmentIsPrimary: true
                          ChargedJobXrefCode: ChargedJobXrefCode27
                          ChargedJobName: ChargedJobName27
                          ChargedJobLedgerCode: ChargedJobLedgerCode27
                          ChargedJobIsPrimary: true
                          LegalEntityXrefCode: LegalEntityXrefCode27
                          LegalEntityName: LegalEntityName27
                          PayrollTaxLedgerCode: PayrollTaxLedgerCode27
                          EmployeeWorkAssignmentLedgerCode: EmployeeWorkAssignmentLedgerCode27
                          LaborAllocationPercentage: 94
                          CategoryName: CategoryName27
                          CategoryJournalNumber: CategoryJournalNumber27
                          Amount: 94
                          Hours: 9
                          TransactionType: Credit
                          RecordFlag: AC
                          EarningXrefCode: EarningXrefCode27
                          EarningIsPremium: true
                          DeductionXrefCode: DeductionXrefCode27
                          TaxXrefCode: TaxXrefCode27
                          CheckTemplateXrefCode: CheckTemplateXrefCode27
                          DisbursementType: On-Demand
                          PayeeAccountType: PayeeAccountType27
                          ProjectXrefCode: ProjectXrefCode27
                          ProjectName: CheckElementExample27
                          ProjectLedgerCode: CheckElementExample27
                          DocketXrefCode: DocketXrefCode27
                          DocketName: DocketName27
                          DocketLedgerCode: DocketLedgerCode27
                          BalanceXrefCode: BalanceXrefCode27
                          BalanceTransactionDate: 9999-06-22T00:00:00.0000000-04:00
                          Constant1: Constant127
                          Constant2: Constant227
                          Constant3: Constant327
                          Constant4: Constant427
                          Constant5: Constant527
                          PayrollGeneralLedgerLaborMetrics:
                          - CodeXrefCode: CodeXrefCode81
                            CodeName: CodeName81
                            LedgerCode: LedgerCode81
                            IsDefault: true
                          PayrollGeneralLedgerOrgUnitHierarchy:
                          - ChargedOrgUnitXrefCode: ChargedOrgUnitXrefCode81
                            ChargedOrgUnitLevelXrefCode: ChargedOrgUnitLevelXrefCode81
                            ChargedOrgUnitName: ChargedOrgUnitName81
                            ChargedOrgUnitLedgerCode: ChargedOrgUnitLedgerCode
          text/json:
            schema:
              type: object
              example:
                ImportSetName: GL Import 20210422
                PayrollGeneralLedgerImport:
                  Setting:
                    Mode: INSERT
                  PayRun:
                    PayGroupXrefCode: QAUSAW
                    PayDate: 2021-09-03T00:00:00.0000000-04:00
                    PeriodStartDate: 2021-09-03T00:00:00.0000000-04:00
                    PayPeriod: 35
                    PayCalendarLedgerCode1: PayCalendarLedgerCode11
                    PayCalendarLedgerCode2: PayCalendarLedgerCode12
                    PayGroupName: PayGroupName1
                    PayrollGeneralLedgerOrgUnitHierarchy:
                    - OrgUnitXrefCode: DeptOrg1
                      OrgUnitLevelXrefCode: OrgUnitLevelXrefCode1
                      OrgUnitName: OrgUnitName1
                      OrgUnitLedgerCode: OrgUnitLedgerCode1
                    PayrollGeneralLedgerLaborMetrics:
                    - CodeXrefCode: CodeXrefCode1
                      CodeName: CodeName1
                      LedgerCode: LedgerCode1
                    Employees:
                    - EmployeeXrefCode: qacbw101
                      EmployeeNumber: luffy123
                      PayClassXrefCode: PayClassXrefCode3
                      PayClassLedgerCode: PayClassLedgerCode3
                      PayTypeXrefCode: PayTypeXrefCode3
                      PayTypeLedgerCode: PayTypeLedgerCode3
                      Checks:
                      - LegalEntityXrefCode: LegalEntityXrefCode9
                        LegalEntityFundingIdentifier: LegalEntityFundingIdentifier9
                        LegalEntityName: LegalEntityName9
                        CheckNumber: CheckNumber9
                        HomeOrgUnitXrefCode: HomeOrgUnitXrefCode9
                        HomeOrgUnitName: HomeOrgUnitName9
                        HomeOrgUnitLedgerCode: HomeOrgUnitLedgerCode9
                        HomeJobAssignmentXrefCode: HomeJobAssignmentXrefCode9
                        HomeJobAssignmentName: HomeJobAssignmentName9
                        HomeJobAssignmentLedgerCode: HomeJobAssignmentLedgerCode9
                        HomeDepartmentXrefCode: HomeDeprtmentXrefCode9
                        HomeDepartmentName: HomeDeprtmentName9
                        HomeDepartmentLedgerCode: HomeDepartmentLedgerCode9
                        HomeJobXrefCode: HomeJobXrefCode9
                        HomeJobName: HomeJobName9
                        HomeJobLedgerCode: HomeJobLedgerCode9
                        PayrollGeneralLedgerOrgUnitHierarchy:
                        - HomeOrgUnitXrefCode: HomeOrgUnitXrefCode27
                          HomeOrgUnitLevelXrefCode: HomeOrgUnitLevelXrefCode27
                          HomeOrgUnitName: HomeOrgUnitName27
                          HomeOrgUnitLedgerCode: HomeOrgUnitLedgerCode27
                        CheckElements:
                        - ChargedOrgUnitXrefCode: ChargedOrgUnitXrefCode27
                          ChargedOrgUnitName: ChargedOrgUnitName27
                          ChargedOrgUnitLedgerCode: ChargedOrgUnitLedgerCode27
                          ChargedOrgIsPrimary: true
                          ChargedJobAssignmentXrefCode: ChargedJobAssignmentXrefCode27
                          ChargedJobAssignmentName: ChargedJobAssignmentName27
                          ChargedJobAssignmentLedgerCode: ChargedJobAssignmentLedgerCode27
                          ChargedDepartmentXrefCode: ChargedDepartmentXrefCode27
                          ChargedDepartmentName: ChargedDepartmentName27
                          ChargedDepartmentLedgerCode: ChargedDepartmentLedgerCode27
                          ChargedDepartmentIsPrimary: true
                          ChargedJobXrefCode: ChargedJobXrefCode27
                          ChargedJobName: ChargedJobName27
                          ChargedJobLedgerCode: ChargedJobLedgerCode27
                          ChargedJobIsPrimary: true
                          LegalEntityXrefCode: LegalEntityXrefCode27
                          LegalEntityName: LegalEntityName27
                          PayrollTaxLedgerCode: PayrollTaxLedgerCode27
                          EmployeeWorkAssignmentLedgerCode: EmployeeWorkAssignmentLedgerCode27
                          LaborAllocationPercentage: 94
                          CategoryName: CategoryName27
                          CategoryJournalNumber: CategoryJournalNumber27
                          Amount: 94
                          Hours: 9
                          TransactionType: Credit
                          RecordFlag: AC
                          EarningXrefCode: EarningXrefCode27
                          EarningIsPremium: true
                          DeductionXrefCode: DeductionXrefCode27
                          TaxXrefCode: TaxXrefCode27
                          CheckTemplateXrefCode: CheckTemplateXrefCode27
                          DisbursementType: On-Demand
                          PayeeAccountType: PayeeAccountType27
                          ProjectXrefCode: ProjectXrefCode27
                          ProjectName: CheckElementExample27
                          ProjectLedgerCode: CheckElementExample27
                          DocketXrefCode: DocketXrefCode27
                          DocketName: DocketName27
                          DocketLedgerCode: DocketLedgerCode27
                          BalanceXrefCode: BalanceXrefCode27
                          BalanceTransactionDate: 9999-06-22T00:00:00.0000000-04:00
                          Constant1: Constant127
                          Constant2: Constant227
                          Constant3: Constant327
                          Constant4: Constant427
                          Constant5: Constant527
                          PayrollGeneralLedgerLaborMetrics:
                          - CodeXrefCode: CodeXrefCode81
                            CodeName: CodeName81
                            LedgerCode: LedgerCode81
                            IsDefault: true
                          PayrollGeneralLedgerOrgUnitHierarchy:
                          - ChargedOrgUnitXrefCode: ChargedOrgUnitXrefCode81
                            ChargedOrgUnitLevelXrefCode: ChargedOrgUnitLevelXrefCode81
                            ChargedOrgUnitName: ChargedOrgUnitName81
                            ChargedOrgUnitLedgerCode: ChargedOrgUnitLedgerCode
          text/html:
            schema:
              type: object
              example:
                ImportSetName: GL Import 20210422
                PayrollGeneralLedgerImport:
                  Setting:
                    Mode: INSERT
                  PayRun:
                    PayGroupXrefCode: QAUSAW
                    PayDate: 2021-09-03T00:00:00.0000000-04:00
                    PeriodStartDate: 2021-09-03T00:00:00.0000000-04:00
                    PayPeriod: 35
                    PayCalendarLedgerCode1: PayCalendarLedgerCode11
                    PayCalendarLedgerCode2: PayCalendarLedgerCode12
                    PayGroupName: PayGroupName1
                    PayrollGeneralLedgerOrgUnitHierarchy:
                    - OrgUnitXrefCode: DeptOrg1
                      OrgUnitLevelXrefCode: OrgUnitLevelXrefCode1
                      OrgUnitName: OrgUnitName1
                      OrgUnitLedgerCode: OrgUnitLedgerCode1
                    PayrollGeneralLedgerLaborMetrics:
                    - CodeXrefCode: CodeXrefCode1
                      CodeName: CodeName1
                      LedgerCode: LedgerCode1
                    Employees:
                    - EmployeeXrefCode: qacbw101
                      EmployeeNumber: luffy123
                      PayClassXrefCode: PayClassXrefCode3
                      PayClassLedgerCode: PayClassLedgerCode3
                      PayTypeXrefCode: PayTypeXrefCode3
                      PayTypeLedgerCode: PayTypeLedgerCode3
                      Checks:
                      - LegalEntityXrefCode: LegalEntityXrefCode9
                        LegalEntityFundingIdentifier: LegalEntityFundingIdentifier9
                        LegalEntityName: LegalEntityName9
                        CheckNumber: CheckNumber9
                        HomeOrgUnitXrefCode: HomeOrgUnitXrefCode9
                        HomeOrgUnitName: HomeOrgUnitName9
                        HomeOrgUnitLedgerCode: HomeOrgUnitLedgerCode9
                        HomeJobAssignmentXrefCode: HomeJobAssignmentXrefCode9
                        HomeJobAssignmentName: HomeJobAssignmentName9
                        HomeJobAssignmentLedgerCode: HomeJobAssignmentLedgerCode9
                        HomeDepartmentXrefCode: HomeDeprtmentXrefCode9
                        HomeDepartmentName: HomeDeprtmentName9
                        HomeDepartmentLedgerCode: HomeDepartmentLedgerCode9
                        HomeJobXrefCode: HomeJobXrefCode9
                        HomeJobName: HomeJobName9
                        HomeJobLedgerCode: HomeJobLedgerCode9
                        PayrollGeneralLedgerOrgUnitHierarchy:
                        - HomeOrgUnitXrefCode: HomeOrgUnitXrefCode27
                          HomeOrgUnitLevelXrefCode: HomeOrgUnitLevelXrefCode27
                          HomeOrgUnitName: HomeOrgUnitName27
                          HomeOrgUnitLedgerCode: HomeOrgUnitLedgerCode27
                        CheckElements:
                        - ChargedOrgUnitXrefCode: ChargedOrgUnitXrefCode27
                          ChargedOrgUnitName: ChargedOrgUnitName27
                          ChargedOrgUnitLedgerCode: ChargedOrgUnitLedgerCode27
                          ChargedOrgIsPrimary: true
                          ChargedJobAssignmentXrefCode: ChargedJobAssignmentXrefCode27
                          ChargedJobAssignmentName: ChargedJobAssignmentName27
                          ChargedJobAssignmentLedgerCode: ChargedJobAssignmentLedgerCode27
                          ChargedDepartmentXrefCode: ChargedDepartmentXrefCode27
                          ChargedDepartmentName: ChargedDepartmentName27
                          ChargedDepartmentLedgerCode: ChargedDepartmentLedgerCode27
                          ChargedDepartmentIsPrimary: true
                          ChargedJobXrefCode: ChargedJobXrefCode27
                          ChargedJobName: ChargedJobName27
                          ChargedJobLedgerCode: ChargedJobLedgerCode27
                          ChargedJobIsPrimary: true
                          LegalEntityXrefCode: LegalEntityXrefCode27
                          LegalEntityName: LegalEntityName27
                          PayrollTaxLedgerCode: PayrollTaxLedgerCode27
                          EmployeeWorkAssignmentLedgerCode: EmployeeWorkAssignmentLedgerCode27
                          LaborAllocationPercentage: 94
                          CategoryName: CategoryName27
                          CategoryJournalNumber: CategoryJournalNumber27
                          Amount: 94
                          Hours: 9
                          TransactionType: Credit
                          RecordFlag: AC
                          EarningXrefCode: EarningXrefCode27
                          EarningIsPremium: true
                          DeductionXrefCode: DeductionXrefCode27
                          TaxXrefCode: TaxXrefCode27
                          CheckTemplateXrefCode: CheckTemplateXrefCode27
                          DisbursementType: On-Demand
                          PayeeAccountType: PayeeAccountType27
                          ProjectXrefCode: ProjectXrefCode27
                          ProjectName: CheckElementExample27
                          ProjectLedgerCode: CheckElementExample27
                          DocketXrefCode: DocketXrefCode27
                          DocketName: DocketName27
                          DocketLedgerCode: DocketLedgerCode27
                          BalanceXrefCode: BalanceXrefCode27
                          BalanceTransactionDate: 9999-06-22T00:00:00.0000000-04:00
                          Constant1: Constant127
                          Constant2: Constant227
                          Constant3: Constant327
                          Constant4: Constant427
                          Constant5: Constant527
                          PayrollGeneralLedgerLaborMetrics:
                          - CodeXrefCode: CodeXrefCode81
                            CodeName: CodeName81
                            LedgerCode: LedgerCode81
                            IsDefault: true
                          PayrollGeneralLedgerOrgUnitHierarchy:
                          - ChargedOrgUnitXrefCode: ChargedOrgUnitXrefCode81
                            ChargedOrgUnitLevelXrefCode: ChargedOrgUnitLevelXrefCode81
                            ChargedOrgUnitName: ChargedOrgUnitName81
                            ChargedOrgUnitLedgerCode: ChargedOrgUnitLedgerCode
        required: true
      responses:
        "200":
          description: "GLResult Import was created successfully, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Payroll/Import/TimeData:
    post:
      tags:
      - PayrollPayEntry
      summary: POST Import Time Data
      operationId: PayrollPayEntry_TimeDataPost_By_importData_isValidateOnly_clientNamespace
      parameters:
      - name: isValidateOnly
        in: query
        description: "If TRUE, POST operations validate the request without queue\
          \ the import. The default value is FALSE. Note, POST operation will only\
          \ validate data structure"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST operation. For more information and examples,\
          \ please refer to the Dayforce Web Services RESTful Developer's Guide"
        content:
          application/json:
            schema:
              type: object
              example:
                ImportSetName: TimeData Import
                ErrorOnAction: 1
                DeleteImportedData: false
                PayGroupXrefCode: QAUSABWCopy
                SourceSystem: SourceSystem
                ImportIdentifier: ImportIdentifier
                PayDate: 2021-12-10T00:00:00.0000000-05:00
                OffCyclePayRunXrefCode: QAUSABW2501
                PeriodStart: 2021-11-05T00:00:00.0000000-04:00
                PeriodEnd: 2021-11-19T00:00:00.0000000-05:00
                PPN: 25-01
                AutoDetectPayGroup: false
                DataEntries:
                - EmployeeName: null
                  EmployeeXRefCode: qaubw201
                  Replace: true
                  CodeXRefCode: RegularEarning
                  Hours: 10
                  Rate: 25
                  RateCode: J
                  Amount: 250
                  Message: Comment One
                  WorkLocationXRefCode: Delaware Dept
                  JobAssignmentXRefCode: QA Tester Position Dept2 Ref Code
                  LegalEntityXrefCode: USALId2
                  CheckTemplateXRefCode: Check
                  ApplyROEMapping: true
                  FLSAAdjustStartDate: 2021-12-10T00:00:00.0000000-05:00
                  FLSAAdjustEndDate: 2021-12-10T00:00:00.0000000-05:00
                  ProjectXRefCode: Alabama
                  TrailingTaxationPeriodStart: 2021-12-10T00:00:00.0000000-05:00
                  TrailingTaxationPeriodEnd: 2021-11-16T00:00:00.0000000-05:00
                  DebitArrears: true
                  PayPeriodsForTax: 10
                  DocketXRefCode: ZUT
                  BusinessDate: 2021-12-10T00:00:00.0000000-05:00
                  LaborMetrics:
                  - LaborMetricsTypeXRefCode: Activity Ref
                    LaborMetricsCodeXRefCode: ActivityLaborMetric
          text/json:
            schema:
              type: object
              example:
                ImportSetName: TimeData Import
                ErrorOnAction: 1
                DeleteImportedData: false
                PayGroupXrefCode: QAUSABWCopy
                SourceSystem: SourceSystem
                ImportIdentifier: ImportIdentifier
                PayDate: 2021-12-10T00:00:00.0000000-05:00
                OffCyclePayRunXrefCode: QAUSABW2501
                PeriodStart: 2021-11-05T00:00:00.0000000-04:00
                PeriodEnd: 2021-11-19T00:00:00.0000000-05:00
                PPN: 25-01
                AutoDetectPayGroup: false
                DataEntries:
                - EmployeeName: null
                  EmployeeXRefCode: qaubw201
                  Replace: true
                  CodeXRefCode: RegularEarning
                  Hours: 10
                  Rate: 25
                  RateCode: J
                  Amount: 250
                  Message: Comment One
                  WorkLocationXRefCode: Delaware Dept
                  JobAssignmentXRefCode: QA Tester Position Dept2 Ref Code
                  LegalEntityXrefCode: USALId2
                  CheckTemplateXRefCode: Check
                  ApplyROEMapping: true
                  FLSAAdjustStartDate: 2021-12-10T00:00:00.0000000-05:00
                  FLSAAdjustEndDate: 2021-12-10T00:00:00.0000000-05:00
                  ProjectXRefCode: Alabama
                  TrailingTaxationPeriodStart: 2021-12-10T00:00:00.0000000-05:00
                  TrailingTaxationPeriodEnd: 2021-11-16T00:00:00.0000000-05:00
                  DebitArrears: true
                  PayPeriodsForTax: 10
                  DocketXRefCode: ZUT
                  BusinessDate: 2021-12-10T00:00:00.0000000-05:00
                  LaborMetrics:
                  - LaborMetricsTypeXRefCode: Activity Ref
                    LaborMetricsCodeXRefCode: ActivityLaborMetric
          text/html:
            schema:
              type: object
              example:
                ImportSetName: TimeData Import
                ErrorOnAction: 1
                DeleteImportedData: false
                PayGroupXrefCode: QAUSABWCopy
                SourceSystem: SourceSystem
                ImportIdentifier: ImportIdentifier
                PayDate: 2021-12-10T00:00:00.0000000-05:00
                OffCyclePayRunXrefCode: QAUSABW2501
                PeriodStart: 2021-11-05T00:00:00.0000000-04:00
                PeriodEnd: 2021-11-19T00:00:00.0000000-05:00
                PPN: 25-01
                AutoDetectPayGroup: false
                DataEntries:
                - EmployeeName: null
                  EmployeeXRefCode: qaubw201
                  Replace: true
                  CodeXRefCode: RegularEarning
                  Hours: 10
                  Rate: 25
                  RateCode: J
                  Amount: 250
                  Message: Comment One
                  WorkLocationXRefCode: Delaware Dept
                  JobAssignmentXRefCode: QA Tester Position Dept2 Ref Code
                  LegalEntityXrefCode: USALId2
                  CheckTemplateXRefCode: Check
                  ApplyROEMapping: true
                  FLSAAdjustStartDate: 2021-12-10T00:00:00.0000000-05:00
                  FLSAAdjustEndDate: 2021-12-10T00:00:00.0000000-05:00
                  ProjectXRefCode: Alabama
                  TrailingTaxationPeriodStart: 2021-12-10T00:00:00.0000000-05:00
                  TrailingTaxationPeriodEnd: 2021-11-16T00:00:00.0000000-05:00
                  DebitArrears: true
                  PayPeriodsForTax: 10
                  DocketXRefCode: ZUT
                  BusinessDate: 2021-12-10T00:00:00.0000000-05:00
                  LaborMetrics:
                  - LaborMetricsTypeXRefCode: Activity Ref
                    LaborMetricsCodeXRefCode: ActivityLaborMetric
        required: true
      responses:
        "200":
          description: "Time Data Import was created successfully, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Payroll/TimeDataDelete/{payGroupXRefCode}:
    patch:
      tags:
      - PayrollPayEntry
      summary: DELETE Import Time Data
      operationId: PayrollPayEntry_TimeDataDelete_By_payGroupXRefCode_importSetModel_source_periodStartDate_periodEndDate_payDate_ppn_orgUnitXRefCode_offCyclePayRunXRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: payGroupXRefCode
        in: path
        description: The pay group reference code
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: source
        in: query
        description: The source of the import
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: periodStartDate
        in: query
        description: The pay run period start date
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: periodEndDate
        in: query
        description: The pay run period end date
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: payDate
        in: query
        description: The pay run pay date
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: ppn
        in: query
        description: "The pay run's pay period number (format: ##-##)"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: orgUnitXRefCode
        in: query
        description: The user org unit reference code to load data entries from (in
          org unit hierarchy)
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: offCyclePayRunXRefCode
        in: query
        description: Offcycle pay run XRef Code
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "If TRUE, DELETE operations validate the request and IDs. \r\n\
          \            The default value is FALSE. Note, DELETE operation will only\
          \ validate data structure"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities ids for
          DELETE operation
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportSetModel'
          text/json:
            schema:
              $ref: '#/components/schemas/ImportSetModel'
          text/html:
            schema:
              $ref: '#/components/schemas/ImportSetModel'
        required: true
      responses:
        "200":
          description: "Time Data Import was deleted successfully, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Payroll/PayrollPayEntryImportHistory/{payGroupXRefCode}:
    get:
      tags:
      - PayrollPayEntry
      summary: GET the list of Time Data Import Job History with Error info.
      operationId: PayrollPayEntry_Get_By_payGroupXRefCode_source_importsFromDate_importsToDate_problemsOnly_periodStartDate_periodEndDate_payDate_ppn_offCyclePayRunXRefCode_importIdentifiers_clientNamespace
      parameters:
      - name: payGroupXRefCode
        in: path
        description: The pay group reference code
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: source
        in: query
        description: The time data import source name
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: importsFromDate
        in: query
        description: The time data import history from date
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: importsToDate
        in: query
        description: The time data import history to date
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: problemsOnly
        in: query
        description: "If true, then return only time data which has errors. If false,\
          \ then return both error and non error records"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: periodStartDate
        in: query
        description: The pay run period start date
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: periodEndDate
        in: query
        description: The pay run period end date
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: payDate
        in: query
        description: The pay run pay date
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: ppn
        in: query
        description: "The pay run's pay period number (format: ##-##)"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: offCyclePayRunXRefCode
        in: query
        description: The off cycle pay run reference code
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: importIdentifiers
        in: query
        description: The comma separated list of import identifiers
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: Time data import jobs history
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadPayrollPayEntryImportHistory'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadPayrollPayEntryImportHistory'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadPayrollPayEntryImportHistory'
        "400":
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
  /{clientNamespace}/V1/Payroll/Import/QuickEntry:
    post:
      tags:
      - PayrollPayEntry
      summary: POST Quick Entry Items
      operationId: PayrollPayEntry_QuickEntryPost_By_importData_isValidateOnly_clientNamespace
      parameters:
      - name: isValidateOnly
        in: query
        description: "If TRUE, POST operations validate the request without queue\
          \ the import. The default value is FALSE. Note, POST operation will only\
          \ validate data structure"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST operation. For more information and examples,\
          \ please refer to the Dayforce Web Services RESTful Developer's Guide"
        content:
          application/json:
            schema:
              type: object
              example:
                ImportSetName: TimeData Import
                ErrorOnAction: 1
                ImportIdentifier: ImportIdentifier
                PayGroupXrefCode: QAUSABWCopy
                PPN: 25-01
                AutoDetectPayGroup: false
                OffCyclePayRunXrefCode: QAUSABW2501
                PayDate: 2021-12-10T00:00:00.0000000-05:00
                PeriodStart: 2021-11-05T00:00:00.0000000-04:00
                PeriodEnd: 2021-11-19T00:00:00.0000000-05:00
                DataEntries:
                - Replace: true
                  Message: Comment One
                  Amount: 250
                  Hours: 10
                  Rate: 25
                  PayOutAccruals: true
                  WorkersCompAccountName: AA
                  WorkersCompCode: WCC
                  ProjectXRefCode: Alabama
                  DocketXRefCode: ZUT
                  LaborPercent: null
                  ApplyROEMapping: true
                  BusinessDate: 2021-12-10T00:00:00.0000000-05:00
                  FLSAAdjustStartDate: 2021-12-10T00:00:00.0000000-05:00
                  FLSAAdjustEndDate: 2021-12-10T00:00:00.0000000-05:00
                  DoNotDisburseToPayee: true
                  PayPeriodsForTax: 10
                  OrderPercent: 22
                  DisposableEarningAmount: 25
                  LimitAmount: 25
                  EmployeeXRefCode: qaubw201
                  EmployeeNumber: null
                  CheckTemplateXRefCode: null
                  WorkLocationXRefCode: Delaware Dept
                  LegalEntityXrefCode: LE001
                  JobAssignmentXRefCode: QA Tester Position Dept2 Ref Code
                  CodeXRefCode: RegularEarning
                  OrderedAmountTypeXRefCode: OT
                  LaborMetrics:
                  - LaborMetricsTypeXRefCode: Activity Ref
                    LaborMetricsCodeXRefCode: ActivityLaborMetric
                  DebitArrears: true
          text/json:
            schema:
              type: object
              example:
                ImportSetName: TimeData Import
                ErrorOnAction: 1
                ImportIdentifier: ImportIdentifier
                PayGroupXrefCode: QAUSABWCopy
                PPN: 25-01
                AutoDetectPayGroup: false
                OffCyclePayRunXrefCode: QAUSABW2501
                PayDate: 2021-12-10T00:00:00.0000000-05:00
                PeriodStart: 2021-11-05T00:00:00.0000000-04:00
                PeriodEnd: 2021-11-19T00:00:00.0000000-05:00
                DataEntries:
                - Replace: true
                  Message: Comment One
                  Amount: 250
                  Hours: 10
                  Rate: 25
                  PayOutAccruals: true
                  WorkersCompAccountName: AA
                  WorkersCompCode: WCC
                  ProjectXRefCode: Alabama
                  DocketXRefCode: ZUT
                  LaborPercent: null
                  ApplyROEMapping: true
                  BusinessDate: 2021-12-10T00:00:00.0000000-05:00
                  FLSAAdjustStartDate: 2021-12-10T00:00:00.0000000-05:00
                  FLSAAdjustEndDate: 2021-12-10T00:00:00.0000000-05:00
                  DoNotDisburseToPayee: true
                  PayPeriodsForTax: 10
                  OrderPercent: 22
                  DisposableEarningAmount: 25
                  LimitAmount: 25
                  EmployeeXRefCode: qaubw201
                  EmployeeNumber: null
                  CheckTemplateXRefCode: null
                  WorkLocationXRefCode: Delaware Dept
                  LegalEntityXrefCode: LE001
                  JobAssignmentXRefCode: QA Tester Position Dept2 Ref Code
                  CodeXRefCode: RegularEarning
                  OrderedAmountTypeXRefCode: OT
                  LaborMetrics:
                  - LaborMetricsTypeXRefCode: Activity Ref
                    LaborMetricsCodeXRefCode: ActivityLaborMetric
                  DebitArrears: true
          text/html:
            schema:
              type: object
              example:
                ImportSetName: TimeData Import
                ErrorOnAction: 1
                ImportIdentifier: ImportIdentifier
                PayGroupXrefCode: QAUSABWCopy
                PPN: 25-01
                AutoDetectPayGroup: false
                OffCyclePayRunXrefCode: QAUSABW2501
                PayDate: 2021-12-10T00:00:00.0000000-05:00
                PeriodStart: 2021-11-05T00:00:00.0000000-04:00
                PeriodEnd: 2021-11-19T00:00:00.0000000-05:00
                DataEntries:
                - Replace: true
                  Message: Comment One
                  Amount: 250
                  Hours: 10
                  Rate: 25
                  PayOutAccruals: true
                  WorkersCompAccountName: AA
                  WorkersCompCode: WCC
                  ProjectXRefCode: Alabama
                  DocketXRefCode: ZUT
                  LaborPercent: null
                  ApplyROEMapping: true
                  BusinessDate: 2021-12-10T00:00:00.0000000-05:00
                  FLSAAdjustStartDate: 2021-12-10T00:00:00.0000000-05:00
                  FLSAAdjustEndDate: 2021-12-10T00:00:00.0000000-05:00
                  DoNotDisburseToPayee: true
                  PayPeriodsForTax: 10
                  OrderPercent: 22
                  DisposableEarningAmount: 25
                  LimitAmount: 25
                  EmployeeXRefCode: qaubw201
                  EmployeeNumber: null
                  CheckTemplateXRefCode: null
                  WorkLocationXRefCode: Delaware Dept
                  LegalEntityXrefCode: LE001
                  JobAssignmentXRefCode: QA Tester Position Dept2 Ref Code
                  CodeXRefCode: RegularEarning
                  OrderedAmountTypeXRefCode: OT
                  LaborMetrics:
                  - LaborMetricsTypeXRefCode: Activity Ref
                    LaborMetricsCodeXRefCode: ActivityLaborMetric
                  DebitArrears: true
        required: true
      responses:
        "200":
          description: "Quick Entry Import was created successfully, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Payroll/QuickEntry:
    patch:
      tags:
      - PayrollPayEntry
      summary: PATCH Quick Entry Items
      operationId: PayrollPayEntry_QuickEntryPatch_By_quickEntries_isValidateOnly_clientNamespace
      parameters:
      - name: isValidateOnly
        in: query
        description: "If TRUE, PATCH operations validate the request without updating\
          \ the item. The default value is FALSE. Note, PATCH operation will only\
          \ validate data structure"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        content:
          application/json:
            schema:
              type: array
              example:
              - {}
              items:
                $ref: '#/components/schemas/DataEntry'
          text/json:
            schema:
              type: array
              example:
              - {}
              items:
                $ref: '#/components/schemas/DataEntry'
          text/html:
            schema:
              type: array
              example:
              - {}
              items:
                $ref: '#/components/schemas/DataEntry'
        required: true
      responses:
        "200":
          description: "Quick Entry Import was updated successfully, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/TaxAuthorityInstanceDetails:
    get:
      tags:
      - PayrollTaxData
      summary: GET List of IPS Tax Authority Instance Details.
      operationId: PayrollTaxData_Get_By_countryCodes_clientNamespace
      parameters:
      - name: countryCodes
        in: query
        description: List of three letter country codes with comma separator to filter
          the result
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: The IPS Tax Authority Instance Details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableTaxAuthorityInstanceDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableTaxAuthorityInstanceDetails'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableTaxAuthorityInstanceDetails'
        "400":
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/PayRunStatus/{payGroupXRefCode}:
    get:
      tags:
      - PayRunStatus
      summary: GET Pay Run Status.
      operationId: PayRunStatus_Get_By_payGroupXRefCode_payDate_periodStartDate_periodEndDate_ppn_clientNamespace
      parameters:
      - name: payGroupXRefCode
        in: path
        description: The pay group's reference code
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: payDate
        in: query
        description: "The pay run's pay date (format: yyyy-mm-dd)"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: periodStartDate
        in: query
        description: "The pay run's period start date (format: yyyy-mm-dd)"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: periodEndDate
        in: query
        description: "The pay run's period end date (format: yyyy-mm-dd)"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ppn
        in: query
        description: "The PayPeriodNumber(format: ##-##)"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: The pay run status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadPayRunStatus'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadPayRunStatus'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadPayRunStatus'
        "400":
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/PayTypes:
    get:
      tags:
      - PayTypes
      summary: GET a List of PayTypes
      operationId: PayTypes_Get_By_clientNamespace
      parameters:
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: A collection of PayType XRefCodes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerablePayType'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerablePayType'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerablePayType'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/PayTypes/{xrefCode}:
    get:
      tags:
      - PayTypes
      summary: GET a PayType with the requested XRefCode.
      operationId: PayTypes_Get_By_xrefCode_clientNamespace
      parameters:
      - name: xrefCode
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: The PayType with the requested XRefCode
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadPayType'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadPayType'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadPayType'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/Addresses:
    get:
      tags:
      - PersonAddress
      summary: GET PersonAddress Details
      operationId: PersonAddress_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ whose data will be retrieved.  The value provided must be the exact match\
          \ for an employee; otherwise, a bad request (400) error will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: contextDate
        in: query
        description: "The Context Date value is an “as-of” date used to determine\
          \ which employee data to search when records have specific start and end\
          \ dates.  The service defaults to the current datetime if the requester\
          \ does not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: contextDateRangeFrom
        in: query
        description: "The Context Date Range From value is the start of the range\
          \ of dates used to determine which employee data to search when records\
          \ have specific start and end dates.  The service defaults to null if the\
          \ requester does not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: contextDateRangeTo
        in: query
        description: "The Context Date Range To value is the end of the range of dates\
          \ to determine which employee data to search when records have specific\
          \ start and end dates.  The service defaults to null if the requester does\
          \ not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: The PersonAddress with the requested XRefCode
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerablePersonAddress'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerablePersonAddress'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerablePersonAddress'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
      - PersonAddress
      summary: POST a PersonAddress
      operationId: PersonAddress_Post_By_personAddress_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be updated.  The value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST and PATCH operations.  For more information\
          \ and examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonAddress'
          text/json:
            schema:
              $ref: '#/components/schemas/PersonAddress'
          text/html:
            schema:
              $ref: '#/components/schemas/PersonAddress'
        required: true
      responses:
        "200":
          description: "A PersonAddress is created, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
      - PersonAddress
      summary: PATCH a PersonAddress
      operationId: PersonAddress_Patch_By_personAddress_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be updated.  The value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST and PATCH operations.  For more information\
          \ and examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonAddress'
          text/json:
            schema:
              $ref: '#/components/schemas/PersonAddress'
          text/html:
            schema:
              $ref: '#/components/schemas/PersonAddress'
        required: true
      responses:
        "200":
          description: "The PersonAddress is updated, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/Contacts:
    get:
      tags:
      - PersonContact
      summary: GET PersonContact Details
      operationId: PersonContact_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ whose data will be retrieved.  The value provided must be the exact match\
          \ for an employee; otherwise, a bad request (400) error will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: contextDate
        in: query
        description: "The Context Date value is an “as-of” date used to determine\
          \ which employee data to search when records have specific start and end\
          \ dates.  The service defaults to the current datetime if the requester\
          \ does not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: contextDateRangeFrom
        in: query
        description: "The Context Date Range From value is the start of the range\
          \ of dates used to determine which employee data to search when records\
          \ have specific start and end dates.  The service defaults to null if the\
          \ requester does not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: contextDateRangeTo
        in: query
        description: "The Context Date Range To value is the end of the range of dates\
          \ to determine which employee data to search when records have specific\
          \ start and end dates.  The service defaults to null if the requester does\
          \ not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: The PersonContact with the requested XRefCode
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerablePersonContact'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerablePersonContact'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerablePersonContact'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
      - PersonContact
      summary: POST a PersonContact
      operationId: PersonContact_Post_By_personContact_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be updated.  The value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST and PATCH operations.  For more information\
          \ and examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonContact'
          text/json:
            schema:
              $ref: '#/components/schemas/PersonContact'
          text/html:
            schema:
              $ref: '#/components/schemas/PersonContact'
        required: true
      responses:
        "200":
          description: "A PersonContact is created, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
      - PersonContact
      summary: PATCH a PersonContact
      operationId: PersonContact_Patch_By_personContact_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be updated.  The value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST and PATCH operations.  For more information\
          \ and examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonContact'
          text/json:
            schema:
              $ref: '#/components/schemas/PersonContact'
          text/html:
            schema:
              $ref: '#/components/schemas/PersonContact'
        required: true
      responses:
        "200":
          description: "The PersonContact is updated, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/PlanLaborCategoryCode:
    get:
      tags:
      - PlanLaborCategoryCode
      summary: Get PlanLaborCategoryCode
      operationId: PlanLaborCategoryCode_Get_By_clientNamespace
      parameters:
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: Labor Standard Category Code
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerablePlanLaborCategoryCode'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerablePlanLaborCategoryCode'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerablePlanLaborCategoryCode'
        "400":
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerablePlanLaborCategoryCode'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerablePlanLaborCategoryCode'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerablePlanLaborCategoryCode'
        "501":
          description: The supplied parameter combination has not been implemented
            and is unsupported.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
  /{clientNamespace}/V1/PlanLaborStandardDriver:
    get:
      tags:
      - PlanLaborStandardDriver
      summary: Get PlanLaborStandardDriver
      operationId: PlanLaborStandardDriver_Get_By_clientNamespace
      parameters:
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: Labor Standard Drivers and DriverTypes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerablePlanLaborStandardDriver'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerablePlanLaborStandardDriver'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerablePlanLaborStandardDriver'
        "400":
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerablePlanLaborStandardDriver'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerablePlanLaborStandardDriver'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerablePlanLaborStandardDriver'
        "501":
          description: The supplied parameter combination has not been implemented
            and is unsupported.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
  /{clientNamespace}/V1/PlanTargets:
    get:
      tags:
      - PlanTargets
      summary: Get Plan Targets matching search criteria
      operationId: PlanTargets_Get_By_planTargetXRefCode_orgUnitXRefCode_kpiXRefCode_zoneXRefCode_isActive_clientNamespace
      parameters:
      - name: planTargetXRefCode
        in: query
        description: The unique identifier of the plan target
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: orgUnitXRefCode
        in: query
        description: Unique identifier of the Org
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: kpiXRefCode
        in: query
        description: The unique identifier of the KPI
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: zoneXRefCode
        in: query
        description: The unique identifier of the zone
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: isActive
        in: query
        description: Select to filter only active plan targets
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: Plan Target details which matches the supplied parameters (or
            all if none supplied)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerablePlanTarget'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerablePlanTarget'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerablePlanTarget'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerablePlanTarget'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerablePlanTarget'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerablePlanTarget'
    post:
      tags:
      - PlanTargets
      operationId: PlanTargets_Post_By_planTargetApiModel_isValidateOnly_clientNamespace
      parameters:
      - name: isValidateOnly
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlanTarget'
          text/json:
            schema:
              $ref: '#/components/schemas/PlanTarget'
          text/html:
            schema:
              $ref: '#/components/schemas/PlanTarget'
        required: true
      responses:
        "200":
          description: "If isValidateOnly was passed in as true, this shows that the\
            \ validation passed"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "201":
          description: The Plan Target has been created
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "403":
          description: User does not have sufficient acess rights to create a Plan
            Target.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "409":
          description: The Plan Target has not been created as a conflicting plan
            target already exists
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "500":
          description: An unexpected server error occurred.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
    delete:
      tags:
      - PlanTargets
      summary: Deletes a plan target matching the supplied XRefCode
      operationId: PlanTargets_Delete_By_planTargetXRefCode_clientNamespace
      parameters:
      - name: planTargetXRefCode
        in: query
        description: ""
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "204":
          description: All matching plan targets were deleted
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "500":
          description: An unexpected server error occurred.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
    patch:
      tags:
      - PlanTargets
      summary: "Amend a Plan Method Target record, plus any child table\r\n    entries."
      operationId: PlanTargets_Patch_By_planTargetApiModel_planTargetXRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: planTargetXRefCode
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in \r\n                 this parameter\
          \ the PATCH operation validates the\r\n                 request without\
          \ applying the updates to the database.\r\n                 The default\
          \ value is FALSE if parameter is not specified"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The details of the \r\n                 PlanTarget record to\
          \ Amend."
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlanTarget'
          text/json:
            schema:
              $ref: '#/components/schemas/PlanTarget'
          text/html:
            schema:
              $ref: '#/components/schemas/PlanTarget'
        required: true
      responses:
        "200":
          description: "If isValidateOnly was passed in as true, this shows that the\
            \ validation passed"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "204":
          description: The Plan Target was updated successfully.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "403":
          description: User does not have sufficient acess rights to create a Plan
            Target.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "404":
          description: The Plan Target does not exist in Dayforce
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "500":
          description: An unexpected server error occurred.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
  /{clientNamespace}/V1/Positions:
    get:
      tags:
      - Positions
      summary: Get a list of Positions
      operationId: Positions_Get_By_contextDate_clientNamespace
      parameters:
      - name: contextDate
        in: query
        description: "The Context Date value is an “as-of” date used to determine\
          \ which Position data to search when records have specific start and end\
          \ dates.  The service defaults to the current datetime if the requester\
          \ does not specify a value.  Example: 2019-01-01T12:34:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: A collection of Position XRefCodes meeting the search criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerablePosition'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerablePosition'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerablePosition'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
      - Positions
      summary: POST (Add) a Position
      operationId: Positions_Post_By_position_isValidateOnly_clientNamespace
      parameters:
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying the updates to the database.\
          \  The default value is FALSE if parameter is not specified"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST (position add) and PATCH (position update)\
          \ operations.  For more information and examples, please refer to the Dayforce\
          \ Web Services RESTful Developer's Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Position'
          text/json:
            schema:
              $ref: '#/components/schemas/Position'
          text/html:
            schema:
              $ref: '#/components/schemas/Position'
        required: true
      responses:
        "200":
          description: "A Position is created, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
  /{clientNamespace}/V1/Positions/{xrefCode}:
    get:
      tags:
      - Positions
      summary: Get Position details
      operationId: Positions_Get_By_XrefCode_contextDate_expand_clientNamespace
      parameters:
      - name: xrefCode
        in: path
        description: "The unique identifier (external reference code) of the Position.\
          \ The value provided must be the exact match for a Position; otherwise,\
          \ a bad request (400) error will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: contextDate
        in: query
        description: "The Context Date value is an “as-of” date used to determine\
          \ which Position data to search when records have specific start and end\
          \ dates.  The service defaults to the current datetime if the requester\
          \ does not specify a value.  Example: 2019-01-01T12:34:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: expand
        in: query
        description: "This parameter accepts a comma-separated list of top-level entities\
          \ that contain the data elements needed for downstream processing.  When\
          \ this parameter is not used, only data elements from the position master\
          \ record will be included.  For more information, please refer to the Introduction\
          \ to Dayforce Web Services document"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: The Position with the requested XRefCode
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadPosition'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadPosition'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadPosition'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Positions/{xRefCode}:
    patch:
      tags:
      - Positions
      summary: PATCH (Update) a Position
      operationId: Positions_Patch_By_position_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the position.\
          \ The value provided must be the exact match for a position; otherwise,\
          \ a bad request (400) error will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying the updates to the database.\
          \  The default value is FALSE if parameter is not specified"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST (position add) and PATCH (position update)\
          \ operations.  For more information and examples, please refer to the Dayforce\
          \ Web Services RESTful Developer's Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Position'
          text/json:
            schema:
              $ref: '#/components/schemas/Position'
          text/html:
            schema:
              $ref: '#/components/schemas/Position'
        required: true
      responses:
        "200":
          description: "A Position is updated, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
  /{clientNamespace}/V1/Employees/{xRefCode}/GLSplits:
    get:
      tags:
      - PRGLSplitSet
      summary: GET GLSplit Details
      operationId: PRGLSplitSet_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ whose data will be retrieved.  The value provided must be the exact match\
          \ for an employee; otherwise, a bad request (400) error will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: contextDate
        in: query
        description: "The Context Date value is an “as-of” date used to determine\
          \ which employee data to search when records have specific start and end\
          \ dates.  The service defaults to the current datetime if the requester\
          \ does not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: contextDateRangeFrom
        in: query
        description: "The Context Date Range From value is the start of the range\
          \ of dates used to determine which employee data to search when records\
          \ have specific start and end dates.  The service defaults to null if the\
          \ requester does not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: contextDateRangeTo
        in: query
        description: "The Context Date Range To value is the end of the range of dates\
          \ to determine which employee data to search when records have specific\
          \ start and end dates.  The service defaults to null if the requester does\
          \ not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: The GLSplit with the requested XRefCode
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerablePRGLSplitSet'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerablePRGLSplitSet'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerablePRGLSplitSet'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Projects:
    get:
      tags:
      - Projects
      summary: Get a list of client projects meeting the search criteria
      operationId: Projects_GetProjects_By_shortName_longName_pageSize_projectClientXRefCode_projectTypeXRefCode_projectPhaseXRefCode_productGroupXRefCode_productModuleXRefCode_creationOrgUnitXRefCode_lastModifedStartDate_lastModifedEndDate_filterStartDateFrom_filterStartDateTo_filterDueDateFrom_filterDueDateTo_filterCompletedDateFrom_filterCompletedDateTo_certifiedPayrollProjectNumber_parentProjectXRefCode_isDeleted_ledgerCode_clockTransferCode_accountNum_iFRSClassification_filterProjectPriorityFrom_filterProjectPriorityTo_filterBudgetHoursFrom_filterBudgetHoursTo_filterBudgetAmountFrom_filterBudgetAmountTo_filterPctCompleteFrom_filterPctCompleteTo_clientNamespace
      parameters:
      - name: shortName
        in: query
        description: Project Name
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: longName
        in: query
        description: Project Description
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: The number of records returned per page in the paginated response
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: projectClientXRefCode
        in: query
        description: This field identifies a unique Project Client
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: projectTypeXRefCode
        in: query
        description: This field identifies a unique Project Type
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: projectPhaseXRefCode
        in: query
        description: This field identifies a unique Project Phase
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: productGroupXRefCode
        in: query
        description: This field identifies a unique Product Group
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: productModuleXRefCode
        in: query
        description: This field identifies a unique Product Module
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: creationOrgUnitXRefCode
        in: query
        description: Use to search for projects based on Organizational units' xrefcode
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: lastModifedStartDate
        in: query
        description: The Start date used when searching for projects with updates
          in a specified timeframe
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: lastModifedEndDate
        in: query
        description: The End date used when searching for projects with updates in
          a specified timeframe
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: filterStartDateFrom
        in: query
        description: Use to search for projects with Start date values greater than
          or equal to the specified value
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: filterStartDateTo
        in: query
        description: Use to search for projects with Start date values less than or
          equal to the specified value
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: filterDueDateFrom
        in: query
        description: Use to search for projects with Due Date  values greater than
          or equal to the specified value
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: filterDueDateTo
        in: query
        description: Use to search for projects with Due Date  values less than or
          equal to the specified value
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: filterCompletedDateFrom
        in: query
        description: Use to search for projects with Completed Date values greater
          than or equal to the specified value
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: filterCompletedDateTo
        in: query
        description: Use to search for Projects with Completed Date values less than
          or equal to the specified value
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: certifiedPayrollProjectNumber
        in: query
        description: Use to search for projects with certifiedPayrollProjectNumber
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: parentProjectXRefCode
        in: query
        description: Use to search for projects with immediate Parent Project
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: isDeleted
        in: query
        description: This filters the projects based on those are deleted or not
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: ledgerCode
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: clockTransferCode
        in: query
        description: Use to search for Projects with Clock Code
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: accountNum
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: iFRSClassification
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: filterProjectPriorityFrom
        in: query
        description: Use to search for projects with Project Priority value greater
          than or equal to the specified value. When a value is provided for this
          parameter filterProjectPriorityTo value must also be provided
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: filterProjectPriorityTo
        in: query
        description: Use to search for Projects  with Project Priority values less
          than or equal to the specified value. When a value is provided for this
          parameter filterProjectPriorityFrom value must also be provided
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: filterBudgetHoursFrom
        in: query
        description: Use to search for projects with Budget Hours value greater than
          or equal to the specified value. When a value is provided for this parameter
          filterBudgetHoursTo value must also be provided
        required: false
        style: form
        explode: true
        schema:
          type: number
          format: double
      - name: filterBudgetHoursTo
        in: query
        description: Use to search for Projects  with Budget Hours values less than
          or equal to the specified value. When a value is provided for this parameter
          filterBudgetHoursFrom value must also be provided
        required: false
        style: form
        explode: true
        schema:
          type: number
          format: double
      - name: filterBudgetAmountFrom
        in: query
        description: Use to search for projects with Budget Amount value greater than
          or equal to the specified value. When a value is provided for this parameter
          filterBudgetAmountTo value must also be provided
        required: false
        style: form
        explode: true
        schema:
          type: number
          format: double
      - name: filterBudgetAmountTo
        in: query
        description: Use to search for Projects  with Budget Amount values less than
          or equal to the specified value. When a value is provided for this parameter
          filterBudgetAmountFrom value must also be provided
        required: false
        style: form
        explode: true
        schema:
          type: number
          format: double
      - name: filterPctCompleteFrom
        in: query
        description: Use to search for projects with Percent Complete value greater
          than or equal to the specified value. When a value is provided for this
          parameter filterPctCompleteTo value must also be provided
        required: false
        style: form
        explode: true
        schema:
          type: number
          format: double
      - name: filterPctCompleteTo
        in: query
        description: Use to search for Projects  with Percent Complete values less
          than or equal to the specified value. When a value is provided for this
          parameter filterPctCompleteFrom value must also be provided
        required: false
        style: form
        explode: true
        schema:
          type: number
          format: double
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: A collection of client project data meeting the search criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayloadIEnumerableBaseProject'
            text/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayloadIEnumerableBaseProject'
            text/html:
              schema:
                $ref: '#/components/schemas/PaginatedPayloadIEnumerableBaseProject'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
    post:
      tags:
      - Projects
      summary: POST (Insert) new Projects data into Dayforce
      operationId: Projects_Post_By_projectData_isValidateOnly_clientNamespace
      parameters:
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST operations\
          \ validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectForSubmit'
          text/json:
            schema:
              $ref: '#/components/schemas/ProjectForSubmit'
          text/html:
            schema:
              $ref: '#/components/schemas/ProjectForSubmit'
        required: true
      responses:
        "200":
          description: New Projects data is inserted into Dayforce
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectsPostResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ProjectsPostResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/ProjectsPostResponse'
        "400":
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
    patch:
      tags:
      - Projects
      summary: Patch (Update) a project
      operationId: Projects_Patch_By_projectData_projectXRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: projectXRefCode
        in: query
        description: Project XRefCode
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, PATCH operations\
          \ validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in PATCH operation.  For more information and\
          \ examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectForSubmit'
          text/json:
            schema:
              $ref: '#/components/schemas/ProjectForSubmit'
          text/html:
            schema:
              $ref: '#/components/schemas/ProjectForSubmit'
        required: true
      responses:
        "200":
          description: Project data is updated
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed. Correct and resubmit.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "500":
          description: An unexpected server error occurred.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
  /{clientNamespace}/V1/Projects/{xRefCode}:
    get:
      tags:
      - Projects
      summary: Get project details
      operationId: Projects_GetProjectDetails_By_xRefCode_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: Project details which matches with the XRefCode
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadProjects'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadProjects'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadProjects'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
  /{clientNamespace}/V1/ReportMetadata:
    get:
      tags:
      - Reports
      summary: GET a List of Report Metadata
      operationId: Reports_GetReportMetadataAsync_By_clientNamespace
      parameters:
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: Metadata for all Reports
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableReportMetadata'
              example:
                Data:
                - Name: string
                  Description: string
                  XRefCode: string
                  MaxRows: 0
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableReportMetadata'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableReportMetadata'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
  /{clientNamespace}/V1/ReportMetadata/{xRefCode}:
    get:
      tags:
      - Reports
      summary: GET Report Metadata for the given XRefCode
      operationId: Reports_GetReportMetadataAsync_By_xRefCode_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the report\
          \ to be retrieved.  The value provided must be the exact match for an report;\
          \ otherwise, a bad request (400) error will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: The Metadata for the Report matching the requested XRefCode
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableReportMetadata'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableReportMetadata'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableReportMetadata'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
  /{clientNamespace}/V1/Reports/{xRefCode}:
    get:
      tags:
      - Reports
      summary: GET Report
      operationId: Reports_GetReportAsync_By_xRefCode_pageSize_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the report\
          \ to be retrieved.  The value provided must be the exact match for an report;\
          \ otherwise, a bad request (400) error will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: pageSize
        in: query
        description: The number of records returned per page in the paginated response
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      - name: reportParameters
        in: query
        description: A list of key value pairs for those reports which take as input
          user supplied parameter values
        required: false
        style: form
        explode: true
        schema:
          type: object
          additionalProperties:
            type: string
          example: "\r\n{\r\n  \"exampleParameterGuid1\": \"string\",\r\n  \"exampleParameterGuid2\"\
            : \"string\",\r\n  \"exampleParameterGuid3\": \"string\"\r\n}"
      responses:
        "200":
          description: report that match the given request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayloadReport'
            text/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayloadReport'
            text/html:
              schema:
                $ref: '#/components/schemas/PaginatedPayloadReport'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
  /{clientNamespace}/V1/Employees/{employeeXRefCode}/UnfilledShiftBids:
    get:
      tags:
      - ShiftBidding
      summary: Get List of Unfilled Shift Bids for Employee
      operationId: ShiftBidding_Get_By_OrgUnitXRefCode_EmployeeXRefCode_ScheduleStartDate_ScheduleEndDate_clientNamespace
      parameters:
      - name: OrgUnitXRefCode
        in: query
        description: The unique identifier (external reference code) of the organization
          to be retrieved. The value provided must be the exact match for an organization
        required: true
        style: form
        explode: true
        schema:
          type: string
        x-ballerina-name: orgUnitXRefCode
      - name: employeeXRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ to be retrieved.  The value provided must be the exact match for an employee;\
          \ otherwise, a bad request (400) error will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ScheduleStartDate
        in: query
        description: Date to represent the start of the schedule period for which
          Shift Bids should be retrieved
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: date-time
        x-ballerina-name: scheduleStartDate
      - name: ScheduleEndDate
        in: query
        description: Date to represent the end of the schedule period for which Shift
          Bids should be retrieved
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: date-time
        x-ballerina-name: scheduleEndDate
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: A Collection of Open Shift Bids
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeSchedule'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeSchedule'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeSchedule'
        "400":
          description: The server cannot process your request due to malformed syntax
            or invalid parameters. Please check your input and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
    post:
      tags:
      - ShiftBidding
      summary: POST (Create) Employee Shift Bids. Employee Request or Revoke Shift
        Bid Request.
      operationId: ShiftBidding_Post_By_OrgUnitXRefCode_EmployeeXRefCode_employeeShiftBidDTO_isValidateOnly_clientNamespace
      parameters:
      - name: OrgUnitXRefCode
        in: query
        description: The unique identifier (external reference code) of the organization
          to be retrieved. The value provided must be the exact match for an organization
        required: true
        style: form
        explode: true
        schema:
          type: string
        x-ballerina-name: orgUnitXRefCode
      - name: employeeXRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ to be retrieved.  The value provided must be the exact match for an employee;\
          \ otherwise, a bad request (400) error will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST operation\
          \ validates the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeShiftBidDTO'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeShiftBidDTO'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeShiftBidDTO'
        required: true
      responses:
        "200":
          description: Specifies an employee bid request/revocation was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableProcessResult'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableProcessResult'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableProcessResult'
        "400":
          description: The server cannot process your request due to malformed syntax
            or invalid parameters. Please check your input and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
  /{clientNamespace}/V1/Organization/{orgUnitXRefCode}/UnfilledShiftBids:
    get:
      tags:
      - ShiftBidding
      summary: Get List of Shift Bids
      operationId: ShiftBidding_Get_By_OrgUnitXRefCode_ScheduleStartDate_ScheduleEndDate_ActiveBids_clientNamespace
      parameters:
      - name: orgUnitXRefCode
        in: path
        description: The unique identifier (external reference code) of the organization
          to be retrieved. The value provided must be the exact match for an organization
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ScheduleStartDate
        in: query
        description: Date to represent the start of the schedule period for which
          Shift Bids should be retrieved
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: date-time
        x-ballerina-name: scheduleStartDate
      - name: ScheduleEndDate
        in: query
        description: Date to represent the end of the schedule period for which Shift
          Bids should be retrieved
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: date-time
        x-ballerina-name: scheduleEndDate
      - name: ActiveBids
        in: query
        description: "Specifies whether to return bids with or without active employee\
          \ bid requests. When no value is supplied, all shift bids will be returned"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
        x-ballerina-name: activeBids
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: A Collection of Shift Bids
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableManagerShiftBid'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableManagerShiftBid'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableManagerShiftBid'
        "400":
          description: The server cannot process your request due to malformed syntax
            or invalid parameters. Please check your input and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
  /{clientNamespace}/V1/Organization/{orgUnitXRefCode}/UnfilledShiftBid:
    post:
      tags:
      - ShiftBidding
      summary: "Manager assignment of shift to an employee who has bid for a specific\
        \ group schedule.\r\nNotifies awarded bidder.\r\nNotifies rejected bidder."
      operationId: ShiftBidding_Post_By_OrgUnitXRefCode_body_isValidateOnly_violationLevel_clientNamespace
      parameters:
      - name: orgUnitXRefCode
        in: path
        description: The unique identifier (external reference code) of the organization
          to be retrieved. The value provided must be the exact match for an organization
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: violationLevel
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ManagerAssignShiftBidDTO'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ManagerAssignShiftBidDTO'
          text/html:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ManagerAssignShiftBidDTO'
        required: true
      responses:
        "200":
          description: Assigns shift bid to bidding employee
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeSchedule'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeSchedule'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeSchedule'
        "400":
          description: The server cannot process your request due to malformed syntax
            or invalid parameters. Please check your input and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
  /{clientNamespace}/V1/Skills:
    get:
      tags:
      - Skill
      summary: GET the list of all skills
      operationId: Skill_Get_By_pageSize_xRefCode_clientNamespace
      parameters:
      - name: pageSize
        in: query
        description: The page size for the pagination (Default is 1000)
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: xRefCode
        in: query
        description: The xrefcode filter for the skill
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: A collection of skills
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayloadIEnumerableSkill'
            text/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayloadIEnumerableSkill'
            text/html:
              schema:
                $ref: '#/components/schemas/PaginatedPayloadIEnumerableSkill'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
      - Skill
      summary: POST one skill
      operationId: Skill_Post_By_skill_isValidateOnly_clientNamespace
      parameters:
      - name: isValidateOnly
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: The skill payload used for skill creation
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Skill'
          text/json:
            schema:
              $ref: '#/components/schemas/Skill'
          text/html:
            schema:
              $ref: '#/components/schemas/Skill'
        required: true
      responses:
        "200":
          description: The skill created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableSkill'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableSkill'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableSkill'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
      - Skill
      summary: PATCH one skill
      operationId: Skill_Patch_By_skill_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: query
        description: The xRefCode of the skill to be updated
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: isValidateOnly
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: The skill payload used for skill modification
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Skill'
          text/json:
            schema:
              $ref: '#/components/schemas/Skill'
          text/html:
            schema:
              $ref: '#/components/schemas/Skill'
        required: true
      responses:
        "200":
          description: The skill updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableSkill'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableSkill'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableSkill'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/TimeAwayFromWork:
    get:
      tags:
      - Employees
      summary: GET List of Employee Time Away From Work
      operationId: TimeOff_Get_By_xRefCode_filterTAFWStartDate_filterTAFWEndDate_status_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ to be retrieved.  The value provided must be the exact match for an employee;\
          \ otherwise, a bad request (400) error will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: filterTAFWStartDate
        in: query
        description: "Inclusive period start date to determine which employee time\
          \ away from work data to retrieve. Format: YYYY-MM-DD"
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: filterTAFWEndDate
        in: query
        description: "Inclusive period end date to determine which employee time away\
          \ from work data to retrieve. Format: YYYY-MM-DD"
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: status
        in: query
        description: "A case-sensitive field containing status for time away from\
          \ work values. Examples: [APPROVED,PENDING,CANCELED,DENIED,CANCELPENDING]"
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: A collection of employee time away from work meeting the search
            criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeTimeAwayFromWork'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeTimeAwayFromWork'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeTimeAwayFromWork'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
  /{clientNamespace}/V1/TimeOff:
    post:
      tags:
      - TimeOff
      summary: POST (Create) Employee Time Away From Work
      operationId: TimeOff_Post_By_timeOff_isValidateOnly_clientNamespace
      parameters:
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST operation.  For more information and\
          \ examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeTimeAwayFromWorkForSubmit'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeTimeAwayFromWorkForSubmit'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeTimeAwayFromWorkForSubmit'
        required: true
      responses:
        "200":
          description: An Employee Time Away From Work is created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadEmployeeTimeAwayFromWorkForSubmit'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadEmployeeTimeAwayFromWorkForSubmit'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadEmployeeTimeAwayFromWorkForSubmit'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
  /{clientNamespace}/V1/TimeOff/{xRefCode}:
    patch:
      tags:
      - TimeOff
      summary: PATCH (Update) Employee Time Away From Work
      operationId: TimeOff_Patch_By_timeOff_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the time\
          \ away from work to be retrieved. The value provided must be the exact match\
          \ for a time away from work; otherwise, a bad request (400) error will be\
          \ returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST operation.  For more information and\
          \ examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeTimeAwayFromWorkForSubmit'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeTimeAwayFromWorkForSubmit'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeTimeAwayFromWorkForSubmit'
        required: true
      responses:
        "200":
          description: An Employee Time Away From Work is updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeTimeAwayFromWorkForSubmit'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeTimeAwayFromWorkForSubmit'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeTimeAwayFromWorkForSubmit'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
              example:
                ProcessResults:
                - Code: string
                  Context: string
                  Level: string
                  Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadObject'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadObject'
  /{clientNamespace}/V1/TrainingPrograms:
    get:
      tags:
      - TrainingProgram
      summary: Get a list of or one Training Program detail
      operationId: TrainingProgram_Get_By_pageSize_xRefCode_clientNamespace
      parameters:
      - name: pageSize
        in: query
        description: The page size for the pagination (Default is 1000)
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: xRefCode
        in: query
        description: The xrefcode filter for the Training Program
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: A collection of Training Program
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayloadIEnumerableTrainingProgram'
            text/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayloadIEnumerableTrainingProgram'
            text/html:
              schema:
                $ref: '#/components/schemas/PaginatedPayloadIEnumerableTrainingProgram'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
      - TrainingProgram
      summary: POST one training program
      operationId: TrainingProgram_Post_By_trainingProgram_isValidateOnly_clientNamespace
      parameters:
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST operation\
          \ validate the request without applying the changes to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: The training program payload that will be used for training program
          creation
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrainingProgram'
          text/json:
            schema:
              $ref: '#/components/schemas/TrainingProgram'
          text/html:
            schema:
              $ref: '#/components/schemas/TrainingProgram'
        required: true
      responses:
        "200":
          description: "A training program is created, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
      - TrainingProgram
      summary: PATCH one training program
      operationId: TrainingProgram_Patch_By_trainingProgram_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: query
        description: The course xRefCode to be updated
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, PATCH operation\
          \ validate the request without applying the changes to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: The training program payload that will be used for training program
          creation
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrainingProgram'
          text/json:
            schema:
              $ref: '#/components/schemas/TrainingProgram'
          text/html:
            schema:
              $ref: '#/components/schemas/TrainingProgram'
        required: true
      responses:
        "200":
          description: "A training program is updated, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/TransmissionService:
    post:
      tags:
      - TransmissionService
      operationId: TransmissionService_Post_By_clientNamespace
      parameters:
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            text/html:
              schema:
                type: object
  /{clientNamespace}/V1/Employees/{xRefCode}/UserPayAdjustCodeGroups:
    get:
      tags:
      - UserPayAdjustCodeGroup
      summary: GET UserPayAdjCodeGroup Details
      operationId: UserPayAdjustCodeGroup_Get_By_xRefCode_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ whose data will be retrieved.  The value provided must be the exact match\
          \ for an employee; otherwise, a bad request (400) error will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: The UserPayAdjCodeGroup with the requested XRefCode
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableUserPayAdjustCodeGroup'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableUserPayAdjustCodeGroup'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableUserPayAdjustCodeGroup'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
      - UserPayAdjustCodeGroup
      summary: POST a UserPayAdjCodeGroup
      operationId: UserPayAdjustCodeGroup_Post_By_userPayAdjCodeGroup_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be updated.  The value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST and PATCH operations.  For more information\
          \ and examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserPayAdjustCodeGroup'
          text/json:
            schema:
              $ref: '#/components/schemas/UserPayAdjustCodeGroup'
          text/html:
            schema:
              $ref: '#/components/schemas/UserPayAdjustCodeGroup'
        required: true
      responses:
        "200":
          description: "The UserPayAdjCodeGroup is created, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
      - UserPayAdjustCodeGroup
      summary: PATCH a UserPayAdjCodeGroup
      operationId: UserPayAdjustCodeGroup_Patch_By_userPayAdjCodeGroup_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be updated.  The value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST and PATCH operations.  For more information\
          \ and examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserPayAdjustCodeGroup'
          text/json:
            schema:
              $ref: '#/components/schemas/UserPayAdjustCodeGroup'
          text/html:
            schema:
              $ref: '#/components/schemas/UserPayAdjustCodeGroup'
        required: true
      responses:
        "200":
          description: "The UserPayAdjCodeGroup is updated, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/WorkContracts:
    get:
      tags:
      - WorkContract
      summary: GET EmployeeWorkContract Details
      operationId: WorkContract_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ whose data will be retrieved.  The value provided must be the exact match\
          \ for an employee; otherwise, a bad request (400) error will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: contextDate
        in: query
        description: "The Context Date value is an “as-of” date used to determine\
          \ which employee data to search when records have specific start and end\
          \ dates.  The service defaults to the current datetime if the requester\
          \ does not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: contextDateRangeFrom
        in: query
        description: "The Context Date Range From value is the start of the range\
          \ of dates used to determine which employee data to search when records\
          \ have specific start and end dates.  The service defaults to null if the\
          \ requester does not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: contextDateRangeTo
        in: query
        description: "The Context Date Range To value is the end of the range of dates\
          \ to determine which employee data to search when records have specific\
          \ start and end dates.  The service defaults to null if the requester does\
          \ not specify a value.  Example: 2017-01-01T13:24:56"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      responses:
        "200":
          description: The EmployeeWorkContract with the requested XRefCode
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeWorkContract'
            text/json:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeWorkContract'
            text/html:
              schema:
                $ref: '#/components/schemas/PayloadIEnumerableEmployeeWorkContract'
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
      - WorkContract
      summary: POST a EmployeeWorkContract
      operationId: WorkContract_Post_By_employeeWorkContract_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be updated.  The value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST and PATCH operations.  For more information\
          \ and examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeWorkContract'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeWorkContract'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeWorkContract'
        required: true
      responses:
        "200":
          description: "An EmployeeWorkContract is created, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
      - WorkContract
      summary: PATCH a EmployeeWorkContract
      operationId: WorkContract_Patch_By_employeeWorkContract_xRefCode_isValidateOnly_clientNamespace
      parameters:
      - name: xRefCode
        in: path
        description: "The unique identifier (external reference code) of the employee\
          \ for whom the subordinate data will be updated.  The value provided must\
          \ be the exact match for an employee; otherwise, a bad request (400) error\
          \ will be returned"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isValidateOnly
        in: query
        description: "When a TRUE value is used in this parameter, POST and PATCH\
          \ operations validate the request without applying updates to the database"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clientNamespace
        in: path
        description: Uniquely identifies the client's Dayforce instance. Is needed
          to login
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ddn
      requestBody:
        description: "The JSON-formatted content containing the data entities and\
          \ elements to be processed in POST and PATCH operations.  For more information\
          \ and examples, please refer to the Dayforce Web Services RESTful Developer's\
          \ Guide"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeWorkContract'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeWorkContract'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeWorkContract'
        required: true
      responses:
        "200":
          description: "The EmployeeWorkContract is updated, no response body"
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        "400":
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        "500":
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
components:
  schemas:
    LaborMetricsCode:
      type: object
      properties:
        LedgerCode:
          type: string
          x-ballerina-name: ledgerCode
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        LaborMetricsType:
          allOf:
          - $ref: '#/components/schemas/LaborMetricsType'
          x-ballerina-name: laborMetricsType
        ShortName:
          type: string
          x-ballerina-name: shortName
        ClockTransferCode:
          type: string
          x-ballerina-name: clockTransferCode
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    BackgroundScreeningPackage:
      type: object
      properties:
        Packages:
          type: array
          items:
            $ref: '#/components/schemas/BackgroundScreeningProviderPackage'
          x-ballerina-name: packages
        ProviderReference:
          type: string
          x-ballerina-name: providerReference
    EmployeeMUSTaxDetails:
      type: object
      properties:
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    PayloadIEnumerableDeductionDefinition:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/DeductionDefinition'
          x-ballerina-name: data
    EmployeeUSStateTax:
      type: object
      properties:
        AdoptionDependents:
          type: integer
          format: int32
          x-ballerina-name: adoptionDependents
        AdditionalAmount:
          type: number
          format: double
          x-ballerina-name: additionalAmount
        ExemptionAmount:
          type: number
          format: double
          x-ballerina-name: exemptionAmount
        FilingStatus:
          allOf:
          - $ref: '#/components/schemas/StateFilingStatus'
          x-ballerina-name: filingStatus
        DependentAllowances:
          type: integer
          format: int32
          x-ballerina-name: dependentAllowances
        AlternateCalculationCodeDisplayName:
          type: string
          x-ballerina-name: alternateCalculationCodeDisplayName
        Allowances:
          type: integer
          format: int32
          x-ballerina-name: allowances
        IsLocked:
          type: boolean
          x-ballerina-name: isLocked
        PRYoungEntrepreneurExemptionOptOut:
          type: boolean
          x-ballerina-name: pRYoungEntrepreneurExemptionOptOut
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
        PersonalAllowances:
          type: integer
          format: int32
          x-ballerina-name: personalAllowances
        IsTaxExempt:
          type: boolean
          x-ballerina-name: isTaxExempt
        EffectiveEnd:
          type: string
          format: date-time
          x-ballerina-name: effectiveEnd
        State:
          allOf:
          - $ref: '#/components/schemas/State'
          x-ballerina-name: state
        StateFilingStatusDisplayName:
          type: string
          x-ballerina-name: stateFilingStatusDisplayName
        EffectiveStart:
          type: string
          format: date-time
          x-ballerina-name: effectiveStart
        AlternateCalculationCode:
          type: string
          x-ballerina-name: alternateCalculationCode
        AdditionalAllowances:
          type: integer
          format: int32
          x-ballerina-name: additionalAllowances
        AdditionalTaxPercent:
          type: number
          format: double
          x-ballerina-name: additionalTaxPercent
        AdditionalExemptionAmount:
          type: number
          format: double
          x-ballerina-name: additionalExemptionAmount
    CandidateRTWRejectionReason:
      type: object
      properties:
        ReasonDescription:
          type: string
          x-ballerina-name: reasonDescription
        ReasonCode:
          type: string
          x-ballerina-name: reasonCode
    LMSEmployeeCertification:
      type: object
      properties:
        EffectiveEnd:
          type: string
          format: date-time
          x-ballerina-name: effectiveEnd
        LMSCertification:
          allOf:
          - $ref: '#/components/schemas/LMSCertification'
          x-ballerina-name: lMSCertification
        LMSAssignmentMethod:
          allOf:
          - $ref: '#/components/schemas/LMSAssignmentMethod'
          x-ballerina-name: lMSAssignmentMethod
        EffectiveStart:
          type: string
          format: date-time
          x-ballerina-name: effectiveStart
        TrainingProgram:
          allOf:
          - $ref: '#/components/schemas/TrainingProgram'
          x-ballerina-name: trainingProgram
        LMSCertificationStatus:
          allOf:
          - $ref: '#/components/schemas/LMSCertificationStatus'
          x-ballerina-name: lMSCertificationStatus
        Course:
          allOf:
          - $ref: '#/components/schemas/Course'
          x-ballerina-name: course
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
        CertificationNumber:
          type: string
          x-ballerina-name: certificationNumber
    EmployeeNZLKiwiSaver:
      type: object
    GlobalProperty:
      type: object
      properties:
        IsEditable:
          type: boolean
          x-ballerina-name: isEditable
        DataTypeParam:
          type: string
          x-ballerina-name: dataTypeParam
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        DataType:
          type: integer
          format: int32
          x-ballerina-name: dataType
        ShortName:
          type: string
          x-ballerina-name: shortName
        Sequence:
          type: integer
          format: int32
          x-ballerina-name: sequence
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
        EmployeeCardinality:
          type: integer
          format: int32
          x-ballerina-name: employeeCardinality
        GenerateHREvent:
          type: boolean
          x-ballerina-name: generateHREvent
    EmployeeLaborMetrics:
      type: object
      properties:
        LaborMetricsTypeXRefCode:
          type: string
          x-ballerina-name: laborMetricsTypeXRefCode
        LaborMetricsTypeName:
          type: string
          x-ballerina-name: laborMetricsTypeName
        LaborMetricsCodeName:
          type: string
          x-ballerina-name: laborMetricsCodeName
        LaborMetricsCodeXRefCode:
          type: string
          x-ballerina-name: laborMetricsCodeXRefCode
    BackgroundScreeningAssociatedPackage:
      type: object
      properties:
        Description:
          type: string
          x-ballerina-name: description
        IncludeRTW:
          type: boolean
          x-ballerina-name: includeRTW
        PackageId:
          type: string
          x-ballerina-name: packageId
        Name:
          type: string
          x-ballerina-name: name
    EmployeeEarningLimitCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeEarningLimit'
          x-ballerina-name: items
    Docket:
      type: object
      properties:
        LedgerCode:
          type: string
          x-ballerina-name: ledgerCode
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    PayloadDepartment:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          allOf:
          - $ref: '#/components/schemas/Department'
          x-ballerina-name: data
    EmployeeHRIncidentNoteCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeHRIncidentNote'
          x-ballerina-name: items
    PayloadIEnumerableEmployeeAssignedSexAndGenderIdentity:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeAssignedSexAndGenderIdentity'
          x-ballerina-name: data
    PayGrade:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    PayloadIEnumerableEmployeeDefaultLabor:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeDefaultLabor'
          x-ballerina-name: data
    PayloadIEnumerableLMSEmployeeCertification:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/LMSEmployeeCertification'
          x-ballerina-name: data
    Associations:
      type: object
      properties:
        _Total:
          type: integer
          format: int32
          x-ballerina-name: total
        Values:
          type: array
          items:
            $ref: '#/components/schemas/AssociationDetails'
          x-ballerina-name: values
    PayrollPayeeCategory:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    EarningStatementHeader:
      type: object
      properties:
        EarningStatementHeaders:
          type: string
          x-ballerina-name: earningStatementHeaders
    TimeZone:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    EmployeeScheduleLaborMetricPostAPIRequestDTO:
      required:
      - CodeXRefCode
      - TypeXRefCode
      type: object
      properties:
        CodeXRefCode:
          type: string
          x-ballerina-name: codeXRefCode
        TypeXRefCode:
          type: string
          x-ballerina-name: typeXRefCode
    Employee:
      type: object
      properties:
        EmployeePin:
          type: string
          x-ballerina-name: employeePin
        EmployeeManagers:
          allOf:
          - $ref: '#/components/schemas/EmployeeManagerCollection'
          x-ballerina-name: employeeManagers
        Gender:
          type: string
          x-ballerina-name: gender
        DependentsBeneficiaries:
          allOf:
          - $ref: '#/components/schemas/EmployeeDependentsBeneficiariesCollection'
          x-ballerina-name: dependentsBeneficiaries
        NZLKiwiSaver:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeNZLKiwiSaver'
          x-ballerina-name: nZLKiwiSaver
        DEUEmployeeAccidentInsurance:
          allOf:
          - $ref: '#/components/schemas/DEUEmployeeAccidentInsuranceCollection'
          x-ballerina-name: dEUEmployeeAccidentInsurance
        CANFederalTaxes:
          allOf:
          - $ref: '#/components/schemas/EmployeeCANFederalTaxCollection'
          x-ballerina-name: cANFederalTaxes
        Addresses:
          allOf:
          - $ref: '#/components/schemas/PersonAddressCollection'
          x-ballerina-name: addresses
        MaritalStatuses:
          allOf:
          - $ref: '#/components/schemas/EmployeeMaritalStatusCollection'
          x-ballerina-name: maritalStatuses
        GLSplits:
          allOf:
          - $ref: '#/components/schemas/PRGLSplitSetCollection'
          x-ballerina-name: gLSplits
        UKStudentLoan:
          allOf:
          - $ref: '#/components/schemas/EmployeeUKStudentLoanCollection'
          x-ballerina-name: uKStudentLoan
        UserPayAdjustCodeGroups:
          allOf:
          - $ref: '#/components/schemas/UserPayAdjCodeGroupCollection'
          x-ballerina-name: userPayAdjustCodeGroups
        LastActiveManagers:
          allOf:
          - $ref: '#/components/schemas/EmployeeManagerCollection'
          x-ballerina-name: lastActiveManagers
        HireDate:
          type: string
          format: date-time
          x-ballerina-name: hireDate
        BadgeNumber:
          type: string
          x-ballerina-name: badgeNumber
        EIRates:
          allOf:
          - $ref: '#/components/schemas/EmployeeEIRateCollection'
          x-ballerina-name: eIRates
        EntitlementOverrideDate:
          type: string
          format: date-time
          x-ballerina-name: entitlementOverrideDate
        HighlyCompensatedEmployees:
          allOf:
          - $ref: '#/components/schemas/HighlyCompensatedEmployeeCollection'
          x-ballerina-name: highlyCompensatedEmployees
        EmployeeAssignedSexAndGenderIdentities:
          allOf:
          - $ref: '#/components/schemas/EmployeeAssignedSexAndGenderIdentityCollection'
          x-ballerina-name: employeeAssignedSexAndGenderIdentities
        PreviousLastName:
          type: string
          x-ballerina-name: previousLastName
        Locations:
          allOf:
          - $ref: '#/components/schemas/EmployeeLocationCollection'
          x-ballerina-name: locations
        COBRANotificationStatus:
          type: integer
          format: int32
          x-ballerina-name: cOBRANotificationStatus
        Roles:
          allOf:
          - $ref: '#/components/schemas/EmployeeRoleCollection'
          x-ballerina-name: roles
        DocumentManagementSecurityGroups:
          allOf:
          - $ref: '#/components/schemas/DocMgmtSecurityGroupUserMapCollection'
          x-ballerina-name: documentManagementSecurityGroups
        Initials:
          type: string
          x-ballerina-name: initials
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
        RegisteredDisabled:
          type: string
          x-ballerina-name: registeredDisabled
        EmployeePayAdjustCodeGroups:
          allOf:
          - $ref: '#/components/schemas/EmployeePayAdjCodeGroupListCollection'
          x-ballerina-name: employeePayAdjustCodeGroups
        MUSTaxes:
          allOf:
          - $ref: '#/components/schemas/EmployeeMUSTaxDetailsCollection'
          x-ballerina-name: mUSTaxes
        BioSensitivityLevel:
          allOf:
          - $ref: '#/components/schemas/BioSensitivityLevel'
          x-ballerina-name: bioSensitivityLevel
        AuthorizationAssignments:
          allOf:
          - $ref: '#/components/schemas/UserEmployeeAuthorityTypeAssignmentCollection'
          x-ballerina-name: authorizationAssignments
        Suffix:
          type: string
          x-ballerina-name: suffix
        SSNCountryCode:
          type: string
          x-ballerina-name: sSNCountryCode
        PreStartDate:
          type: string
          format: date-time
          x-ballerina-name: preStartDate
        EstimatedReturnDate:
          type: string
          format: date-time
          x-ballerina-name: estimatedReturnDate
        EmployeeWorkAssignmentManagers:
          allOf:
          - $ref: '#/components/schemas/EmployeeWorkAssignmentManagerCollection'
          x-ballerina-name: employeeWorkAssignmentManagers
        DeductionElections:
          allOf:
          - $ref: '#/components/schemas/EmployeeDeductionsCollection'
          x-ballerina-name: deductionElections
        SeniorityDate:
          type: string
          format: date-time
          x-ballerina-name: seniorityDate
        NewHireApprovalDate:
          type: string
          format: date-time
          x-ballerina-name: newHireApprovalDate
        VeteranSeparationDate:
          type: string
          format: date-time
          x-ballerina-name: veteranSeparationDate
        TrainingPrograms:
          allOf:
          - $ref: '#/components/schemas/EmployeeTrainingProgramCollection'
          x-ballerina-name: trainingPrograms
        ClockSupervisor:
          type: boolean
          x-ballerina-name: clockSupervisor
        Disabilities:
          allOf:
          - $ref: '#/components/schemas/EmployeeDisabilityCollection'
          x-ballerina-name: disabilities
        EarningElections:
          allOf:
          - $ref: '#/components/schemas/EmployeeEarningsCollection'
          x-ballerina-name: earningElections
        EmploymentStatuses:
          allOf:
          - $ref: '#/components/schemas/EmployeeEmploymentStatusCollection'
          x-ballerina-name: employmentStatuses
        NewHireApproved:
          type: boolean
          x-ballerina-name: newHireApproved
        EmploymentAgreements:
          allOf:
          - $ref: '#/components/schemas/EmployeeEmploymentAgreementCollection'
          x-ballerina-name: employmentAgreements
        ClockDeviceGroups:
          allOf:
          - $ref: '#/components/schemas/EmployeeClockDeviceGroupCollection'
          x-ballerina-name: clockDeviceGroups
        WorkAssignments:
          allOf:
          - $ref: '#/components/schemas/EmployeeWorkAssignmentCollection'
          x-ballerina-name: workAssignments
        PayPeriodInformation:
          allOf:
          - $ref: '#/components/schemas/PayPeriodInformationCollection'
          x-ballerina-name: payPeriodInformation
        DateOfDeath:
          type: string
          format: date-time
          x-ballerina-name: dateOfDeath
        NewHireApprovedBy:
          type: string
          x-ballerina-name: newHireApprovedBy
        IRLTaxRPNInfo:
          allOf:
          - $ref: '#/components/schemas/EmployeeIRLTaxRPNCollection'
          x-ballerina-name: iRLTaxRPNInfo
        FirstTimeAccessVerificationAttempts:
          type: integer
          format: int32
          x-ballerina-name: firstTimeAccessVerificationAttempts
        EmployeeUKIrregularPaymentDetails:
          allOf:
          - $ref: '#/components/schemas/EmployeeUKIrregularPaymentDetailsCollection'
          x-ballerina-name: employeeUKIrregularPaymentDetails
        CommonName:
          type: string
          x-ballerina-name: commonName
        IRLTaxPAYEExclusionInfo:
          allOf:
          - $ref: '#/components/schemas/EmployeeIRLTaxPAYEExclusionCollection'
          x-ballerina-name: iRLTaxPAYEExclusionInfo
        DEUTaxSocialInsurance:
          allOf:
          - $ref: '#/components/schemas/EmployeeDEUTaxSocialInsuranceCollection'
          x-ballerina-name: dEUTaxSocialInsurance
        EmployeeBadge:
          allOf:
          - $ref: '#/components/schemas/EmployeeBadge'
          x-ballerina-name: employeeBadge
        DEUEmployeeWageTax:
          allOf:
          - $ref: '#/components/schemas/DEUEmployeeWageTaxCollection'
          x-ballerina-name: dEUEmployeeWageTax
        TerminationDate:
          type: string
          format: date-time
          x-ballerina-name: terminationDate
        FirstName:
          type: string
          x-ballerina-name: firstName
        EmployeePayrollTaxes:
          allOf:
          - $ref: '#/components/schemas/EmployeePayrollTaxCollection'
          x-ballerina-name: employeePayrollTaxes
        Nationality:
          type: string
          x-ballerina-name: nationality
        SecondLastName:
          type: string
          x-ballerina-name: secondLastName
        TaxExempt:
          type: boolean
          x-ballerina-name: taxExempt
        RequiresExitInterview:
          type: boolean
          x-ballerina-name: requiresExitInterview
        Contacts:
          allOf:
          - $ref: '#/components/schemas/PersonContactCollection'
          x-ballerina-name: contacts
        HomePhone:
          type: string
          x-ballerina-name: homePhone
        EligibleForOnDemandPay:
          type: boolean
          x-ballerina-name: eligibleForOnDemandPay
        Badges:
          allOf:
          - $ref: '#/components/schemas/EmployeeBadgeCollection'
          x-ballerina-name: badges
        SSOAccounts:
          allOf:
          - $ref: '#/components/schemas/AppUserSSOCollection'
          x-ballerina-name: sSOAccounts
        USStateTaxes:
          allOf:
          - $ref: '#/components/schemas/EmployeeUSStateTaxCollection'
          x-ballerina-name: uSStateTaxes
        ConfidentialIdentification:
          allOf:
          - $ref: '#/components/schemas/EmployeeConfidentialIdentificationCollection'
          x-ballerina-name: confidentialIdentification
        HRPolicies:
          allOf:
          - $ref: '#/components/schemas/EmployeeHRPolicyCollection'
          x-ballerina-name: hRPolicies
        PayrollKey:
          type: string
          x-ballerina-name: payrollKey
        CompensationSummary:
          allOf:
          - $ref: '#/components/schemas/EmployeeCompensationCollection'
          x-ballerina-name: compensationSummary
        USFederalTaxes:
          allOf:
          - $ref: '#/components/schemas/EmployeeUSFederalTaxCollection'
          x-ballerina-name: uSFederalTaxes
        TerminationNoticeDate:
          type: string
          format: date-time
          x-ballerina-name: terminationNoticeDate
        WorkContracts:
          allOf:
          - $ref: '#/components/schemas/EmployeeWorkContractCollection'
          x-ballerina-name: workContracts
        HomeOrganization:
          allOf:
          - $ref: '#/components/schemas/Location'
          x-ballerina-name: homeOrganization
        AUSSuperannuationRules:
          allOf:
          - $ref: '#/components/schemas/EmployeeAUSSuperannuationRulesCollection'
          x-ballerina-name: aUSSuperannuationRules
        SendFirstTimeAccessEmail:
          type: boolean
          x-ballerina-name: sendFirstTimeAccessEmail
        StartDate:
          type: string
          format: date-time
          x-ballerina-name: startDate
        GlobalProperties:
          allOf:
          - $ref: '#/components/schemas/EmployeeGlobalPropertyValueCollection'
          x-ballerina-name: globalProperties
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        NewXRefCode:
          type: string
          x-ballerina-name: newXRefCode
        Culture:
          allOf:
          - $ref: '#/components/schemas/Culture'
          x-ballerina-name: culture
        EmployeeShortTimeWork:
          allOf:
          - $ref: '#/components/schemas/EmployeeShortTimeWorkCollection'
          x-ballerina-name: employeeShortTimeWork
        EmploymentTypes:
          allOf:
          - $ref: '#/components/schemas/EmployeeEmploymentTypeCollection'
          x-ballerina-name: employmentTypes
        VolunteerLists:
          allOf:
          - $ref: '#/components/schemas/EmployeeVolunteerListCollection'
          x-ballerina-name: volunteerLists
        UKNIDetails:
          allOf:
          - $ref: '#/components/schemas/EmployeeUKNIDetailsCollection'
          x-ballerina-name: uKNIDetails
        UKPostgraduateLoan:
          allOf:
          - $ref: '#/components/schemas/EmployeeUKPostgraduateLoanCollection'
          x-ballerina-name: uKPostgraduateLoan
        GenderIdentity:
          allOf:
          - $ref: '#/components/schemas/GenderIdentity'
          x-ballerina-name: genderIdentity
        ContinuousEmploymentStartDate:
          type: string
          format: date-time
          x-ballerina-name: continuousEmploymentStartDate
        FederatedId:
          type: string
          x-ballerina-name: federatedId
        NameAffixAtBirth:
          allOf:
          - $ref: '#/components/schemas/NameAffix'
          x-ballerina-name: nameAffixAtBirth
        EmployeeProperties:
          allOf:
          - $ref: '#/components/schemas/EmployeePropertyValueCollection'
          x-ballerina-name: employeeProperties
        OnboardingPolicies:
          allOf:
          - $ref: '#/components/schemas/EmployeeOnboardingPolicyCollection'
          x-ballerina-name: onboardingPolicies
        IsAboriginal:
          type: string
          x-ballerina-name: isAboriginal
        EmployeeLatestUpdatedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: employeeLatestUpdatedTimestamp
        OrgUnitInfos:
          allOf:
          - $ref: '#/components/schemas/EmployeeOrgUnitInfoCollection'
          x-ballerina-name: orgUnitInfos
        NameAffix:
          allOf:
          - $ref: '#/components/schemas/NameAffix'
          x-ballerina-name: nameAffix
        LSLEligibilityDate:
          type: string
          format: date-time
          x-ballerina-name: lSLEligibilityDate
        EmployeeCertifications:
          allOf:
          - $ref: '#/components/schemas/LMSEmployeeCertificationCollection'
          x-ballerina-name: employeeCertifications
        LastNamePrefix:
          allOf:
          - $ref: '#/components/schemas/LastNamePrefix'
          x-ballerina-name: lastNamePrefix
        BioExempt:
          type: boolean
          x-ballerina-name: bioExempt
        COBRANotificationSentDate:
          type: string
          format: date-time
          x-ballerina-name: cOBRANotificationSentDate
        LastName:
          type: string
          x-ballerina-name: lastName
        BirthDate:
          type: string
          format: date-time
          x-ballerina-name: birthDate
        RetirementRequestDate:
          type: string
          format: date-time
          x-ballerina-name: retirementRequestDate
        MaidenName:
          type: string
          x-ballerina-name: maidenName
        DirectDeposits:
          allOf:
          - $ref: '#/components/schemas/EmployeeDirectDepositCollection'
          x-ballerina-name: directDeposits
        IRLTaxPRSIInfo:
          allOf:
          - $ref: '#/components/schemas/EmployeeIRLTaxPRSICollection'
          x-ballerina-name: iRLTaxPRSIInfo
        ManagedEmployees:
          allOf:
          - $ref: '#/components/schemas/EmployeeWorkAssignmentManagerCollection'
          x-ballerina-name: managedEmployees
        PerformanceRatings:
          allOf:
          - $ref: '#/components/schemas/EmployeePerformanceRatingCollection'
          x-ballerina-name: performanceRatings
        TaxpayerId:
          type: string
          x-ballerina-name: taxpayerId
        Courses:
          allOf:
          - $ref: '#/components/schemas/EmployeeCourseCollection'
          x-ballerina-name: courses
        CANTaxStatuses:
          allOf:
          - $ref: '#/components/schemas/EmployeeCANTaxStatusCollection'
          x-ballerina-name: cANTaxStatuses
        LastNamePrefixAtBirth:
          allOf:
          - $ref: '#/components/schemas/LastNamePrefix'
          x-ballerina-name: lastNamePrefixAtBirth
        PhotoExempt:
          type: boolean
          x-ballerina-name: photoExempt
        AUSSuperannuation:
          allOf:
          - $ref: '#/components/schemas/EmployeeAUSSuperannuationCollection'
          x-ballerina-name: aUSSuperannuation
        EligibleForRehire:
          type: string
          x-ballerina-name: eligibleForRehire
        IsVisibleMinority:
          type: string
          x-ballerina-name: isVisibleMinority
        Skills:
          allOf:
          - $ref: '#/components/schemas/EmployeeSkillCollection'
          x-ballerina-name: skills
        AUSFederalTaxes:
          allOf:
          - $ref: '#/components/schemas/EmployeeAUSFederalTaxCollection'
          x-ballerina-name: aUSFederalTaxes
        AvatarUri:
          type: string
          x-ballerina-name: avatarUri
        LaborDefaults:
          allOf:
          - $ref: '#/components/schemas/EmployeeDefaultLaborCollection'
          x-ballerina-name: laborDefaults
        ChecksumTimestamp:
          type: string
          format: date-time
          x-ballerina-name: checksumTimestamp
        DisplayName:
          type: string
          x-ballerina-name: displayName
        PayGradeRates:
          allOf:
          - $ref: '#/components/schemas/EmployeePayGradeRateCollection'
          x-ballerina-name: payGradeRates
        EligibleForDFWalletPayCard:
          type: boolean
          x-ballerina-name: eligibleForDFWalletPayCard
        ExportDate:
          type: string
          format: date-time
          x-ballerina-name: exportDate
        SocialSecurityNumber:
          type: string
          x-ballerina-name: socialSecurityNumber
        OriginalHireDate:
          type: string
          format: date-time
          x-ballerina-name: originalHireDate
        LoginId:
          type: string
          x-ballerina-name: loginId
        IRLTaxEWSSInfo:
          allOf:
          - $ref: '#/components/schemas/EmployeeIRLTaxEWSSCollection'
          x-ballerina-name: iRLTaxEWSSInfo
        EmployeeNumber:
          type: string
          x-ballerina-name: employeeNumber
        Ethnicities:
          allOf:
          - $ref: '#/components/schemas/EmployeeEthnicityCollection'
          x-ballerina-name: ethnicities
        Title:
          type: string
          x-ballerina-name: title
        SSNExpiryDate:
          type: string
          format: date-time
          x-ballerina-name: sSNExpiryDate
        CANStateTaxes:
          allOf:
          - $ref: '#/components/schemas/EmployeeCANStateTaxCollection'
          x-ballerina-name: cANStateTaxes
        BirthState:
          type: string
          x-ballerina-name: birthState
        SchoolYear:
          allOf:
          - $ref: '#/components/schemas/SchoolYear'
          x-ballerina-name: schoolYear
        MiddleName:
          type: string
          x-ballerina-name: middleName
        BirthCountry:
          type: string
          x-ballerina-name: birthCountry
        VeteranStatuses:
          allOf:
          - $ref: '#/components/schemas/EmployeeVeteransStatusCollection'
          x-ballerina-name: veteranStatuses
        USTaxStatuses:
          allOf:
          - $ref: '#/components/schemas/EmployeeUSTaxStatusCollection'
          x-ballerina-name: uSTaxStatuses
        EmployeePayrollTaxParameters:
          allOf:
          - $ref: '#/components/schemas/EmployeePayrollTaxParameterCollection'
          x-ballerina-name: employeePayrollTaxParameters
        UnknownBirthDate:
          type: boolean
          x-ballerina-name: unknownBirthDate
        UKTaxDetails:
          allOf:
          - $ref: '#/components/schemas/EmployeeUKTaxDetailsCollection'
          x-ballerina-name: uKTaxDetails
        PreferredLastName:
          type: string
          x-ballerina-name: preferredLastName
        PPACAOverrideDate:
          type: string
          format: date-time
          x-ballerina-name: pPACAOverrideDate
        CitizenshipType:
          allOf:
          - $ref: '#/components/schemas/CitizenshipType'
          x-ballerina-name: citizenshipType
        HealthWellnessDetails:
          allOf:
          - $ref: '#/components/schemas/EmployeeHealthWellnessCollection'
          x-ballerina-name: healthWellnessDetails
        HRIncidents:
          allOf:
          - $ref: '#/components/schemas/EmployeeHRIncidentCollection'
          x-ballerina-name: hRIncidents
        EmergencyContacts:
          allOf:
          - $ref: '#/components/schemas/EmergencyContactCollection'
          x-ballerina-name: emergencyContacts
        FirstTimeAccessEmailSentCount:
          type: integer
          format: int32
          x-ballerina-name: firstTimeAccessEmailSentCount
        BirthCity:
          type: string
          x-ballerina-name: birthCity
        LastPayrollNewHireExportDate:
          type: string
          format: date-time
          x-ballerina-name: lastPayrollNewHireExportDate
        UserAccount:
          allOf:
          - $ref: '#/components/schemas/AppUser'
          x-ballerina-name: userAccount
        ProfessionalTitle:
          type: string
          x-ballerina-name: professionalTitle
        UnionMemberships:
          allOf:
          - $ref: '#/components/schemas/EmployeeUnionCollection'
          x-ballerina-name: unionMemberships
    BusinessUnit:
      type: object
      properties:
        EffectiveEnd:
          type: string
          format: date-time
          x-ballerina-name: effectiveEnd
        BusinessUnitParents:
          type: array
          items:
            $ref: '#/components/schemas/BusinessUnitParentAssignment'
          x-ballerina-name: businessUnitParents
        LedgerCode:
          type: string
          x-ballerina-name: ledgerCode
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        EffectiveStart:
          type: string
          format: date-time
          x-ballerina-name: effectiveStart
        BusinessUnitGlobalId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
          x-ballerina-name: businessUnitGlobalId
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    JobSOC:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    EmployeeBalanceTransactionPatchResponse:
      type: object
      properties:
        EmployeeBalanceTransactionXRefCode:
          type: string
          x-ballerina-name: employeeBalanceTransactionXRefCode
    PayloadContactInformationType:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          allOf:
          - $ref: '#/components/schemas/ContactInformationType'
          x-ballerina-name: data
    EmployeeEmploymentTypeCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeEmploymentType'
          x-ballerina-name: items
    EmployeeUKIrregularPaymentDetailsCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeUKIrregularPaymentDetails'
          x-ballerina-name: items
    EmployeeHighlyCompensatedEmployeeIndicator:
      type: object
      properties:
        EffectiveEnd:
          type: string
          format: date-time
          x-ballerina-name: effectiveEnd
        EffectiveStart:
          type: string
          format: date-time
          x-ballerina-name: effectiveStart
        IsHCE:
          type: boolean
          x-ballerina-name: isHCE
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    JobPostingResponseModel:
      type: object
      properties:
        JobRequisitionId:
          type: string
          x-ballerina-name: jobRequisitionId
        JobLocation:
          type: string
          x-ballerina-name: jobLocation
        JobUrl:
          type: string
          x-ballerina-name: jobUrl
        JobMeta:
          type: string
          x-ballerina-name: jobMeta
        JobCompany:
          type: string
          x-ballerina-name: jobCompany
        JobTitle:
          type: string
          x-ballerina-name: jobTitle
        JobId:
          type: string
          x-ballerina-name: jobId
    EmployeeIRLTaxPRSICollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeIRLTaxPRSI'
          x-ballerina-name: items
    EmployeeManagerCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeManager'
          x-ballerina-name: items
    PayrollElection:
      type: object
      properties:
        OrgUnitXRefCode:
          type: string
          x-ballerina-name: orgUnitXRefCode
        ArrearMultipleLimitOption:
          type: number
          format: double
          x-ballerina-name: arrearMultipleLimitOption
        ExternalXrefCode:
          type: string
          x-ballerina-name: externalXrefCode
        DefaultPayee:
          type: string
          x-ballerina-name: defaultPayee
        IsNew:
          type: boolean
          x-ballerina-name: isNew
        ScheduleXRefCode:
          type: string
          x-ballerina-name: scheduleXRefCode
        Source:
          type: string
          x-ballerina-name: source
        EmployeePayeeEarnings:
          type: array
          items:
            $ref: '#/components/schemas/PRPayeeEarning'
          x-ballerina-name: employeePayeeEarnings
        EffectiveEnd:
          type: string
          format: date-time
          x-ballerina-name: effectiveEnd
        PayeePayableTo:
          type: string
          x-ballerina-name: payeePayableTo
        IsOptOut:
          type: integer
          format: int32
          x-ballerina-name: isOptOut
        EmployeeEarningPayeeParameters:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeEarningPayeeParameter'
          x-ballerina-name: employeeEarningPayeeParameters
        EffectiveStart:
          type: string
          format: date-time
          x-ballerina-name: effectiveStart
        EmployeePayeeDeductions:
          type: array
          items:
            $ref: '#/components/schemas/PRPayeeDeduction'
          x-ballerina-name: employeePayeeDeductions
        IsCreatedByBenefits:
          type: boolean
          x-ballerina-name: isCreatedByBenefits
        EmployeeEarningLimits:
          type: array
          items:
            $ref: '#/components/schemas/PayrollEmployeeEarningLimit'
          x-ballerina-name: employeeEarningLimits
        IsBlocked:
          type: boolean
          x-ballerina-name: isBlocked
        ElectionXrefCode:
          type: string
          x-ballerina-name: electionXrefCode
        TypeCode:
          type: string
          x-ballerina-name: typeCode
        EmployeeDeductionParams:
          type: array
          items:
            $ref: '#/components/schemas/PayrollEmployeeDeductionParameter'
          x-ballerina-name: employeeDeductionParams
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
        EmployeeEarningParams:
          type: array
          items:
            $ref: '#/components/schemas/PayrollEmployeeEarningParameter'
          x-ballerina-name: employeeEarningParams
        Code:
          type: string
          x-ballerina-name: code
        EmployeeDeductionPayeeParameters:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeDeductionPayeeParameter'
          x-ballerina-name: employeeDeductionPayeeParameters
        DefaultPayeeXRefCode:
          type: string
          x-ballerina-name: defaultPayeeXRefCode
        Type:
          type: string
          x-ballerina-name: type
        ContinuePaymentOnStatutoryPay:
          type: boolean
          x-ballerina-name: continuePaymentOnStatutoryPay
        SourceTypeXRefCode:
          type: string
          x-ballerina-name: sourceTypeXRefCode
        Schedule:
          type: string
          x-ballerina-name: schedule
        CreatedDate:
          type: string
          format: date-time
          x-ballerina-name: createdDate
        EarningDeductionXRefCode:
          type: string
          x-ballerina-name: earningDeductionXRefCode
        PensionTracingNumber:
          type: string
          x-ballerina-name: pensionTracingNumber
        EmployeeDeductionLimits:
          type: array
          items:
            $ref: '#/components/schemas/PayrollEmployeeDeductionLimit'
          x-ballerina-name: employeeDeductionLimits
        DeptJobXRefCode:
          type: string
          x-ballerina-name: deptJobXRefCode
    EmployeeGLSplitSetDetailLaborMetricCodes:
      type: object
      properties:
        LaborMetricsTypeXRefCode:
          type: string
          x-ballerina-name: laborMetricsTypeXRefCode
        LaborMetricsTypeName:
          type: string
          x-ballerina-name: laborMetricsTypeName
        LaborMetricsCodeName:
          type: string
          x-ballerina-name: laborMetricsCodeName
        LaborMetricsCodeXRefCode:
          type: string
          x-ballerina-name: laborMetricsCodeXRefCode
    PayloadLaborMetricCodes:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          allOf:
          - $ref: '#/components/schemas/LaborMetricCodes'
          x-ballerina-name: data
    PayloadIEnumerableEmployeeUSStateTax:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeUSStateTax'
          x-ballerina-name: data
    DeductionType:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    LaborCostTotalResult:
      type: object
      properties:
        LaborHours:
          type: number
          format: double
          x-ballerina-name: laborHours
        LaborCost:
          type: number
          format: double
          x-ballerina-name: laborCost
    SafetyHealthType:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    BackgroundScreeningProviderStatuses:
      type: object
      properties:
        AdjudicationStatuses:
          type: array
          items:
            type: string
          x-ballerina-name: adjudicationStatuses
        OrderStatuses:
          type: array
          items:
            type: string
          x-ballerina-name: orderStatuses
        ProviderReference:
          type: string
          x-ballerina-name: providerReference
        ResultStatuses:
          type: array
          items:
            type: string
          x-ballerina-name: resultStatuses
    PayloadIEnumerableEmployeeCANStateTax:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeCANStateTax'
          x-ballerina-name: data
    EmployeeEarningParameter:
      type: object
      properties:
        Value:
          type: number
          format: double
          x-ballerina-name: value
        EarningParameter:
          allOf:
          - $ref: '#/components/schemas/EarningParameter'
          x-ballerina-name: earningParameter
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
        PayGroupValue:
          type: number
          format: double
          x-ballerina-name: payGroupValue
    WithholdingVariationAmountType:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    PayloadIEnumerableAnalyticsReportDefinitions:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/AnalyticsReportDefinitions'
          x-ballerina-name: data
    ScheduleChangePolicy:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    PayloadLaborMetricType:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          allOf:
          - $ref: '#/components/schemas/LaborMetricType'
          x-ballerina-name: data
    EmploymentAgreementDuration:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    AppUserSSOCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeSSOAccount'
          x-ballerina-name: items
    EmployeeVeteransStatus:
      type: object
      properties:
        EffectiveEnd:
          type: string
          format: date-time
          x-ballerina-name: effectiveEnd
        EffectiveStart:
          type: string
          format: date-time
          x-ballerina-name: effectiveStart
        VeteransStatus:
          allOf:
          - $ref: '#/components/schemas/DFVeteransStatus'
          x-ballerina-name: veteransStatus
        IsVevraa:
          type: boolean
          x-ballerina-name: isVevraa
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    TipTypeGroup:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    EmploymentTypeConfig:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    FileDetails:
      type: object
      properties:
        ContentType:
          type: string
          x-ballerina-name: contentType
        FileName:
          type: string
          x-ballerina-name: fileName
        Data:
          type: string
          x-ballerina-name: data
    PayloadIEnumerableEmployeeSchedule:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeSchedule'
          x-ballerina-name: data
    EmployeeWorkAssignmentManagerCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeWorkAssignmentManager'
          x-ballerina-name: items
    CandidateApplicationStatusUpdatesPaginationModel:
      type: object
      properties:
        ApplicationStatusUpdates:
          type: array
          items:
            $ref: '#/components/schemas/CandidateApplicationStatusUpdatesModel'
          x-ballerina-name: applicationStatusUpdates
        HasUnretrievedStatuses:
          type: string
          x-ballerina-name: hasUnretrievedStatuses
    EarningCountry:
      type: object
      properties:
        EarningTypeXRefCode:
          type: string
          x-ballerina-name: earningTypeXRefCode
        CountryName:
          type: string
          x-ballerina-name: countryName
        TaxComplianceName:
          type: string
          x-ballerina-name: taxComplianceName
        EarningTypeName:
          type: string
          x-ballerina-name: earningTypeName
        TaxComplianceXRefCode:
          type: string
          x-ballerina-name: taxComplianceXRefCode
        CountryCode:
          type: string
          x-ballerina-name: countryCode
    PRGLSplitSetCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/PRGLSplitSet'
          x-ballerina-name: items
    AuthorizationAssignment:
      type: object
      properties:
        AuthorizedPersonnelXrefCode:
          type: string
          x-ballerina-name: authorizedPersonnelXrefCode
        EffectiveEnd:
          type: string
          format: date-time
          x-ballerina-name: effectiveEnd
        AuthorityType:
          allOf:
          - $ref: '#/components/schemas/AuthorityType'
          x-ballerina-name: authorityType
        AuthorizedPersonnelFirstName:
          type: string
          x-ballerina-name: authorizedPersonnelFirstName
        AuthorizedPersonnelLastName:
          type: string
          x-ballerina-name: authorizedPersonnelLastName
        AuthorizedPersonnelMiddleName:
          type: string
          x-ballerina-name: authorizedPersonnelMiddleName
        EffectiveStart:
          type: string
          format: date-time
          x-ballerina-name: effectiveStart
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    EmployeeDeductionLimit:
      type: object
      properties:
        LimitPercent:
          type: number
          format: double
          x-ballerina-name: limitPercent
        DeductionLimit:
          allOf:
          - $ref: '#/components/schemas/DeductionLimit'
          x-ballerina-name: deductionLimit
        PayGroupLimitPercent:
          type: number
          format: double
          x-ballerina-name: payGroupLimitPercent
        LimitAmount:
          type: number
          format: double
          x-ballerina-name: limitAmount
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
        PayGroupLimitAmount:
          type: number
          format: double
          x-ballerina-name: payGroupLimitAmount
    Awards:
      type: object
      properties:
        _Total:
          type: integer
          format: int32
          x-ballerina-name: total
        Values:
          type: array
          items:
            $ref: '#/components/schemas/AwardDetails'
          x-ballerina-name: values
    EarningPayeeEarningLimit:
      type: object
      properties:
        LimitPercent:
          type: number
          format: double
          x-ballerina-name: limitPercent
        EarningLimitXRefCode:
          type: string
          x-ballerina-name: earningLimitXRefCode
        LimitAmount:
          type: number
          format: double
          x-ballerina-name: limitAmount
        LimitTypeXRefCode:
          type: string
          x-ballerina-name: limitTypeXRefCode
        LimitTypeName:
          type: string
          x-ballerina-name: limitTypeName
    PayloadIEnumerableEmployeeAUSFederalTax:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeAUSFederalTax'
          x-ballerina-name: data
    PayloadIEnumerableEmployeeHRIncident:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeHRIncident'
          x-ballerina-name: data
    WorkContract:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    EmployeeAUSSuperannuationRulesCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeAUSSuperannuationRules'
          x-ballerina-name: items
    MealBreaks:
      type: object
      properties:
        TimeStartRaw:
          type: string
          format: date-time
          x-ballerina-name: timeStartRaw
        TimeEndRaw:
          type: string
          format: date-time
          x-ballerina-name: timeEndRaw
        Type:
          type: string
          x-ballerina-name: type
        StartExceptionCode:
          type: string
          x-ballerina-name: startExceptionCode
        IsAutoInjected:
          type: boolean
          x-ballerina-name: isAutoInjected
        TimeEnd:
          type: string
          format: date-time
          x-ballerina-name: timeEnd
        EndExceptionCode:
          type: string
          x-ballerina-name: endExceptionCode
        LastModifiedTimestampUtc:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestampUtc
        NetHours:
          type: number
          format: double
          x-ballerina-name: netHours
        TimeStart:
          type: string
          format: date-time
          x-ballerina-name: timeStart
        PunchXRefCode:
          type: string
          x-ballerina-name: punchXRefCode
    CarrierFeeds:
      type: object
      properties:
        Header:
          allOf:
          - $ref: '#/components/schemas/BenefitsDFLinkExportCarrierInfo'
          x-ballerina-name: header
        EmployeeRecords:
          type: array
          items:
            $ref: '#/components/schemas/BenefitsDFLinkExportRecord'
          x-ballerina-name: employeeRecords
    PayloadIEnumerableEmployeeCANEmploymentInsuranceRate:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeCANEmploymentInsuranceRate'
          x-ballerina-name: data
    PayloadIEnumerableEmploymentStatus:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmploymentStatus'
          x-ballerina-name: data
    DeductionCountry:
      type: object
      properties:
        CountryName:
          type: string
          x-ballerina-name: countryName
        TaxTypeCode:
          type: string
          x-ballerina-name: taxTypeCode
        TaxComplianceName:
          type: string
          x-ballerina-name: taxComplianceName
        TaxComplianceXRefCode:
          type: string
          x-ballerina-name: taxComplianceXRefCode
        TaxTypeName:
          type: string
          x-ballerina-name: taxTypeName
        CountryCode:
          type: string
          x-ballerina-name: countryCode
    PayloadIEnumerableEmployeeAUSSuperannuationRules:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeAUSSuperannuationRules'
          x-ballerina-name: data
    HRIncidentType:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    EmployeeBalanceTransactionPostResponse:
      type: object
      properties:
        EmployeeBalanceTransactionXRefCode:
          type: string
          x-ballerina-name: employeeBalanceTransactionXRefCode
    Validation:
      type: object
      properties:
        Errors:
          type: array
          items:
            type: string
          x-ballerina-name: errors
        Warnings:
          type: array
          items:
            type: string
          x-ballerina-name: warnings
    PayloadIEnumerableEmployeeIRLTaxPAYEExclusion:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeIRLTaxPAYEExclusion'
          x-ballerina-name: data
    PRGLSplitSetDetail:
      type: object
      properties:
        PRGLSplitSetDetailMetricCodes:
          allOf:
          - $ref: '#/components/schemas/PRGLSplitSetDetailMetricCodeCollection'
          x-ballerina-name: pRGLSplitSetDetailMetricCodes
        IsPrimary:
          type: boolean
          x-ballerina-name: isPrimary
        LaborPercentage:
          type: number
          format: double
          x-ballerina-name: laborPercentage
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    DataEntryDeleteModel:
      type: object
      properties:
        DataEntryXRefCode:
          type: integer
          format: int64
          x-ballerina-name: dataEntryXRefCode
    ProcessResult:
      type: object
      properties:
        Context:
          type: string
          x-ballerina-name: context
        Message:
          type: string
          x-ballerina-name: message
        Level:
          type: string
          x-ballerina-name: level
        Code:
          type: string
          x-ballerina-name: code
    BenefitsDFLinkExportCarrierInfo:
      type: object
      properties:
        CarrierName:
          type: string
          x-ballerina-name: carrierName
        CTCReceiverId:
          type: string
          x-ballerina-name: cTCReceiverId
        EmployerFEINNumber:
          type: string
          x-ballerina-name: employerFEINNumber
        EmployerDivisionNumber:
          type: string
          x-ballerina-name: employerDivisionNumber
        CreateDate:
          type: string
          format: date-time
          x-ballerina-name: createDate
        FileFormatMajorVersion:
          type: string
          x-ballerina-name: fileFormatMajorVersion
        RecordType:
          type: string
          x-ballerina-name: recordType
        MasterPolicyNumber:
          type: string
          x-ballerina-name: masterPolicyNumber
        ClientId:
          type: string
          x-ballerina-name: clientId
        CarrierFEINNumber:
          type: string
          x-ballerina-name: carrierFEINNumber
        CorrelationId:
          type: string
          x-ballerina-name: correlationId
        FileFormatMinorVersion:
          type: string
          x-ballerina-name: fileFormatMinorVersion
        EmployerName:
          type: string
          x-ballerina-name: employerName
        PlanStartDate:
          type: string
          format: date-time
          x-ballerina-name: planStartDate
    EmployeeUSTaxStatus:
      type: object
      properties:
        EffectiveEnd:
          type: string
          format: date-time
          x-ballerina-name: effectiveEnd
        StateCode:
          type: string
          x-ballerina-name: stateCode
        EffectiveStart:
          type: string
          format: date-time
          x-ballerina-name: effectiveStart
        TaxPropertyCollection:
          allOf:
          - $ref: '#/components/schemas/TaxPropertyCollection'
          x-ballerina-name: taxPropertyCollection
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    State:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
        Name:
          type: string
          x-ballerina-name: name
    PayGroupCalendarDetails:
      type: object
      properties:
        PayrollCommitted:
          type: boolean
          x-ballerina-name: payrollCommitted
        SupervisorDate:
          type: string
          x-ballerina-name: supervisorDate
        ChecklistClosedBy:
          type: integer
          format: int32
          x-ballerina-name: checklistClosedBy
        TimeCollectionEndDate:
          type: string
          x-ballerina-name: timeCollectionEndDate
        GLAccrualPercent:
          type: number
          format: double
          x-ballerina-name: gLAccrualPercent
        ApproveByDate:
          type: string
          format: date-time
          x-ballerina-name: approveByDate
        PeriodEndDate:
          type: string
          x-ballerina-name: periodEndDate
        Locked:
          type: boolean
          x-ballerina-name: locked
        LockedBy:
          type: integer
          format: int32
          x-ballerina-name: lockedBy
        ImpoundBy:
          type: string
          x-ballerina-name: impoundBy
        PayDate:
          type: string
          x-ballerina-name: payDate
        ChecklistClosed:
          type: boolean
          x-ballerina-name: checklistClosed
        FuturePunchesEnabled:
          type: boolean
          x-ballerina-name: futurePunchesEnabled
        Transmitted:
          type: boolean
          x-ballerina-name: transmitted
        TransmittedBy:
          type: integer
          format: int32
          x-ballerina-name: transmittedBy
        AutoLockDate:
          type: string
          x-ballerina-name: autoLockDate
        ArrearsStart:
          type: string
          x-ballerina-name: arrearsStart
        ArrearsEnd:
          type: string
          x-ballerina-name: arrearsEnd
        ApprovedDate:
          type: string
          x-ballerina-name: approvedDate
        PayPeriod:
          type: string
          x-ballerina-name: payPeriod
        OffsetPayPeriodEndDate:
          type: string
          x-ballerina-name: offsetPayPeriodEndDate
        Approved:
          type: boolean
          x-ballerina-name: approved
        LedgerCode2:
          type: string
          x-ballerina-name: ledgerCode2
        TimeCollectionStartDate:
          type: string
          x-ballerina-name: timeCollectionStartDate
        OffsetPayPeriodStartDate:
          type: string
          x-ballerina-name: offsetPayPeriodStartDate
        ContractPayDate:
          type: string
          x-ballerina-name: contractPayDate
        DataGateClose:
          type: string
          format: date-time
          x-ballerina-name: dataGateClose
        PeriodStartDate:
          type: string
          x-ballerina-name: periodStartDate
        LedgerCode1:
          type: string
          x-ballerina-name: ledgerCode1
        ApprovedBy:
          type: integer
          format: int32
          x-ballerina-name: approvedBy
        Closed:
          type: boolean
          x-ballerina-name: closed
        TransmittedDate:
          type: string
          x-ballerina-name: transmittedDate
        TransmitByDate:
          type: string
          format: date-time
          x-ballerina-name: transmitByDate
        LockDate:
          type: string
          x-ballerina-name: lockDate
        CommitByDate:
          type: string
          format: date-time
          x-ballerina-name: commitByDate
        PayPeriodSuffix:
          type: string
          x-ballerina-name: payPeriodSuffix
        ClosedDate:
          type: string
          x-ballerina-name: closedDate
        DataGateOpen:
          type: string
          format: date-time
          x-ballerina-name: dataGateOpen
        ChecklistClosedDate:
          type: string
          x-ballerina-name: checklistClosedDate
        ClosedBy:
          type: integer
          format: int32
          x-ballerina-name: closedBy
    DocMgmtFileProcessedResponse:
      type: object
      properties:
        DocumentGUID:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
          x-ballerina-name: documentGUID
        Message:
          type: string
          x-ballerina-name: message
        UploadStatus:
          type: string
          x-ballerina-name: uploadStatus
        Index:
          type: integer
          format: int32
          x-ballerina-name: index
    EmployeeUKPostgraduateLoanCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeUKPostgraduateLoan'
          x-ballerina-name: items
    EmployeePerformanceRating:
      type: object
      properties:
        ReviewPeriodEndDate:
          type: string
          format: date-time
          x-ballerina-name: reviewPeriodEndDate
        PerformanceRatingScale:
          allOf:
          - $ref: '#/components/schemas/PFRatingScale'
          x-ballerina-name: performanceRatingScale
        ReviewDate:
          type: string
          format: date-time
          x-ballerina-name: reviewDate
        Comments:
          type: string
          x-ballerina-name: comments
        RatingScore:
          type: number
          format: double
          x-ballerina-name: ratingScore
        NextReviewDate:
          type: string
          format: date-time
          x-ballerina-name: nextReviewDate
        PerformanceCycle:
          allOf:
          - $ref: '#/components/schemas/PerformanceCycle'
          x-ballerina-name: performanceCycle
        PerformanceRating:
          allOf:
          - $ref: '#/components/schemas/PerformanceRating'
          x-ballerina-name: performanceRating
        ReviewPeriodStartDate:
          type: string
          format: date-time
          x-ballerina-name: reviewPeriodStartDate
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
        Reviewer:
          allOf:
          - $ref: '#/components/schemas/BaseEmployeeSubset'
          x-ballerina-name: reviewer
    CertificationDetails:
      type: object
      properties:
        StartDateMonth:
          type: string
          x-ballerina-name: startDateMonth
        EndDateYear:
          type: string
          x-ballerina-name: endDateYear
        EndCurrent:
          type: boolean
          x-ballerina-name: endCurrent
        Description:
          type: string
          x-ballerina-name: description
        EndDateMonth:
          type: string
          x-ballerina-name: endDateMonth
        Title:
          type: string
          x-ballerina-name: title
        StartDateYear:
          type: string
          x-ballerina-name: startDateYear
    PayPeriodInformationCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/PayPeriodInformation'
          x-ballerina-name: items
    PayrollEmployeeEarningLimit:
      type: object
      properties:
        LimitPercent:
          type: number
          format: double
          x-ballerina-name: limitPercent
        LimitAmount:
          type: number
          format: double
          x-ballerina-name: limitAmount
        LimitTypeCodeName:
          type: string
          x-ballerina-name: limitTypeCodeName
        ShortNameFormattedPercent:
          type: string
          x-ballerina-name: shortNameFormattedPercent
        PayGroupDefaultLimitPercent:
          type: number
          format: double
          x-ballerina-name: payGroupDefaultLimitPercent
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
        PayGroupDefaultLimitAmount:
          type: number
          format: double
          x-ballerina-name: payGroupDefaultLimitAmount
        ShortNameFormattedAmount:
          type: string
          x-ballerina-name: shortNameFormattedAmount
        PREarningLimitXRefCode:
          type: string
          x-ballerina-name: pREarningLimitXRefCode
    JobFunction:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        UsableForExternalPosting:
          type: boolean
          x-ballerina-name: usableForExternalPosting
        Level:
          type: integer
          format: int32
          x-ballerina-name: level
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    BenefitsDFLinkExportContact:
      type: object
      properties:
        RecordType:
          type: string
          x-ballerina-name: recordType
        CountryCode:
          type: string
          x-ballerina-name: countryCode
        ContactInformationType:
          type: string
          x-ballerina-name: contactInformationType
        ContactInformation:
          type: string
          x-ballerina-name: contactInformation
        ContactInformationCategoryCode:
          type: integer
          format: int32
          x-ballerina-name: contactInformationCategoryCode
    PersonAddressCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/PersonAddress'
          x-ballerina-name: items
    PatentDetails:
      type: object
      properties:
        Description:
          type: string
          x-ballerina-name: description
        PatentNumber:
          type: string
          x-ballerina-name: patentNumber
        Title:
          type: string
          x-ballerina-name: title
        DateYear:
          type: string
          x-ballerina-name: dateYear
        Url:
          type: string
          x-ballerina-name: url
        DateMonth:
          type: string
          x-ballerina-name: dateMonth
    PayloadIEnumerableEmployeeGlobalPropertyValue:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeGlobalPropertyValue'
          x-ballerina-name: data
    PaginatedPayloadIEnumerableEmployeePayAdjustment:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Paging:
          allOf:
          - $ref: '#/components/schemas/Paging'
          x-ballerina-name: paging
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeePayAdjustment'
          x-ballerina-name: data
    SubordinateEntityReferences:
      type: object
      properties:
        EntityReferences:
          type: array
          items:
            type: string
          x-ballerina-name: entityReferences
    PayloadOperatingHours:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          allOf:
          - $ref: '#/components/schemas/OperatingHours'
          x-ballerina-name: data
    PayAdjCode:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    EmployeeCANTaxStatus:
      type: object
      properties:
        EffectiveEnd:
          type: string
          format: date-time
          x-ballerina-name: effectiveEnd
        EffectiveStart:
          type: string
          format: date-time
          x-ballerina-name: effectiveStart
        ProvinceCode:
          type: string
          x-ballerina-name: provinceCode
        TaxPropertyCollection:
          allOf:
          - $ref: '#/components/schemas/TaxPropertyCollection'
          x-ballerina-name: taxPropertyCollection
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    TrainingProgramCourse:
      type: object
      properties:
        EffectiveEnd:
          type: string
          format: date-time
          x-ballerina-name: effectiveEnd
        EffectiveStart:
          type: string
          format: date-time
          x-ballerina-name: effectiveStart
        Course:
          allOf:
          - $ref: '#/components/schemas/Course'
          x-ballerina-name: course
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    EmployeePayAdjustment:
      type: object
      properties:
        OrgUnitXRefCode:
          type: string
          x-ballerina-name: orgUnitXRefCode
        IsPremium:
          type: boolean
          x-ballerina-name: isPremium
        Hours:
          type: number
          format: double
          x-ballerina-name: hours
        EmployeeAuthorized:
          type: boolean
          x-ballerina-name: employeeAuthorized
        TimeEnd:
          type: string
          format: date-time
          x-ballerina-name: timeEnd
        TimeStart:
          type: string
          format: date-time
          x-ballerina-name: timeStart
        AdjustPeriodStartDate:
          type: string
          format: date-time
          x-ballerina-name: adjustPeriodStartDate
        EmployeePayAdjustXRefCode:
          type: string
          x-ballerina-name: employeePayAdjustXRefCode
        PayDate:
          type: string
          format: date-time
          x-ballerina-name: payDate
        DocketXRefCode:
          type: string
          x-ballerina-name: docketXRefCode
        EmployeeXRefCode:
          type: string
          x-ballerina-name: employeeXRefCode
        ManagerComment:
          type: string
          x-ballerina-name: managerComment
        LastModifiedTimestampUtc:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestampUtc
        DepartmentXRefCode:
          type: string
          x-ballerina-name: departmentXRefCode
        EmployeeComment:
          type: string
          x-ballerina-name: employeeComment
        IsDeleted:
          type: boolean
          x-ballerina-name: isDeleted
        JobXRefCode:
          type: string
          x-ballerina-name: jobXRefCode
        Rate:
          type: number
          format: double
          x-ballerina-name: rate
        Amount:
          type: number
          format: double
          x-ballerina-name: amount
        AdjustPeriodEndDate:
          type: string
          format: date-time
          x-ballerina-name: adjustPeriodEndDate
        PayAdjustmentCodeXRefCode:
          type: string
          x-ballerina-name: payAdjustmentCodeXRefCode
        PayCategoryXRefCode:
          type: string
          x-ballerina-name: payCategoryXRefCode
        ProjectXRefCode:
          type: string
          x-ballerina-name: projectXRefCode
        LaborMetrics:
          type: array
          items:
            $ref: '#/components/schemas/EmployeePayAdjustmentLaborMetrics'
          x-ballerina-name: laborMetrics
        ManagerAuthorized:
          type: boolean
          x-ballerina-name: managerAuthorized
        ReferenceDate:
          type: string
          format: date-time
          x-ballerina-name: referenceDate
    PayloadIEnumerablePlanTarget:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/PlanTarget'
          x-ballerina-name: data
    PayloadObject:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: object
          x-ballerina-name: data
    Report:
      type: object
      properties:
        XRefCode:
          type: string
          description: "Reference Code for the Report.\r\nThis is a unique, human\
            \ readable, code used to identify the Report"
          x-ballerina-name: xRefCode
        Rows:
          type: array
          description: "An array of Dictionary objects which contain the report data.\
            \ \r\nEach dictionary object represents a row: the key is column name\
            \ and the values is the column value for the row"
          items:
            type: object
            additionalProperties:
              type: string
          x-ballerina-name: rows
      description: This class encapsulates the report data generated during the execution
        of the report
    KpiTargetPattern:
      type: object
      properties:
        OrgUnitXRefCode:
          type: string
          x-ballerina-name: orgUnitXRefCode
        EffectiveEnd:
          type: string
          format: date-time
          x-ballerina-name: effectiveEnd
        Pattern:
          type: array
          items:
            $ref: '#/components/schemas/KpiTargetPatternDetail'
          x-ballerina-name: pattern
        PatternLength:
          type: integer
          format: int32
          x-ballerina-name: patternLength
        EffectiveStart:
          type: string
          format: date-time
          x-ballerina-name: effectiveStart
        PatternOffset:
          type: integer
          format: int32
          x-ballerina-name: patternOffset
        KpiXRefCode:
          type: string
          x-ballerina-name: kpiXRefCode
        ZoneXRefCode:
          type: string
          x-ballerina-name: zoneXRefCode
    DeductionDefinition:
      type: object
      properties:
        SystemDeduction:
          type: boolean
          x-ballerina-name: systemDeduction
        AllowPayee:
          type: boolean
          x-ballerina-name: allowPayee
        Description:
          type: string
          x-ballerina-name: description
        PayeeCategoryName:
          type: string
          x-ballerina-name: payeeCategoryName
        Countries:
          type: array
          items:
            $ref: '#/components/schemas/DeductionCountry'
          x-ballerina-name: countries
        PayeeCategoryXRefCode:
          type: string
          x-ballerina-name: payeeCategoryXRefCode
        AllowArrears:
          type: boolean
          x-ballerina-name: allowArrears
        SourceTypeName:
          type: string
          x-ballerina-name: sourceTypeName
        Name:
          type: string
          x-ballerina-name: name
        Active:
          type: boolean
          x-ballerina-name: active
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        SourceTypeXRefCode:
          type: string
          x-ballerina-name: sourceTypeXRefCode
        Payees:
          type: array
          items:
            $ref: '#/components/schemas/DeductionPayee'
          x-ballerina-name: payees
        DisplayName:
          type: string
          x-ballerina-name: displayName
        WorkersComp:
          type: boolean
          x-ballerina-name: workersComp
    SchoolYear:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    PayloadIEnumerableEmployeeRole:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeRole'
          x-ballerina-name: data
    PRGLSplitSetDetailMetricCode:
      type: object
      properties:
        LaborMetricsCode:
          allOf:
          - $ref: '#/components/schemas/LaborMetricsCode'
          x-ballerina-name: laborMetricsCode
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    EmployeeCANStateTax:
      type: object
      properties:
        AdditionalAmount:
          type: number
          format: double
          x-ballerina-name: additionalAmount
        IncomeLessThanClaim:
          type: boolean
          x-ballerina-name: incomeLessThanClaim
        LabourSponsoredFunds:
          type: number
          format: double
          x-ballerina-name: labourSponsoredFunds
        TotalClaimAmount:
          type: number
          format: double
          x-ballerina-name: totalClaimAmount
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
        EstimatedExpense:
          type: number
          format: double
          x-ballerina-name: estimatedExpense
        EffectiveEnd:
          type: string
          format: date-time
          x-ballerina-name: effectiveEnd
        AuthorizedTaxCredits:
          type: number
          format: double
          x-ballerina-name: authorizedTaxCredits
        EstimatedRemuneration:
          type: number
          format: double
          x-ballerina-name: estimatedRemuneration
        State:
          allOf:
          - $ref: '#/components/schemas/State'
          x-ballerina-name: state
        EffectiveStart:
          type: string
          format: date-time
          x-ballerina-name: effectiveStart
        MaintenanceDeduction:
          type: number
          format: double
          x-ballerina-name: maintenanceDeduction
        QuebecDevelopmentFunds:
          type: number
          format: double
          x-ballerina-name: quebecDevelopmentFunds
        HasQuebecHealthContributionExemption:
          type: boolean
          x-ballerina-name: hasQuebecHealthContributionExemption
        PrescribedAreaDeduction:
          type: number
          format: double
          x-ballerina-name: prescribedAreaDeduction
    PersonContactCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/PersonContact'
          x-ballerina-name: items
    EmployeeDirectDeposit:
      type: object
      properties:
        BankName:
          type: string
          x-ballerina-name: bankName
        IsPercentage:
          type: boolean
          x-ballerina-name: isPercentage
        RequiresPreNote:
          type: boolean
          x-ballerina-name: requiresPreNote
        IsDeleted:
          type: boolean
          x-ballerina-name: isDeleted
        IsRemainder:
          type: boolean
          x-ballerina-name: isRemainder
        NumberOfPreNoteDays:
          type: integer
          format: int32
          x-ballerina-name: numberOfPreNoteDays
        PrenoteFileRunPayDate:
          type: string
          format: date-time
          x-ballerina-name: prenoteFileRunPayDate
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
        BuildingSocietyNumber:
          type: string
          x-ballerina-name: buildingSocietyNumber
        AccountNumber:
          type: string
          x-ballerina-name: accountNumber
        EffectiveEnd:
          type: string
          format: date-time
          x-ballerina-name: effectiveEnd
        BankNumber:
          type: string
          x-ballerina-name: bankNumber
        DepositNumber:
          type: integer
          format: int32
          x-ballerina-name: depositNumber
        IsSpecialDisbursementAccount:
          type: boolean
          x-ballerina-name: isSpecialDisbursementAccount
        PayCardType:
          type: string
          x-ballerina-name: payCardType
        IsMultiSourceAccount:
          type: boolean
          x-ballerina-name: isMultiSourceAccount
        FinancialInstitution:
          allOf:
          - $ref: '#/components/schemas/FinancialInstitution'
          x-ballerina-name: financialInstitution
        EffectiveStart:
          type: string
          format: date-time
          x-ballerina-name: effectiveStart
        PayMethod:
          allOf:
          - $ref: '#/components/schemas/PayMethod'
          x-ballerina-name: payMethod
        PrenoteFileSentOn:
          type: string
          format: date-time
          x-ballerina-name: prenoteFileSentOn
        DepositValue:
          type: number
          format: double
          x-ballerina-name: depositValue
        RoutingTransitNumber:
          type: string
          x-ballerina-name: routingTransitNumber
        AccountHolder:
          type: string
          x-ballerina-name: accountHolder
    ApplicantDetails:
      type: object
      properties:
        Email:
          type: string
          x-ballerina-name: email
        FirstName:
          type: string
          x-ballerina-name: firstName
        HomePhoneNumber:
          type: string
          x-ballerina-name: homePhoneNumber
        FullName:
          type: string
          x-ballerina-name: fullName
        AdditionalDocuments:
          type: array
          items:
            $ref: '#/components/schemas/FileDetails'
          x-ballerina-name: additionalDocuments
        PhoneNumber:
          type: string
          x-ballerina-name: phoneNumber
        LastName:
          type: string
          x-ballerina-name: lastName
        CoverLetter:
          type: string
          x-ballerina-name: coverLetter
        UseEmailForLogin:
          type: boolean
          x-ballerina-name: useEmailForLogin
        Resume:
          allOf:
          - $ref: '#/components/schemas/ApplicantResume'
          x-ballerina-name: resume
    EmployeeIRLTaxPAYEExclusionCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeIRLTaxPAYEExclusion'
          x-ballerina-name: items
    PaginatedPayloadIEnumerableCourse:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Paging:
          allOf:
          - $ref: '#/components/schemas/Paging'
          x-ballerina-name: paging
        Data:
          type: array
          items:
            $ref: '#/components/schemas/Course'
          x-ballerina-name: data
    EmployeeClockDeviceGroup:
      type: object
      properties:
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
        ClockDeviceGroup:
          allOf:
          - $ref: '#/components/schemas/ClockDeviceGroup'
          x-ballerina-name: clockDeviceGroup
    AmfEnumFrom:
      type: object
      properties:
        AppView:
          type: string
          x-ballerina-name: appView
        Model:
          type: string
          x-ballerina-name: model
        Criteria:
          type: object
          x-ballerina-name: criteria
        Module:
          type: string
          x-ballerina-name: module
    EmployeePayrollElectionDeletionModel:
      type: object
      properties:
        Elections:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeElectionAPIDeletionModel'
          x-ballerina-name: elections
        EmployeeXRefCode:
          type: string
          x-ballerina-name: employeeXRefCode
    MetadataModelCollection:
      type: object
      properties:
        IsExtended:
          type: boolean
          x-ballerina-name: isExtended
        MetadataId:
          type: string
          x-ballerina-name: metadataId
        Title:
          type: string
          x-ballerina-name: title
        GeoContext:
          allOf:
          - $ref: '#/components/schemas/ContextLevel'
          x-ballerina-name: geoContext
        ShortDescription:
          type: string
          x-ballerina-name: shortDescription
        Name:
          type: string
          x-ballerina-name: name
        MetadataModel:
          allOf:
          - $ref: '#/components/schemas/MetadataModel'
          x-ballerina-name: metadataModel
        LongDescription:
          type: string
          x-ballerina-name: longDescription
        IsCommon:
          type: boolean
          x-ballerina-name: isCommon
        Mappings:
          type: object
          additionalProperties:
            type: string
          x-ballerina-name: mappings
        DayforcePropertyName:
          type: string
          readOnly: true
          x-ballerina-name: dayforcePropertyName
        Id:
          type: string
          x-ballerina-name: id
        ApplicationMapping:
          type: string
          readOnly: true
          x-ballerina-name: applicationMapping
        SchemaName:
          type: string
          x-ballerina-name: schemaName
        DbTable:
          type: string
          x-ballerina-name: dbTable
    PayloadAnalyticsDatasetMetadata:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          allOf:
          - $ref: '#/components/schemas/AnalyticsDatasetMetadata'
          x-ballerina-name: data
    PayloadIEnumerablePlanLaborCategoryCode:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/PlanLaborCategoryCode'
          x-ballerina-name: data
    EmployeePayrollTaxParameterCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeePayrollTaxParameter'
          x-ballerina-name: items
    PayloadJob:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          allOf:
          - $ref: '#/components/schemas/Job'
          x-ballerina-name: data
    EmployeeExportParams:
      type: object
      properties:
        DeltaOption:
          type: string
          x-ballerina-name: deltaOption
        ContextDateOption:
          type: string
          x-ballerina-name: contextDateOption
        AmfEntity:
          type: string
          x-ballerina-name: amfEntity
        PageSize:
          type: integer
          format: int32
          x-ballerina-name: pageSize
        EmployeeNumber:
          type: string
          x-ballerina-name: employeeNumber
        DeltaDate:
          type: string
          format: date-time
          x-ballerina-name: deltaDate
        ExcludeTerminatedEmployeesOlderThanXDays:
          type: integer
          format: int32
          x-ballerina-name: excludeTerminatedEmployeesOlderThanXDays
        AmfLevel:
          type: string
          x-ballerina-name: amfLevel
        AmfLevelValue:
          type: string
          x-ballerina-name: amfLevelValue
        ContextDateRangeTo:
          type: string
          format: date-time
          x-ballerina-name: contextDateRangeTo
        ExportAllEmployeeDetailOnDelta:
          type: boolean
          x-ballerina-name: exportAllEmployeeDetailOnDelta
        ContextDateRangeFrom:
          type: string
          format: date-time
          x-ballerina-name: contextDateRangeFrom
        EmployeeXRefCode:
          type: string
          x-ballerina-name: employeeXRefCode
        Expand:
          type: string
          x-ballerina-name: expand
        PayGroupXRefCode:
          type: string
          x-ballerina-name: payGroupXRefCode
        ContextDate:
          type: string
          format: date-time
          x-ballerina-name: contextDate
    PayeeHealthCareProvider:
      type: object
      properties:
        ForwardingOffice:
          type: integer
          format: int32
          x-ballerina-name: forwardingOffice
        U2Percentage:
          type: number
          format: double
          x-ballerina-name: u2Percentage
        DataCollectionPoint:
          type: integer
          format: int32
          x-ballerina-name: dataCollectionPoint
        AdditionalContributionPercentage:
          type: number
          format: double
          x-ballerina-name: additionalContributionPercentage
        U1Percentage:
          type: number
          format: double
          x-ballerina-name: u1Percentage
        InstitutionCode:
          type: integer
          format: int32
          x-ballerina-name: institutionCode
        EffectiveFrom:
          type: string
          format: date-time
          x-ballerina-name: effectiveFrom
        HealthCareBusinessNumber:
          type: integer
          format: int32
          x-ballerina-name: healthCareBusinessNumber
        HealthInsuranceType:
          type: integer
          format: int32
          x-ballerina-name: healthInsuranceType
        HealthCareSuccessorBusinessNumber:
          type: integer
          format: int32
          x-ballerina-name: healthCareSuccessorBusinessNumber
        EffectiveTo:
          type: string
          format: date-time
          x-ballerina-name: effectiveTo
    EmployeeGlobalPropertyValueCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeGlobalPropertyValue'
          x-ballerina-name: items
    EmployeeEmploymentStatusCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeEmploymentStatus'
          x-ballerina-name: items
    EmployeeWorkPatternCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeWorkPattern'
          x-ballerina-name: items
    StateFilingStatus:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        PayrollOutput:
          type: string
          x-ballerina-name: payrollOutput
        StateCode:
          type: string
          x-ballerina-name: stateCode
        CalculationCode:
          type: string
          x-ballerina-name: calculationCode
        ShortName:
          type: string
          x-ballerina-name: shortName
        CountryCode:
          type: string
          x-ballerina-name: countryCode
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
        StateFilingStatusCode:
          type: string
          x-ballerina-name: stateFilingStatusCode
    EmployeeGLSplitSetDetails:
      type: object
      properties:
        IsPrimary:
          type: boolean
          x-ballerina-name: isPrimary
        LaborPercentage:
          type: number
          format: double
          x-ballerina-name: laborPercentage
        EmployeeGLSplitSetDetailLaborMetricCodeDetails:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeGLSplitSetDetailLaborMetricCodes'
          x-ballerina-name: employeeGLSplitSetDetailLaborMetricCodeDetails
    EmployeeEthnicityCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeEthnicity'
          x-ballerina-name: items
    PayeeAddress:
      type: object
      properties:
        AddressLine3:
          type: string
          x-ballerina-name: addressLine3
        AddressLine2:
          type: string
          x-ballerina-name: addressLine2
        AddressLine1:
          type: string
          x-ballerina-name: addressLine1
        CountryName:
          type: string
          x-ballerina-name: countryName
        StateProvinceName:
          type: string
          x-ballerina-name: stateProvinceName
        StateProvinceCode:
          type: string
          x-ballerina-name: stateProvinceCode
        PostalCode:
          type: string
          x-ballerina-name: postalCode
        City:
          type: string
          x-ballerina-name: city
        CountryCode:
          type: string
          x-ballerina-name: countryCode
    PunchLaborMetric:
      type: object
      properties:
        CodeXRefCode:
          type: string
          x-ballerina-name: codeXRefCode
        CodeClockTransferCode:
          type: string
          x-ballerina-name: codeClockTransferCode
        TypeXRefCode:
          type: string
          x-ballerina-name: typeXRefCode
        TypeClockTransferCode:
          type: string
          x-ballerina-name: typeClockTransferCode
    PayloadIEnumerablePosition:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/Position'
          x-ballerina-name: data
    EmployeeGroup:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    PayloadIEnumerableEmployeeSSOAccount:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeSSOAccount'
          x-ballerina-name: data
    LaborMetrics:
      type: object
      properties:
        LaborMetricsTypeXRefCode:
          type: string
          x-ballerina-name: laborMetricsTypeXRefCode
        LaborMetricsCodeXRefCode:
          type: string
          x-ballerina-name: laborMetricsCodeXRefCode
    PayrollPayEntryImportHistoryErrorDetails:
      type: object
      properties:
        LineContent:
          type: string
          x-ballerina-name: lineContent
        ErrorMessage:
          type: string
          x-ballerina-name: errorMessage
        LineNumber:
          type: integer
          format: int32
          x-ballerina-name: lineNumber
    DEUEmployeeAccidentInsuranceHazardCategoryCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/AccidentInsuranceHazardCategory'
          x-ballerina-name: items
    PayloadIEnumerableEmployeeClockDeviceGroup:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeClockDeviceGroup'
          x-ballerina-name: data
    PayloadIEnumerableEmployeeEthnicity:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeEthnicity'
          x-ballerina-name: data
    CandidateProfileSource:
      type: object
      properties:
        ShortName:
          type: string
          x-ballerina-name: shortName
        CandidateProfileSourceAdditionalInfo:
          type: string
          x-ballerina-name: candidateProfileSourceAdditionalInfo
    EmployeeShiftBidDTO:
      required:
      - BidState
      - GroupXRefCode
      type: object
      properties:
        BidState:
          type: string
          x-ballerina-name: bidState
        GroupXRefCode:
          type: string
          x-ballerina-name: groupXRefCode
    EmployeePaySummaryRetro:
      type: object
      properties:
        LaborMetricsCode4XRefCode:
          type: string
          x-ballerina-name: laborMetricsCode4XRefCode
        LaborMetricsCode3XRefCode:
          type: string
          x-ballerina-name: laborMetricsCode3XRefCode
        BusinessDate:
          type: string
          format: date-time
          x-ballerina-name: businessDate
        IsPremium:
          type: boolean
          x-ballerina-name: isPremium
        TimeEnd:
          type: string
          format: date-time
          x-ballerina-name: timeEnd
        LaborMetricsCode1XRefCode:
          type: string
          x-ballerina-name: laborMetricsCode1XRefCode
        PieceQuantity:
          type: number
          format: double
          x-ballerina-name: pieceQuantity
        TimeStart:
          type: string
          format: date-time
          x-ballerina-name: timeStart
        LaborMetricsCode2XRefCode:
          type: string
          x-ballerina-name: laborMetricsCode2XRefCode
        LaborMetricsCode8XRefCode:
          type: string
          x-ballerina-name: laborMetricsCode8XRefCode
        PositionXRefCode:
          type: string
          x-ballerina-name: positionXRefCode
        LaborMetricsCode9XRefCode:
          type: string
          x-ballerina-name: laborMetricsCode9XRefCode
        LaborMetricsCode0XRefCode:
          type: string
          x-ballerina-name: laborMetricsCode0XRefCode
        PayDate:
          type: string
          format: date-time
          x-ballerina-name: payDate
        PunchSegmentStart:
          type: string
          format: date-time
          x-ballerina-name: punchSegmentStart
        DocketXRefCode:
          type: string
          x-ballerina-name: docketXRefCode
        EmployeeXRefCode:
          type: string
          x-ballerina-name: employeeXRefCode
        LocationXRefCode:
          type: string
          x-ballerina-name: locationXRefCode
        MinuteDuration:
          type: integer
          format: int32
          x-ballerina-name: minuteDuration
        NetHours:
          type: number
          format: double
          x-ballerina-name: netHours
        DepartmentXRefCode:
          type: string
          x-ballerina-name: departmentXRefCode
        PayCodeXRefCode:
          type: string
          x-ballerina-name: payCodeXRefCode
        IsRetro:
          type: boolean
          x-ballerina-name: isRetro
        PayAmount:
          type: number
          format: double
          x-ballerina-name: payAmount
        JobXRefCode:
          type: string
          x-ballerina-name: jobXRefCode
        Rate:
          type: number
          format: double
          x-ballerina-name: rate
        PayExportId:
          type: integer
          format: int64
          x-ballerina-name: payExportId
        PayCategoryXRefCode:
          type: string
          x-ballerina-name: payCategoryXRefCode
        LaborMetricsCode7XRefCode:
          type: string
          x-ballerina-name: laborMetricsCode7XRefCode
        ProjectXRefCode:
          type: string
          x-ballerina-name: projectXRefCode
        LaborMetricsCode6XRefCode:
          type: string
          x-ballerina-name: laborMetricsCode6XRefCode
        LaborMetricsCode5XRefCode:
          type: string
          x-ballerina-name: laborMetricsCode5XRefCode
    PaginatedPayloadIEnumerableEmployeeGLSplits:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Paging:
          allOf:
          - $ref: '#/components/schemas/Paging'
          x-ballerina-name: paging
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeGLSplits'
          x-ballerina-name: data
    PayloadIEnumerablePRGLSplitSet:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/PRGLSplitSet'
          x-ballerina-name: data
    PayloadIEnumerableEmployeeSkill:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeSkill'
          x-ballerina-name: data
    EmployeeDependentsBeneficiariesAddress:
      type: object
      properties:
        Address2:
          type: string
          x-ballerina-name: address2
        Address3:
          type: string
          x-ballerina-name: address3
        PostalCode:
          type: string
          x-ballerina-name: postalCode
        Address1:
          type: string
          x-ballerina-name: address1
        City:
          type: string
          x-ballerina-name: city
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
        County:
          type: string
          x-ballerina-name: county
        EffectiveEnd:
          type: string
          format: date-time
          x-ballerina-name: effectiveEnd
        Address6:
          type: string
          x-ballerina-name: address6
        Address4:
          type: string
          x-ballerina-name: address4
        State:
          allOf:
          - $ref: '#/components/schemas/State'
          x-ballerina-name: state
        Address5:
          type: string
          x-ballerina-name: address5
        EffectiveStart:
          type: string
          format: date-time
          x-ballerina-name: effectiveStart
        Country:
          allOf:
          - $ref: '#/components/schemas/Country'
          x-ballerina-name: country
        ContactInformationType:
          allOf:
          - $ref: '#/components/schemas/ContactInformationType'
          x-ballerina-name: contactInformationType
    ClientPayrollCountryUpdate:
      type: object
      properties:
        ConnectedPayCountry:
          type: boolean
          x-ballerina-name: connectedPayCountry
        HCMPayrollCountry:
          type: boolean
          x-ballerina-name: hCMPayrollCountry
        DefaultTimeZoneXRefCode:
          type: string
          x-ballerina-name: defaultTimeZoneXRefCode
        CountryCode:
          type: string
          x-ballerina-name: countryCode
    EmployeeScheduleSegmentAPIRequestDTO:
      required:
      - PositionXRefCode
      - TimeEnd
      - TimeStart
      type: object
      properties:
        PositionXRefCode:
          type: string
          x-ballerina-name: positionXRefCode
        PayAdjCodeXRefCode:
          type: string
          x-ballerina-name: payAdjCodeXRefCode
        Comment:
          type: string
          x-ballerina-name: comment
        OrgLocationTypeXRefCode:
          type: string
          x-ballerina-name: orgLocationTypeXRefCode
        ProjectXRefCode:
          type: string
          x-ballerina-name: projectXRefCode
        DocketXRefCode:
          type: string
          x-ballerina-name: docketXRefCode
        LaborMetrics:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeScheduleLaborMetricPostAPIRequestDTO'
          x-ballerina-name: laborMetrics
        TimeEnd:
          type: string
          format: date-time
          x-ballerina-name: timeEnd
        TimeStart:
          type: string
          format: date-time
          x-ballerina-name: timeStart
    CourseType:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    BackgroundScreeningStatus:
      type: object
      properties:
        ScreeningStatus:
          type: string
          x-ballerina-name: screeningStatus
        ScreeningRequestId:
          type: string
          x-ballerina-name: screeningRequestId
        ScreeningResult:
          type: string
          x-ballerina-name: screeningResult
    PayloadIEnumerableEmployeeOrgUnitInformation:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeOrgUnitInformation'
          x-ballerina-name: data
    PayloadPayrollPayEntryImportHistory:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          allOf:
          - $ref: '#/components/schemas/PayrollPayEntryImportHistory'
          x-ballerina-name: data
    EmployeeWorkAssignmentCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeWorkAssignment'
          x-ballerina-name: items
    BackgroundScreeningStatusUrlReport:
      type: object
      properties:
        ScreeningStatus:
          allOf:
          - $ref: '#/components/schemas/BackgroundScreeningReportScreeningStatus'
          x-ballerina-name: screeningStatus
        ScreeningRequestId:
          type: string
          x-ballerina-name: screeningRequestId
        Url:
          type: string
          x-ballerina-name: url
        CandidatePII:
          allOf:
          - $ref: '#/components/schemas/CandidatePersonalIdentifiableInformation'
          x-ballerina-name: candidatePII
        DetailedResults:
          type: array
          items:
            $ref: '#/components/schemas/CandidateScreeningDetailedResult'
          x-ballerina-name: detailedResults
        CandidateRightToWorkResults:
          allOf:
          - $ref: '#/components/schemas/CandidateRightToWorkResult'
          x-ballerina-name: candidateRightToWorkResults
    ManagerShiftBid:
      type: object
      properties:
        EmployeeSchedule:
          allOf:
          - $ref: '#/components/schemas/EmployeeSchedule'
          x-ballerina-name: employeeSchedule
        QualifyingBids:
          type: integer
          format: int64
          x-ballerina-name: qualifyingBids
        EmployeeScheduleXRefCodes:
          type: array
          items:
            type: string
          x-ballerina-name: employeeScheduleXRefCodes
        GroupXRefCode:
          type: string
          readOnly: true
          x-ballerina-name: groupXRefCode
        BiddingEmployees:
          type: array
          items:
            $ref: '#/components/schemas/BidderInfo'
          x-ballerina-name: biddingEmployees
    EmployeeManager:
      type: object
      properties:
        EffectiveEnd:
          type: string
          format: date-time
          x-ballerina-name: effectiveEnd
        ManagerFirstName:
          type: string
          x-ballerina-name: managerFirstName
        ManagerBadgeNumber:
          type: string
          x-ballerina-name: managerBadgeNumber
        DerivationMethod:
          type: integer
          format: int32
          x-ballerina-name: derivationMethod
        EffectiveStart:
          type: string
          format: date-time
          x-ballerina-name: effectiveStart
        ManagerLastName:
          type: string
          x-ballerina-name: managerLastName
        ManagerXRefCode:
          type: string
          x-ballerina-name: managerXRefCode
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
        ManagerMiddleName:
          type: string
          x-ballerina-name: managerMiddleName
    PaginatedPayloadIEnumerableBaseProject:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Paging:
          allOf:
          - $ref: '#/components/schemas/Paging'
          x-ballerina-name: paging
        Data:
          type: array
          items:
            $ref: '#/components/schemas/BaseProject'
          x-ballerina-name: data
    LaborValidationModel:
      type: object
      properties:
        CodeName:
          type: string
          x-ballerina-name: codeName
        XRefCode:
          type: object
          x-ballerina-name: xRefCode
    EmployeeSSOAccount:
      type: object
      properties:
        LoginName:
          type: string
          x-ballerina-name: loginName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    PaginatedPayloadIEnumerableEmployeePaySummaryRetro:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Paging:
          allOf:
          - $ref: '#/components/schemas/Paging'
          x-ballerina-name: paging
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeePaySummaryRetro'
          x-ballerina-name: data
    Positions:
      type: object
      properties:
        _Total:
          type: integer
          format: int32
          x-ballerina-name: total
        Values:
          type: array
          items:
            $ref: '#/components/schemas/PositionDetails'
          x-ballerina-name: values
    QuestionOptionModel:
      type: object
      properties:
        label:
          type: string
        value:
          type: string
    JobClassificationGlobal:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    DEUEmployeeWageTaxCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/DEUEmployeeWageTax'
          x-ballerina-name: items
    EmployeeAUSFederalTax:
      type: object
      properties:
        AdditionalTaxType:
          allOf:
          - $ref: '#/components/schemas/AdditionalTaxType'
          x-ballerina-name: additionalTaxType
        ClaimTaxFreeThreshold:
          type: boolean
          x-ballerina-name: claimTaxFreeThreshold
        WithholdingVariationAmount:
          type: number
          format: double
          x-ballerina-name: withholdingVariationAmount
        ClaimingZoneOverseasorCarerOffset:
          type: boolean
          x-ballerina-name: claimingZoneOverseasorCarerOffset
        MedicareLevyExemptionType:
          allOf:
          - $ref: '#/components/schemas/MedicareLevyExemptionType'
          x-ballerina-name: medicareLevyExemptionType
        ResidentCode:
          allOf:
          - $ref: '#/components/schemas/PRTaxResidentCode'
          x-ballerina-name: residentCode
        FlatComissionerInstalmentRate:
          type: number
          format: double
          x-ballerina-name: flatComissionerInstalmentRate
        EffectiveEnd:
          type: string
          format: date-time
          x-ballerina-name: effectiveEnd
        WithholdingVariationAmountType:
          allOf:
          - $ref: '#/components/schemas/WithholdingVariationAmountType'
          x-ballerina-name: withholdingVariationAmountType
        STSLDebt:
          type: boolean
          x-ballerina-name: sTSLDebt
        DoesWithholdingVariationIncludeSTSLDebt:
          type: boolean
          x-ballerina-name: doesWithholdingVariationIncludeSTSLDebt
        EffectiveStart:
          type: string
          format: date-time
          x-ballerina-name: effectiveStart
        WithholdingVariationType:
          allOf:
          - $ref: '#/components/schemas/WithholdingVariationType'
          x-ballerina-name: withholdingVariationType
        MedicareLevyReductionClaimed:
          type: boolean
          x-ballerina-name: medicareLevyReductionClaimed
        TFNExemptionReason:
          allOf:
          - $ref: '#/components/schemas/TFNExemptionReason'
          x-ballerina-name: tFNExemptionReason
        SeniorAndPensionersTaxOffset:
          type: boolean
          x-ballerina-name: seniorAndPensionersTaxOffset
        CombineWeeklyTotalIncomelessthanTableA:
          type: boolean
          x-ballerina-name: combineWeeklyTotalIncomelessthanTableA
        AmountClaimedforTaxOffset:
          type: number
          format: double
          x-ballerina-name: amountClaimedforTaxOffset
        NumberofDependentChildren:
          type: integer
          format: int32
          x-ballerina-name: numberofDependentChildren
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
        PayBasis:
          type: string
          x-ballerina-name: payBasis
        Spouse:
          type: boolean
          x-ballerina-name: spouse
        IsContractorSuperLiabilityOnly:
          type: boolean
          x-ballerina-name: isContractorSuperLiabilityOnly
        ApplyMedicareForWorkingHolidayMaker:
          type: boolean
          x-ballerina-name: applyMedicareForWorkingHolidayMaker
        IsUpwardVariation:
          type: boolean
          x-ballerina-name: isUpwardVariation
        EarningGroup:
          allOf:
          - $ref: '#/components/schemas/PREarningAccumulator'
          x-ballerina-name: earningGroup
    MilitaryServiceDetails:
      type: object
      properties:
        StartDateMonth:
          type: string
          x-ballerina-name: startDateMonth
        EndDateYear:
          type: string
          x-ballerina-name: endDateYear
        EndCurrent:
          type: boolean
          x-ballerina-name: endCurrent
        Description:
          type: string
          x-ballerina-name: description
        EndDateMonth:
          type: string
          x-ballerina-name: endDateMonth
        Branch:
          type: string
          x-ballerina-name: branch
        Rank:
          type: string
          x-ballerina-name: rank
        Commendations:
          type: string
          x-ballerina-name: commendations
        ServiceCountry:
          type: string
          x-ballerina-name: serviceCountry
        StartDateYear:
          type: string
          x-ballerina-name: startDateYear
    EmployeeWorkContract:
      type: object
      properties:
        StartDate:
          type: string
          format: date-time
          x-ballerina-name: startDate
        ContractWorkPercent:
          type: number
          format: double
          x-ballerina-name: contractWorkPercent
        WorkPatterns:
          allOf:
          - $ref: '#/components/schemas/EmployeeWorkPatternCollection'
          x-ballerina-name: workPatterns
        FullTimeHours:
          type: number
          format: double
          x-ballerina-name: fullTimeHours
        WorkContract:
          allOf:
          - $ref: '#/components/schemas/WorkContract'
          x-ballerina-name: workContract
        BaseComplementaryHours:
          type: number
          format: double
          x-ballerina-name: baseComplementaryHours
        WorkPatternLengthDays:
          type: integer
          format: int32
          x-ballerina-name: workPatternLengthDays
        BaseHours:
          type: number
          format: double
          x-ballerina-name: baseHours
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
        AverageNumOfDays:
          type: number
          format: double
          x-ballerina-name: averageNumOfDays
        CreateShiftOnHolidays:
          type: boolean
          x-ballerina-name: createShiftOnHolidays
        EndDate:
          type: string
          format: date-time
          x-ballerina-name: endDate
    EmployeeDeduction:
      type: object
      properties:
        Position:
          allOf:
          - $ref: '#/components/schemas/Position'
          x-ballerina-name: position
        Deduction:
          allOf:
          - $ref: '#/components/schemas/Deduction'
          x-ballerina-name: deduction
        ElectionSchedule:
          allOf:
          - $ref: '#/components/schemas/ElectionSchedule'
          x-ballerina-name: electionSchedule
        ElectionStartPayPeriodStartDate:
          type: string
          format: date-time
          x-ballerina-name: electionStartPayPeriodStartDate
        ElectionStartPayGroup:
          allOf:
          - $ref: '#/components/schemas/PayGroup'
          x-ballerina-name: electionStartPayGroup
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
        EffectiveEnd:
          type: string
          format: date-time
          x-ballerina-name: effectiveEnd
        ContinuePaymentOnStatutoryPay:
          type: boolean
          x-ballerina-name: continuePaymentOnStatutoryPay
        IsOptOut:
          type: integer
          format: int32
          x-ballerina-name: isOptOut
        EmployeeDeductionParameters:
          allOf:
          - $ref: '#/components/schemas/EmployeeDeductionParameterCollection'
          x-ballerina-name: employeeDeductionParameters
        EffectiveStart:
          type: string
          format: date-time
          x-ballerina-name: effectiveStart
        EmployeeDeductionLimits:
          allOf:
          - $ref: '#/components/schemas/EmployeeDeductionLimitCollection'
          x-ballerina-name: employeeDeductionLimits
        IsBlocked:
          type: boolean
          x-ballerina-name: isBlocked
        Location:
          allOf:
          - $ref: '#/components/schemas/Location'
          x-ballerina-name: location
    LaborValidationMetricFilterXRefCodes:
      type: object
      properties:
        Criteria:
          type: array
          items:
            $ref: '#/components/schemas/LaborValidationModel'
          x-ballerina-name: criteria
    PerformanceCycle:
      type: object
      properties:
        EffectiveEnd:
          type: string
          format: date-time
          x-ballerina-name: effectiveEnd
        CycleEndDate:
          type: string
          format: date-time
          x-ballerina-name: cycleEndDate
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        CycleStartDate:
          type: string
          format: date-time
          x-ballerina-name: cycleStartDate
        EffectiveStart:
          type: string
          format: date-time
          x-ballerina-name: effectiveStart
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    PayloadIEnumerableEmployeeBadge:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeBadge'
          x-ballerina-name: data
    PayFrequency:
      type: object
      properties:
        PayFrequencyType:
          type: string
          x-ballerina-name: payFrequencyType
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    PayloadBackgroundJobLog:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          allOf:
          - $ref: '#/components/schemas/BackgroundJobLog'
          x-ballerina-name: data
    BenefitsDFLinkExportEarningGroupingResults:
      type: object
      properties:
        LegalEntityReferenceCode:
          type: string
          x-ballerina-name: legalEntityReferenceCode
        QTDHours:
          type: number
          format: double
          x-ballerina-name: qTDHours
        RecordType:
          type: string
          x-ballerina-name: recordType
        EarningGroupingReferenceCode:
          type: string
          x-ballerina-name: earningGroupingReferenceCode
        CurrentHours:
          type: number
          format: double
          x-ballerina-name: currentHours
        MTDHours:
          type: number
          format: double
          x-ballerina-name: mTDHours
        YTDHours:
          type: number
          format: double
          x-ballerina-name: yTDHours
    LimitAccessType:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    EmployeePropertyOption:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    PayloadIEnumerablePayType:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/PayType'
          x-ballerina-name: data
    PayloadIEnumerableEmployeeHRPolicy:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeHRPolicy'
          x-ballerina-name: data
    JobSetLevel:
      type: object
      properties:
        JobSet:
          allOf:
          - $ref: '#/components/schemas/JobSet'
          x-ballerina-name: jobSet
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    EmergencyContactPersonContactCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmergencyContactPersonContact'
          x-ballerina-name: items
    EmployeeRoleCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeRole'
          x-ballerina-name: items
    BenefitsDFLinkExportProperty:
      type: object
      properties:
        RecordType:
          type: string
          x-ballerina-name: recordType
        PropertyTypeCode:
          type: string
          x-ballerina-name: propertyTypeCode
        EffectiveEndDate:
          type: string
          format: date-time
          x-ballerina-name: effectiveEndDate
        PropertyValue:
          type: string
          x-ballerina-name: propertyValue
        EffectiveStartDate:
          type: string
          format: date-time
          x-ballerina-name: effectiveStartDate
        PropertyValueTypeCode:
          type: integer
          format: int32
          x-ballerina-name: propertyValueTypeCode
    PayloadIEnumerableEmployeeUSFederalTax:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeUSFederalTax'
          x-ballerina-name: data
    EmployeeDeductionsCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeDeduction'
          x-ballerina-name: items
    ScheduleLaborMetricExtended:
      type: object
      properties:
        CodeXRefCode:
          type: string
          x-ballerina-name: codeXRefCode
        CodeName:
          type: string
          x-ballerina-name: codeName
        TypeXRefCode:
          type: string
          x-ballerina-name: typeXRefCode
    EmployeeLegalEntity:
      type: object
      properties:
        WorkLocationAddress:
          allOf:
          - $ref: '#/components/schemas/WorkLocationAddress'
          x-ballerina-name: workLocationAddress
        OriginalHireDate:
          type: string
          format: date-time
          x-ballerina-name: originalHireDate
        FEIN:
          type: string
          x-ballerina-name: fEIN
        TerminationDate:
          type: string
          format: date-time
          x-ballerina-name: terminationDate
        LegalEntityAddress:
          allOf:
          - $ref: '#/components/schemas/LegalEntityAddress'
          x-ballerina-name: legalEntityAddress
        EmploymentStatus:
          type: string
          x-ballerina-name: employmentStatus
        PayType:
          type: string
          x-ballerina-name: payType
        EmploymentType:
          type: string
          x-ballerina-name: employmentType
        HourlyRate:
          type: number
          format: double
          x-ballerina-name: hourlyRate
        PayFrequency:
          type: string
          x-ballerina-name: payFrequency
        NormalWeeklyHours:
          type: number
          format: double
          x-ballerina-name: normalWeeklyHours
        LegalEntityName:
          type: string
          x-ballerina-name: legalEntityName
        HireDate:
          type: string
          format: date-time
          x-ballerina-name: hireDate
        JobAssignment:
          type: string
          x-ballerina-name: jobAssignment
        LastPayrollPayDate:
          type: string
          format: date-time
          x-ballerina-name: lastPayrollPayDate
        BaseSalary:
          type: number
          format: double
          x-ballerina-name: baseSalary
    PayGroupCalendar:
      type: object
      properties:
        CollectionFrequency:
          type: string
          x-ballerina-name: collectionFrequency
        Calendar:
          type: array
          items:
            $ref: '#/components/schemas/PayGroupCalendarDetails'
          x-ballerina-name: calendar
        PayGroupXRefCode:
          type: string
          x-ballerina-name: payGroupXRefCode
        Frequency:
          type: string
          x-ballerina-name: frequency
        Country:
          type: string
          x-ballerina-name: country
        PayGroupName:
          type: string
          x-ballerina-name: payGroupName
        PayrollFrequency:
          type: string
          x-ballerina-name: payrollFrequency
        DayStartOfWeek:
          type: string
          x-ballerina-name: dayStartOfWeek
    PayloadIEnumerableEmployeeUSTaxStatus:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeUSTaxStatus'
          x-ballerina-name: data
    HRIncidentAction:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    AmfEntity:
      type: object
      properties:
        EffectiveEnd:
          type: string
          format: date-time
          x-ballerina-name: effectiveEnd
        EffectiveStart:
          type: string
          format: date-time
          x-ballerina-name: effectiveStart
        Id:
          type: integer
          format: int32
          x-ballerina-name: id
    LMSAssignmentMethod:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    AnalyticsDatasetMetadata:
      type: object
      properties:
        Status:
          type: string
          x-ballerina-name: status
        DifferenceCount:
          type: integer
          description: Difference between report row counts
          format: int32
          x-ballerina-name: differenceCount
        EndedTimestamp:
          type: string
          description: Ended refresh Timestamp
          format: date-time
          x-ballerina-name: endedTimestamp
        Parameters:
          type: string
          description: Report Parameters
          x-ballerina-name: parameters
        ReportId:
          type: integer
          description: Report Id
          format: int32
          x-ballerina-name: reportId
        TotalPages:
          type: integer
          description: Total number of pages for given dataset
          format: int32
          x-ballerina-name: totalPages
        StartedTimestamp:
          type: string
          description: Started refresh Timestamp
          format: date-time
          x-ballerina-name: startedTimestamp
        LastModifiedTimestamp:
          type: string
          description: Last modified timestamp of report
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
        RefreshStatus:
          type: string
          description: RefreshStatus
          x-ballerina-name: refreshStatus
        DatasetId:
          type: string
          description: Dataset Id
          x-ballerina-name: datasetId
        Filters:
          type: string
          description: Report Filters
          x-ballerina-name: filters
        CreatedDate:
          type: string
          description: Created Date of report
          format: date-time
          x-ballerina-name: createdDate
        RowCount:
          type: string
          description: Row count in the dataset
          x-ballerina-name: rowCount
    PayloadIEnumerableEmploymentStatusReason:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmploymentStatusReason'
          x-ballerina-name: data
    ReportColumnMetadata:
      type: object
      properties:
        CodeName:
          type: string
          description: "CodeName is a unique name that can be used with code\r\nto\
            \ refer to this specific column.  Its value should be consistent"
          x-ballerina-name: codeName
        DisplayName:
          type: string
          description: "This is a name as defined by a user when developing this report.\
            \  This name\r\nwould be a human facing name that would be used on a printed\
            \ report.\r\nThis field is used as the key to the values dictionary"
          x-ballerina-name: displayName
        DataType:
          type: string
          description: This is a string representation of the data type
          x-ballerina-name: dataType
      description: This class encapsulates the report data generated during the execution
        of the report
    EmployeeAUSSuperannuationRules:
      type: object
      properties:
        MinimumContributionAmount:
          type: number
          format: double
          x-ballerina-name: minimumContributionAmount
        EffectiveEnd:
          type: string
          format: date-time
          x-ballerina-name: effectiveEnd
        EffectiveStart:
          type: string
          format: date-time
          x-ballerina-name: effectiveStart
        ApplyQuarterlyMaxBaseCapForEmployerSuperannuation:
          type: boolean
          x-ballerina-name: applyQuarterlyMaxBaseCapForEmployerSuperannuation
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
        OverrideMinBaseForEmployerSuperannuation:
          type: boolean
          x-ballerina-name: overrideMinBaseForEmployerSuperannuation
    PayloadIEnumerableEmployeePayrollTaxParameter:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeePayrollTaxParameter'
          x-ballerina-name: data
    OrgLocationType:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    BenefitsDFLinkExportEmployeeElectionDetail:
      type: object
      properties:
        CoverageEndDate:
          type: string
          format: date-time
          x-ballerina-name: coverageEndDate
        ElectionId:
          type: integer
          format: int32
          x-ballerina-name: electionId
        OptionCode:
          type: string
          x-ballerina-name: optionCode
        RequestedCoverageAmount:
          type: number
          format: double
          x-ballerina-name: requestedCoverageAmount
        CareProviderDetails:
          type: array
          items:
            $ref: '#/components/schemas/BenefitsDFLinkExportCareProvider'
          x-ballerina-name: careProviderDetails
        PlanTypeCode:
          type: string
          x-ballerina-name: planTypeCode
        EmployeePerPayCost:
          type: number
          format: double
          x-ballerina-name: employeePerPayCost
        CoverageMultiplier:
          type: number
          format: double
          x-ballerina-name: coverageMultiplier
        EOIStatusCode:
          type: integer
          format: int32
          x-ballerina-name: eOIStatusCode
        RateXrefCode:
          type: string
          x-ballerina-name: rateXrefCode
        RecordType:
          type: string
          x-ballerina-name: recordType
        EmployeeDeductionScheduleCode:
          type: string
          x-ballerina-name: employeeDeductionScheduleCode
        EmployeeContributionPercentage:
          type: number
          format: double
          x-ballerina-name: employeeContributionPercentage
        PlanSubTypeCode:
          type: string
          x-ballerina-name: planSubTypeCode
        PreAgeReducedCoverageAmount:
          type: number
          format: double
          x-ballerina-name: preAgeReducedCoverageAmount
        ElectionDate:
          type: string
          format: date-time
          x-ballerina-name: electionDate
        EffectiveEndDate:
          type: string
          format: date-time
          x-ballerina-name: effectiveEndDate
        PlanCode:
          type: string
          x-ballerina-name: planCode
        PolicyNumber:
          type: string
          x-ballerina-name: policyNumber
        PlanEndDate:
          type: string
          format: date-time
          x-ballerina-name: planEndDate
        CoverageAmount:
          type: number
          format: double
          x-ballerina-name: coverageAmount
        CarrierPerPayCost:
          type: number
          format: double
          x-ballerina-name: carrierPerPayCost
        EmployeeAnnualCost:
          type: number
          format: double
          x-ballerina-name: employeeAnnualCost
        EmployerAnnualCost:
          type: number
          format: double
          x-ballerina-name: employerAnnualCost
        PlanXrefCode:
          type: string
          x-ballerina-name: planXrefCode
        EmployeeContributionAmount:
          type: number
          format: double
          x-ballerina-name: employeeContributionAmount
        CoverageStartDate:
          type: string
          format: date-time
          x-ballerina-name: coverageStartDate
        EmployerDeductionScheduleCode:
          type: string
          x-ballerina-name: employerDeductionScheduleCode
        EmployerContributionPercentage:
          type: number
          format: double
          x-ballerina-name: employerContributionPercentage
        CarrierAnnualCost:
          type: number
          format: double
          x-ballerina-name: carrierAnnualCost
        EmployerPerPayCost:
          type: number
          format: double
          x-ballerina-name: employerPerPayCost
        EmployerContributionAmount:
          type: number
          format: double
          x-ballerina-name: employerContributionAmount
        EffectiveStartDate:
          type: string
          format: date-time
          x-ballerina-name: effectiveStartDate
        PlanStartDate:
          type: string
          format: date-time
          x-ballerina-name: planStartDate
    PayloadIEnumerableJobFeed:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/JobFeed'
          x-ballerina-name: data
    PayloadIEnumerableEmployeeIRLTaxRPN:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeIRLTaxRPN'
          x-ballerina-name: data
    EmployeePayAdjustmentPostResponse:
      type: object
      properties:
        EmployeePayAdjustXRefCode:
          type: string
          x-ballerina-name: employeePayAdjustXRefCode
    ChildLocation:
      type: object
      properties:
        OrgUnitLegalEntities:
          allOf:
          - $ref: '#/components/schemas/OrgUnitLegalEntityCollection'
          x-ballerina-name: orgUnitLegalEntities
        OrgLevel:
          allOf:
          - $ref: '#/components/schemas/OrgLevel'
          x-ballerina-name: orgLevel
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        OrgUnitLocationTypes:
          allOf:
          - $ref: '#/components/schemas/OrgUnitLocationTypeCollection'
          x-ballerina-name: orgUnitLocationTypes
        ShortName:
          type: string
          x-ballerina-name: shortName
        OrgUnitParents:
          allOf:
          - $ref: '#/components/schemas/OrgUnitParentCollection'
          x-ballerina-name: orgUnitParents
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    EmployeePayGradeRate:
      type: object
      properties:
        ControlSalary:
          type: number
          format: double
          x-ballerina-name: controlSalary
        MaximumSalary:
          type: number
          format: double
          x-ballerina-name: maximumSalary
        MaximumRate:
          type: number
          format: double
          x-ballerina-name: maximumRate
        WorkAssignmentEffectiveStart:
          type: string
          format: date-time
          x-ballerina-name: workAssignmentEffectiveStart
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
        SalaryMidPoint:
          type: number
          format: double
          x-ballerina-name: salaryMidPoint
        MinimumRate:
          type: number
          format: double
          x-ballerina-name: minimumRate
        EffectiveEnd:
          type: string
          format: date-time
          x-ballerina-name: effectiveEnd
        MinimumSalary:
          type: number
          format: double
          x-ballerina-name: minimumSalary
        WorkAssignmentEffectiveEnd:
          type: string
          format: date-time
          x-ballerina-name: workAssignmentEffectiveEnd
        ControlRate:
          type: number
          format: double
          x-ballerina-name: controlRate
        RateMidPoint:
          type: number
          format: double
          x-ballerina-name: rateMidPoint
        EffectiveStart:
          type: string
          format: date-time
          x-ballerina-name: effectiveStart
        PayGrade:
          allOf:
          - $ref: '#/components/schemas/PayGrade'
          x-ballerina-name: payGrade
    PayloadClientPayrollCountry:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          allOf:
          - $ref: '#/components/schemas/ClientPayrollCountry'
          x-ballerina-name: data
    ScheduleActivityExtended:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        TimeEnd:
          type: string
          format: date-time
          x-ballerina-name: timeEnd
        TimeStart:
          type: string
          format: date-time
          x-ballerina-name: timeStart
        Name:
          type: string
          x-ballerina-name: name
    EmployeePayrollTaxParameterElement:
      type: object
      properties:
        Value:
          type: string
          x-ballerina-name: value
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
        Name:
          allOf:
          - $ref: '#/components/schemas/EmployeePayrollTaxParameterElementName'
          x-ballerina-name: name
    CandidateRTWDocumentDetails:
      type: object
      properties:
        Value:
          type: string
          x-ballerina-name: value
        Name:
          type: string
          x-ballerina-name: name
    EmploymentAgreementPopulation:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    LaborDemandItem:
      type: object
      properties:
        AxisXRefCode:
          type: string
          x-ballerina-name: axisXRefCode
        ServiceHours:
          type: number
          format: double
          x-ballerina-name: serviceHours
        Hours:
          type: number
          format: double
          x-ballerina-name: hours
        ActivityXRefCode:
          type: string
          x-ballerina-name: activityXRefCode
        Time:
          type: string
          format: date-time
          x-ballerina-name: time
        NonServiceHours:
          type: number
          format: double
          x-ballerina-name: nonServiceHours
        ZoneXRefCode:
          type: string
          x-ballerina-name: zoneXRefCode
        Day:
          type: string
          format: date-time
          x-ballerina-name: day
        LaborMeasureXRefCode:
          type: string
          x-ballerina-name: laborMeasureXRefCode
    PayloadIEnumerableAnalyticsReportMetadata:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/AnalyticsReportMetadata'
          x-ballerina-name: data
    EarningPayeeParameter:
      type: object
      properties:
        PayeeParameterXRefCode:
          type: string
          x-ballerina-name: payeeParameterXRefCode
        Value:
          type: string
          x-ballerina-name: value
        PayeeParameterName:
          type: string
          x-ballerina-name: payeeParameterName
    QuestionHierarchicalOptionModel:
      type: object
      properties:
        condition:
          $ref: '#/components/schemas/QuestionConditionModel'
        options:
          type: array
          items:
            $ref: '#/components/schemas/QuestionOptionModel'
        id:
          type: string
    LegalEntityOverride:
      type: object
      properties:
        EffectiveEnd:
          type: string
          format: date-time
          x-ballerina-name: effectiveEnd
        LegalEntityXrefCode:
          type: string
          x-ballerina-name: legalEntityXrefCode
        BankBranchAddressXRefCode:
          type: string
          x-ballerina-name: bankBranchAddressXRefCode
        LegalEntityName:
          type: string
          x-ballerina-name: legalEntityName
        BankBranchAddressName:
          type: string
          x-ballerina-name: bankBranchAddressName
        WorkSiteXRefCode:
          type: string
          x-ballerina-name: workSiteXRefCode
        EffectiveStart:
          type: string
          format: date-time
          x-ballerina-name: effectiveStart
        WorkSiteStateCode:
          type: string
          x-ballerina-name: workSiteStateCode
        WorkSiteName:
          type: string
          x-ballerina-name: workSiteName
        OverrideCustomerFundingIdentiferXRefCode:
          type: string
          x-ballerina-name: overrideCustomerFundingIdentiferXRefCode
        WorkSiteNumber:
          type: string
          x-ballerina-name: workSiteNumber
        OverrideCustomerFundingIdentiferName:
          type: string
          x-ballerina-name: overrideCustomerFundingIdentiferName
    Document:
      type: object
      properties:
        UploadedDate:
          type: string
          format: date-time
          x-ballerina-name: uploadedDate
        DocumentGUID:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
          x-ballerina-name: documentGUID
        FileName:
          type: string
          x-ballerina-name: fileName
        DocumentType:
          allOf:
          - $ref: '#/components/schemas/DocumentType'
          x-ballerina-name: documentType
        UploadedBy:
          allOf:
          - $ref: '#/components/schemas/UploadedBy'
          x-ballerina-name: uploadedBy
        DocumentName:
          type: string
          x-ballerina-name: documentName
    PayloadIEnumerableEmployeeCourse:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeCourse'
          x-ballerina-name: data
    EntitlementPolicy:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    ClockDeviceGroup:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    WithholdingVariationType:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    PayloadIEnumerableEmployeeCANTaxStatus:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeCANTaxStatus'
          x-ballerina-name: data
    OrgUnitParent:
      type: object
      properties:
        EffectiveEnd:
          type: string
          format: date-time
          x-ballerina-name: effectiveEnd
        ParentOrgUnit:
          allOf:
          - $ref: '#/components/schemas/HRConfigurationEntity'
          x-ballerina-name: parentOrgUnit
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        EffectiveStart:
          type: string
          format: date-time
          x-ballerina-name: effectiveStart
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    PaginatedPayloadIEnumerableEmployee:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Paging:
          allOf:
          - $ref: '#/components/schemas/Paging'
          x-ballerina-name: paging
        Data:
          type: array
          items:
            $ref: '#/components/schemas/Employee'
          x-ballerina-name: data
    PayloadIEnumerableEmployeeIRLTaxPRSI:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeIRLTaxPRSI'
          x-ballerina-name: data
    PayloadAnalyticsReportDataset:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          allOf:
          - $ref: '#/components/schemas/AnalyticsReportDataset'
          x-ballerina-name: data
    PropertyValue:
      type: object
      properties:
        SavedAt:
          type: string
          x-ballerina-name: savedAt
        IsElementActive:
          type: boolean
          x-ballerina-name: isElementActive
        ElementXRefCode:
          type: string
          x-ballerina-name: elementXRefCode
        ElementName:
          type: string
          x-ballerina-name: elementName
        SavedBy:
          type: integer
          format: int32
          x-ballerina-name: savedBy
        Value:
          type: string
          x-ballerina-name: value
        ElementDefaultValue:
          type: string
          x-ballerina-name: elementDefaultValue
    TaxAuthorityInstanceDetails:
      type: object
      properties:
        Description:
          type: string
          x-ballerina-name: description
        EmployeeTax:
          type: boolean
          x-ballerina-name: employeeTax
        EmployerTax:
          type: boolean
          x-ballerina-name: employerTax
        TaxAuthorityInstance:
          type: string
          x-ballerina-name: taxAuthorityInstance
        CountryCode:
          type: string
          x-ballerina-name: countryCode
        Name:
          type: string
          x-ballerina-name: name
    ElectionSchedule:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    EmployeeHealthWellnessCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeHealthWellness'
          x-ballerina-name: items
    ShiftRotation:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    PRSIExemptReason:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    PayHolidayGroup:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    AuthorizationPolicy:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    Project:
      type: object
      properties:
        LedgerCode:
          type: string
          x-ballerina-name: ledgerCode
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    BaseEmployeeSubset:
      type: object
      properties:
        FirstName:
          type: string
          x-ballerina-name: firstName
        PreviousLastName:
          type: string
          x-ballerina-name: previousLastName
        Title:
          type: string
          x-ballerina-name: title
        Initials:
          type: string
          x-ballerina-name: initials
        MiddleName:
          type: string
          x-ballerina-name: middleName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
        SecondLastName:
          type: string
          x-ballerina-name: secondLastName
        PreferredLastName:
          type: string
          x-ballerina-name: preferredLastName
        Suffix:
          type: string
          x-ballerina-name: suffix
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        DisplayName:
          type: string
          x-ballerina-name: displayName
        LastName:
          type: string
          x-ballerina-name: lastName
        NewXRefCode:
          type: string
          x-ballerina-name: newXRefCode
        CommonName:
          type: string
          x-ballerina-name: commonName
        MaidenName:
          type: string
          x-ballerina-name: maidenName
    PayloadIEnumerableReportMetadata:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/ReportMetadata'
          x-ballerina-name: data
    AssignedSexComplianceCode:
      type: object
      properties:
        ComplianceCode:
          type: string
          x-ballerina-name: complianceCode
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    PayloadIEnumerableEmployeeUKTaxDetails:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeUKTaxDetails'
          x-ballerina-name: data
    PayloadIEnumerablePayClass:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/PayClass'
          x-ballerina-name: data
    SkillLevel:
      type: object
      properties:
        RankOrder:
          type: integer
          format: int32
          x-ballerina-name: rankOrder
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    EmployeeAvailabilityDaysPostRequestDTO:
      required:
      - IsAvailable
      type: object
      properties:
        IsAvailable:
          type: boolean
          x-ballerina-name: isAvailable
        EndTime1:
          type: string
          x-ballerina-name: endTime1
        StartTime2:
          type: string
          x-ballerina-name: startTime2
        EndTime2:
          type: string
          x-ballerina-name: endTime2
        StartTime1:
          type: string
          x-ballerina-name: startTime1
    Certifications:
      type: object
      properties:
        _Total:
          type: integer
          format: int32
          x-ballerina-name: total
        Values:
          type: array
          items:
            $ref: '#/components/schemas/CertificationDetails'
          x-ballerina-name: values
    MetadataModel:
      type: object
      properties:
        IsExtended:
          type: boolean
          x-ballerina-name: isExtended
        MetadataId:
          type: string
          x-ballerina-name: metadataId
        Title:
          type: string
          x-ballerina-name: title
        Rules:
          type: array
          items:
            $ref: '#/components/schemas/AmfRuleModel'
          x-ballerina-name: rules
        GeoContext:
          allOf:
          - $ref: '#/components/schemas/ContextLevel'
          x-ballerina-name: geoContext
        DfAuthorize:
          allOf:
          - $ref: '#/components/schemas/AmfAuthorize'
          x-ballerina-name: dfAuthorize
        ShortDescription:
          type: string
          x-ballerina-name: shortDescription
        Name:
          type: string
          x-ballerina-name: name
        MetadataFields:
          type: array
          items:
            $ref: '#/components/schemas/MetadataField'
          x-ballerina-name: metadataFields
        MetadataModelCollections:
          type: array
          items:
            $ref: '#/components/schemas/MetadataModelCollection'
          x-ballerina-name: metadataModelCollections
        LongDescription:
          type: string
          x-ballerina-name: longDescription
        IsCommon:
          type: boolean
          x-ballerina-name: isCommon
        Mappings:
          type: object
          additionalProperties:
            type: string
          x-ballerina-name: mappings
        DayforcePropertyName:
          type: string
          readOnly: true
          x-ballerina-name: dayforcePropertyName
        MetadataModels:
          type: array
          items:
            $ref: '#/components/schemas/MetadataModel'
          x-ballerina-name: metadataModels
        Validators:
          type: array
          items:
            $ref: '#/components/schemas/AmfValidationModel'
          x-ballerina-name: validators
        IsEffectiveDatedContiguous:
          type: boolean
          x-ballerina-name: isEffectiveDatedContiguous
        CompositeFields:
          type: array
          items:
            type: string
          x-ballerina-name: compositeFields
        OnCUDActions:
          type: array
          items:
            $ref: '#/components/schemas/AmfOnCUDActionModel'
          x-ballerina-name: onCUDActions
        Id:
          type: string
          x-ballerina-name: id
        ApplicationMapping:
          type: string
          readOnly: true
          x-ballerina-name: applicationMapping
        SchemaName:
          type: string
          x-ballerina-name: schemaName
        DbTable:
          type: string
          x-ballerina-name: dbTable
    LaborMetricsCodePostPatchResponse:
      type: object
      properties:
        LaborMetricsCodePostPatchResponseXRefCode:
          type: string
          x-ballerina-name: laborMetricsCodePostPatchResponseXRefCode
    LinkDetails:
      type: object
      properties:
        Url:
          type: string
          x-ballerina-name: url
    EmployeeDependentBeneficiary:
      type: object
      properties:
        SocialSecurityNumber:
          type: string
          x-ballerina-name: socialSecurityNumber
        SocialSecurityDisabilityAwardDate:
          type: string
          format: date-time
          x-ballerina-name: socialSecurityDisabilityAwardDate
        TobaccoUser:
          type: string
          x-ballerina-name: tobaccoUser
        FirstName:
          type: string
          x-ballerina-name: firstName
        IsDisabled:
          type: boolean
          x-ballerina-name: isDisabled
        IsActiveDependent:
          type: boolean
          x-ballerina-name: isActiveDependent
        SSNExpiryDate:
          type: string
          format: date-time
          x-ballerina-name: sSNExpiryDate
        Gender:
          type: string
          x-ballerina-name: gender
        MiddleName:
          type: string
          x-ballerina-name: middleName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
        DateLastSmoked:
          type: string
          format: date-time
          x-ballerina-name: dateLastSmoked
        IsStudent:
          type: boolean
          x-ballerina-name: isStudent
        Addresses:
          allOf:
          - $ref: '#/components/schemas/EmployeeDependentsBeneficiariesAddressCollection'
          x-ballerina-name: addresses
        MaritalStatus:
          allOf:
          - $ref: '#/components/schemas/MaritalStatus'
          x-ballerina-name: maritalStatus
        Contacts:
          allOf:
          - $ref: '#/components/schemas/EmployeeDependentsBeneficiariesContactCollection'
          x-ballerina-name: contacts
        IsActiveBeneficiary:
          type: boolean
          x-ballerina-name: isActiveBeneficiary
        Relationship:
          allOf:
          - $ref: '#/components/schemas/RelationshipType'
          x-ballerina-name: relationship
        LastName:
          type: string
          x-ballerina-name: lastName
        IsDependent:
          type: boolean
          x-ballerina-name: isDependent
        IsBeneficiary:
          type: boolean
          x-ballerina-name: isBeneficiary
        BirthDate:
          type: string
          format: date-time
          x-ballerina-name: birthDate
    LaborValidationFilters:
      type: object
      properties:
        FilterXRefCodes:
          type: array
          items:
            $ref: '#/components/schemas/LaborValidationMetricFilterXRefCodes'
          x-ballerina-name: filterXRefCodes
        LaborValidationPolicyXRefCode:
          type: string
          x-ballerina-name: laborValidationPolicyXRefCode
    FinancialInstitution:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    TrainingProgram:
      type: object
      properties:
        TrainingProgramCode:
          type: string
          x-ballerina-name: trainingProgramCode
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
        TrainingProgramCourse:
          type: array
          items:
            $ref: '#/components/schemas/TrainingProgramCourse'
          x-ballerina-name: trainingProgramCourse
    EmployeePayrollTaxCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeePayrollTax'
          x-ballerina-name: items
    EarningDefinition:
      type: object
      properties:
        PRPensionPaymentType:
          type: string
          x-ballerina-name: pRPensionPaymentType
        AllowPayee:
          type: boolean
          x-ballerina-name: allowPayee
        Generated:
          type: boolean
          x-ballerina-name: generated
        Description:
          type: string
          x-ballerina-name: description
        PayeeCategoryName:
          type: string
          x-ballerina-name: payeeCategoryName
        SeparateCheckXRefCode:
          type: string
          x-ballerina-name: separateCheckXRefCode
        Countries:
          type: array
          items:
            $ref: '#/components/schemas/EarningCountry'
          x-ballerina-name: countries
        PayeeCategoryXRefCode:
          type: string
          x-ballerina-name: payeeCategoryXRefCode
        GrossedUp:
          type: boolean
          x-ballerina-name: grossedUp
        SeparateCheckName:
          type: string
          x-ballerina-name: separateCheckName
        PayEntryRates:
          type: boolean
          x-ballerina-name: payEntryRates
        SourceTypeName:
          type: string
          x-ballerina-name: sourceTypeName
        Name:
          type: string
          x-ballerina-name: name
        PREarningBenefitCategory:
          type: string
          x-ballerina-name: pREarningBenefitCategory
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        SourceTypeXRefCode:
          type: string
          x-ballerina-name: sourceTypeXRefCode
        EIRefund:
          type: boolean
          x-ballerina-name: eIRefund
        Payees:
          type: array
          items:
            $ref: '#/components/schemas/EarningPayee'
          x-ballerina-name: payees
        DisplayName:
          type: string
          x-ballerina-name: displayName
    EmployeeUKNIDetailsCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeUKNIDetails'
          x-ballerina-name: items
    WorkLocationOverride:
      type: object
      properties:
        Description:
          type: string
          x-ballerina-name: description
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        LocationAddress:
          allOf:
          - $ref: '#/components/schemas/LocationAddress'
          x-ballerina-name: locationAddress
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
        County:
          type: string
          x-ballerina-name: county
        LocationName:
          type: string
          x-ballerina-name: locationName
    EmployeeDependentsBeneficiariesContact:
      type: object
      properties:
        Extension:
          type: string
          x-ballerina-name: extension
        EffectiveEnd:
          type: string
          format: date-time
          x-ballerina-name: effectiveEnd
        IsUnlistedNumber:
          type: boolean
          x-ballerina-name: isUnlistedNumber
        EffectiveStart:
          type: string
          format: date-time
          x-ballerina-name: effectiveStart
        ContactNumber:
          type: string
          x-ballerina-name: contactNumber
        Country:
          allOf:
          - $ref: '#/components/schemas/Country'
          x-ballerina-name: country
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
        ContactInformationType:
          allOf:
          - $ref: '#/components/schemas/ContactInformationType'
          x-ballerina-name: contactInformationType
    PayloadEmployeeVOE:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          allOf:
          - $ref: '#/components/schemas/EmployeeVOE'
          x-ballerina-name: data
    TFNExemptionReason:
      type: object
      properties:
        PayrollShortName:
          type: string
          x-ballerina-name: payrollShortName
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    PayloadEmployeeVOI:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          allOf:
          - $ref: '#/components/schemas/EmployeeVOI'
          x-ballerina-name: data
    EmployeeTrainingProgramCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeTrainingProgram'
          x-ballerina-name: items
    EmployeeDocumentManagementSecurityGroup:
      type: object
      properties:
        DocMgmtSecurityGroup:
          allOf:
          - $ref: '#/components/schemas/DocMgmtSecurityGroup'
          x-ballerina-name: docMgmtSecurityGroup
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    EmployeeUKStudentLoan:
      type: object
      properties:
        EffectiveEnd:
          type: string
          format: date-time
          x-ballerina-name: effectiveEnd
        StudentLoanPlanType:
          type: integer
          format: int32
          x-ballerina-name: studentLoanPlanType
        LegalEntityXrefCode:
          type: string
          x-ballerina-name: legalEntityXrefCode
        EffectiveStart:
          type: string
          format: date-time
          x-ballerina-name: effectiveStart
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    OnboardingPolicy:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    PRGLSplitSetDetailCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/PRGLSplitSetDetail'
          x-ballerina-name: items
    PayloadIEnumerableEmployeeHealthWellness:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeHealthWellness'
          x-ballerina-name: data
    EmployeeIRLTaxPRSI:
      type: object
      properties:
        EffectiveEnd:
          type: string
          format: date-time
          x-ballerina-name: effectiveEnd
        LegalEntity:
          allOf:
          - $ref: '#/components/schemas/LegalEntity'
          x-ballerina-name: legalEntity
        PRSIExemptReasonXrefCode:
          type: string
          x-ballerina-name: pRSIExemptReasonXrefCode
        LegalEntityXrefCode:
          type: string
          x-ballerina-name: legalEntityXrefCode
        PrsiClass:
          allOf:
          - $ref: '#/components/schemas/PRSIClass'
          x-ballerina-name: prsiClass
        CompanyDirector:
          type: string
          x-ballerina-name: companyDirector
        PrsiExemptReason:
          allOf:
          - $ref: '#/components/schemas/PRSIExemptReason'
          x-ballerina-name: prsiExemptReason
        PRSIExempt:
          type: boolean
          x-ballerina-name: pRSIExempt
        EffectiveStart:
          type: string
          format: date-time
          x-ballerina-name: effectiveStart
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
        PRSIClassXrefCode:
          type: string
          x-ballerina-name: pRSIClassXrefCode
        CommunityEmployment:
          type: boolean
          x-ballerina-name: communityEmployment
    HighlyCompensatedEmployeeCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeHighlyCompensatedEmployeeIndicator'
          x-ballerina-name: items
    PayloadPayGroupCalendar:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          allOf:
          - $ref: '#/components/schemas/PayGroupCalendar'
          x-ballerina-name: data
    PayloadIEnumerableEmployeeUKNIDetails:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeUKNIDetails'
          x-ballerina-name: data
    PayloadIEnumerableExtensibleProperty:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/ExtensibleProperty'
          x-ballerina-name: data
    PayPolicy:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    EmployeeIRLTaxEWSSCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeIRLTaxEWSS'
          x-ballerina-name: items
    PositionTerm:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    HRIncidentBodyPart:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    AppUser:
      type: object
      properties:
        Display24HourTime:
          type: boolean
          x-ballerina-name: display24HourTime
        AllowNativeAuthentication:
          type: boolean
          x-ballerina-name: allowNativeAuthentication
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
        IsApproved:
          type: boolean
          x-ballerina-name: isApproved
    MedicareLevyExemptionType:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    DataEntry:
      type: object
      properties:
        BusinessDate:
          type: string
          format: date-time
          x-ballerina-name: businessDate
        DoNotDisburseToPayee:
          type: boolean
          x-ballerina-name: doNotDisburseToPayee
        PeriodStart:
          type: string
          format: date-time
          x-ballerina-name: periodStart
        WorkLocation:
          type: string
          x-ballerina-name: workLocation
        TaxAuthorityInstance:
          type: string
          x-ballerina-name: taxAuthorityInstance
        PayOutAccurals:
          type: boolean
          x-ballerina-name: payOutAccurals
        PeriodEnd:
          type: string
          format: date-time
          x-ballerina-name: periodEnd
        WorkersCompAccountName:
          type: string
          x-ballerina-name: workersCompAccountName
        PayDate:
          type: string
          format: date-time
          x-ballerina-name: payDate
        OrderedAmountTypeXRefCode:
          type: string
          x-ballerina-name: orderedAmountTypeXRefCode
        Currency:
          type: string
          x-ballerina-name: currency
        EmployeeXRefCode:
          type: string
          x-ballerina-name: employeeXRefCode
        LegalEntityName:
          type: string
          x-ballerina-name: legalEntityName
        PayGroupXRefCode:
          type: string
          x-ballerina-name: payGroupXRefCode
        DataEntryXRefCode:
          type: integer
          format: int64
          x-ballerina-name: dataEntryXRefCode
        CheckTemplateXRefCode:
          type: string
          x-ballerina-name: checkTemplateXRefCode
        CodeXRefCode:
          type: string
          x-ballerina-name: codeXRefCode
        LaborPercent:
          type: boolean
          x-ballerina-name: laborPercent
        CodeName:
          type: string
          x-ballerina-name: codeName
        SavedAt:
          type: string
          format: date-time
          x-ballerina-name: savedAt
        Rate:
          type: number
          format: double
          x-ballerina-name: rate
        LimitAmount:
          type: number
          format: double
          x-ballerina-name: limitAmount
        TrailingTaxationPeriodStart:
          type: string
          format: date-time
          x-ballerina-name: trailingTaxationPeriodStart
        FLSAAdjustEndDate:
          type: string
          format: date-time
          x-ballerina-name: fLSAAdjustEndDate
        DisposableEarningAmount:
          type: number
          format: double
          x-ballerina-name: disposableEarningAmount
        PayPeriodsForTax:
          type: integer
          format: int32
          x-ballerina-name: payPeriodsForTax
        DocketName:
          type: string
          x-ballerina-name: docketName
        ProjectXRefCode:
          type: string
          x-ballerina-name: projectXRefCode
        LaborMetrics:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeLaborMetrics'
          x-ballerina-name: laborMetrics
        WorkersCompAccountNumber:
          type: string
          x-ballerina-name: workersCompAccountNumber
        EmployeeName:
          type: string
          x-ballerina-name: employeeName
        ImportIdentifier:
          type: string
          x-ballerina-name: importIdentifier
        CheckTemplateName:
          type: string
          x-ballerina-name: checkTemplateName
        ApplyROEMapping:
          type: boolean
          x-ballerina-name: applyROEMapping
        Message:
          type: string
          x-ballerina-name: message
        Hours:
          type: number
          format: double
          x-ballerina-name: hours
        ProjectName:
          type: string
          x-ballerina-name: projectName
        DebitArrears:
          type: boolean
          x-ballerina-name: debitArrears
        SavedBy:
          type: string
          x-ballerina-name: savedBy
        PayrollFrequencyType:
          type: string
          x-ballerina-name: payrollFrequencyType
        PayPeriodNumber:
          type: string
          x-ballerina-name: payPeriodNumber
        PPN:
          type: string
          x-ballerina-name: pPN
        WorkLocationXRefCode:
          type: string
          x-ballerina-name: workLocationXRefCode
        DocketXRefCode:
          type: string
          x-ballerina-name: docketXRefCode
        OrderPercent:
          type: number
          format: double
          x-ballerina-name: orderPercent
        ImportSet:
          type: string
          x-ballerina-name: importSet
        JobAssignmentXRefCode:
          type: string
          x-ballerina-name: jobAssignmentXRefCode
        WorkersCompCode:
          type: string
          x-ballerina-name: workersCompCode
        OrderedAmountType:
          type: string
          x-ballerina-name: orderedAmountType
        Replace:
          type: boolean
          x-ballerina-name: replace
        TrailingTaxationPeriodEnd:
          type: string
          format: date-time
          x-ballerina-name: trailingTaxationPeriodEnd
        Amount:
          type: number
          format: double
          x-ballerina-name: amount
        EditSet:
          type: string
          x-ballerina-name: editSet
        EmployeeNumber:
          type: string
          x-ballerina-name: employeeNumber
        JobAssignmentName:
          type: string
          x-ballerina-name: jobAssignmentName
        OffCyclePayRunXrefCode:
          type: string
          x-ballerina-name: offCyclePayRunXrefCode
        LegalEntityXrefCode:
          type: string
          x-ballerina-name: legalEntityXrefCode
        EntryType:
          type: string
          x-ballerina-name: entryType
        LegalEntityIdNumber:
          type: string
          x-ballerina-name: legalEntityIdNumber
        CodeType:
          type: string
          x-ballerina-name: codeType
        PayrollFrequencyName:
          type: string
          x-ballerina-name: payrollFrequencyName
        FLSAAdjustStartDate:
          type: string
          format: date-time
          x-ballerina-name: fLSAAdjustStartDate
        SourceSystem:
          type: string
          x-ballerina-name: sourceSystem
    PaginatedPayloadIEnumerablePolicyAssociation:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Paging:
          allOf:
          - $ref: '#/components/schemas/Paging'
          x-ballerina-name: paging
        Data:
          type: array
          items:
            $ref: '#/components/schemas/PolicyAssociation'
          x-ballerina-name: data
    PaginatedPayloadIEnumerableEmployeeScheduleExtended:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Paging:
          allOf:
          - $ref: '#/components/schemas/Paging'
          x-ballerina-name: paging
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeScheduleExtended'
          x-ballerina-name: data
    EmployeeDisabilityCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeDisability'
          x-ballerina-name: items
    LaborDemand:
      type: object
      properties:
        OrgUnitXRefCode:
          type: string
          x-ballerina-name: orgUnitXRefCode
        SchedulePeriodStart:
          type: string
          format: date-time
          x-ballerina-name: schedulePeriodStart
        LaborDemands:
          type: array
          items:
            $ref: '#/components/schemas/LaborDemandItem'
          x-ballerina-name: laborDemands
    EmployeeDefaultLabor:
      type: object
      properties:
        EffectiveEnd:
          type: string
          format: date-time
          x-ballerina-name: effectiveEnd
        Project:
          allOf:
          - $ref: '#/components/schemas/Project'
          x-ballerina-name: project
        PayAdjCode:
          allOf:
          - $ref: '#/components/schemas/PayAdjCode'
          x-ballerina-name: payAdjCode
        Position:
          allOf:
          - $ref: '#/components/schemas/Position'
          x-ballerina-name: position
        Docket:
          allOf:
          - $ref: '#/components/schemas/Docket'
          x-ballerina-name: docket
        EffectiveStart:
          type: string
          format: date-time
          x-ballerina-name: effectiveStart
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
        EmployeeDefaultLaborMetricsCodes:
          allOf:
          - $ref: '#/components/schemas/EmployeeDefaultLaborMetricsCodeCollection'
          x-ballerina-name: employeeDefaultLaborMetricsCodes
        Location:
          allOf:
          - $ref: '#/components/schemas/Location'
          x-ballerina-name: location
    EmployeeHRPolicy:
      type: object
      properties:
        SignOff:
          type: boolean
          x-ballerina-name: signOff
        SignOffDate:
          type: string
          format: date-time
          x-ballerina-name: signOffDate
        HRPolicy:
          allOf:
          - $ref: '#/components/schemas/HRPolicy'
          x-ballerina-name: hRPolicy
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    EmployeeRole:
      type: object
      properties:
        IsDefault:
          type: boolean
          x-ballerina-name: isDefault
        Role:
          allOf:
          - $ref: '#/components/schemas/Role'
          x-ballerina-name: role
        EffectiveEnd:
          type: string
          format: date-time
          x-ballerina-name: effectiveEnd
        EffectiveStart:
          type: string
          format: date-time
          x-ballerina-name: effectiveStart
        IsPrestartRole:
          type: boolean
          x-ballerina-name: isPrestartRole
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    EmployeeMUSTaxDetailsCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeMUSTaxDetails'
          x-ballerina-name: items
    UploadedBy:
      type: object
      properties:
        LoginId:
          type: string
          x-ballerina-name: loginId
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        DisplayName:
          type: string
          x-ballerina-name: displayName
    PayloadListPayee:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/Payee'
          x-ballerina-name: data
    ProjectsPostResponse:
      type: object
      properties:
        ProjectsPostResponseXRefCode:
          type: string
          x-ballerina-name: projectsPostResponseXRefCode
    NameAffix:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    LaborMetricCodes:
      type: object
      properties:
        EffectiveEnd:
          type: string
          format: date-time
          x-ballerina-name: effectiveEnd
        LedgerCode:
          type: string
          x-ballerina-name: ledgerCode
        Description:
          type: string
          x-ballerina-name: description
        OrgXRefCodes:
          type: array
          items:
            type: string
          x-ballerina-name: orgXRefCodes
        LaborMetricsTypeXRefCode:
          type: string
          x-ballerina-name: laborMetricsTypeXRefCode
        EffectiveStart:
          type: string
          format: date-time
          x-ballerina-name: effectiveStart
        ClockTransferCode:
          type: string
          x-ballerina-name: clockTransferCode
        LaborMetricsCodeXRefCode:
          type: string
          x-ballerina-name: laborMetricsCodeXRefCode
        Name:
          type: string
          x-ballerina-name: name
    LastNamePrefix:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    AmfRuleParameterModel:
      type: object
      properties:
        InnerParameter:
          allOf:
          - $ref: '#/components/schemas/AmfRuleParameterModel'
          x-ballerina-name: innerParameter
        Value:
          type: object
          x-ballerina-name: value
        InputName:
          type: string
          x-ballerina-name: inputName
        DataType:
          type: string
          x-ballerina-name: dataType
        AccessType:
          type: string
          x-ballerina-name: accessType
    PaginatedPayloadReport:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Paging:
          allOf:
          - $ref: '#/components/schemas/Paging'
          x-ballerina-name: paging
        Data:
          allOf:
          - $ref: '#/components/schemas/Report'
          x-ballerina-name: data
    ExtensibleProperty:
      type: object
      properties:
        EntityType:
          type: string
          x-ballerina-name: entityType
        EffectiveEnd:
          type: string
          format: date-time
          x-ballerina-name: effectiveEnd
        Comment:
          type: string
          x-ballerina-name: comment
        SavedAt:
          type: string
          x-ballerina-name: savedAt
        PropertyValues:
          type: array
          items:
            $ref: '#/components/schemas/PropertyValue'
          x-ballerina-name: propertyValues
        EntityName:
          type: string
          x-ballerina-name: entityName
        TypeCode:
          type: string
          x-ballerina-name: typeCode
        EntityXRefCode:
          type: string
          x-ballerina-name: entityXRefCode
        SavedBy:
          type: integer
          format: int32
          x-ballerina-name: savedBy
        EffectiveStart:
          type: string
          format: date-time
          x-ballerina-name: effectiveStart
        CountryCode:
          type: string
          x-ballerina-name: countryCode
    BenefitsDFLinkExportEarningGroupingCustomPeriodResults:
      type: object
      properties:
        LegalEntityXrefCode:
          type: string
          x-ballerina-name: legalEntityXrefCode
        CustomPeriodXrefCode:
          type: string
          x-ballerina-name: customPeriodXrefCode
        RecordType:
          type: string
          x-ballerina-name: recordType
        Hours:
          type: number
          format: double
          x-ballerina-name: hours
        EarningGroupingXrefCode:
          type: string
          x-ballerina-name: earningGroupingXrefCode
    PayloadListReportMetadata:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/ReportMetadata'
          x-ballerina-name: data
    OperatingHours:
      type: object
      properties:
        OrgUnitXRefCode:
          type: string
          x-ballerina-name: orgUnitXRefCode
        OperatingHours:
          type: array
          items:
            $ref: '#/components/schemas/OperatingHoursItem'
          x-ballerina-name: operatingHours
        EffectiveEnd:
          type: string
          format: date-time
          x-ballerina-name: effectiveEnd
        EffectiveStart:
          type: string
          format: date-time
          x-ballerina-name: effectiveStart
    EmployeeOrgUnitInfoCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeOrgUnitInformation'
          x-ballerina-name: items
    EmployeeSchedulePayCalendar:
      type: object
      properties:
        EffectiveEnd:
          type: string
          format: date-time
          x-ballerina-name: effectiveEnd
        EffectiveStart:
          type: string
          format: date-time
          x-ballerina-name: effectiveStart
        CalendarStart:
          type: string
          format: date-time
          x-ballerina-name: calendarStart
        CalendarEnd:
          type: string
          format: date-time
          x-ballerina-name: calendarEnd
    EmployeeClockDeviceGroupCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeClockDeviceGroup'
          x-ballerina-name: items
    EmployeeScheduleExtended:
      type: object
      properties:
        EmployeeScheduleXRefCode:
          type: string
          readOnly: true
          x-ballerina-name: employeeScheduleXRefCode
        OrgUnitXRefCode:
          type: string
          x-ballerina-name: orgUnitXRefCode
        OrgUnitCode:
          type: string
          x-ballerina-name: orgUnitCode
        OrgUnitLedgerCode:
          type: string
          x-ballerina-name: orgUnitLedgerCode
        ProjectName:
          type: string
          x-ballerina-name: projectName
        JobName:
          type: string
          x-ballerina-name: jobName
        OrgUnitIsStore:
          type: boolean
          x-ballerina-name: orgUnitIsStore
        TimeEnd:
          type: string
          format: date-time
          x-ballerina-name: timeEnd
        Segments:
          type: array
          items:
            $ref: '#/components/schemas/Segment'
          x-ballerina-name: segments
        OrgLocationTypeName:
          type: string
          x-ballerina-name: orgLocationTypeName
        TimeStart:
          type: string
          format: date-time
          x-ballerina-name: timeStart
        Skills:
          type: array
          items:
            $ref: '#/components/schemas/Skills'
          x-ballerina-name: skills
        DocketXRefCode:
          type: string
          x-ballerina-name: docketXRefCode
        EmployeeXRefCode:
          type: string
          x-ballerina-name: employeeXRefCode
        NetHours:
          type: number
          format: double
          x-ballerina-name: netHours
        OrgUnitClockCode:
          type: string
          x-ballerina-name: orgUnitClockCode
        DepartmentXRefCode:
          type: string
          x-ballerina-name: departmentXRefCode
        EmployeePropertyValues:
          type: object
          additionalProperties:
            type: string
          x-ballerina-name: employeePropertyValues
        PayAdjCodeXRefCode:
          type: string
          x-ballerina-name: payAdjCodeXRefCode
        Activities:
          type: array
          items:
            $ref: '#/components/schemas/ScheduleActivityExtended'
          x-ballerina-name: activities
        Comment:
          type: string
          x-ballerina-name: comment
        Breaks:
          type: array
          items:
            $ref: '#/components/schemas/Breaks'
          x-ballerina-name: breaks
        Position:
          allOf:
          - $ref: '#/components/schemas/EmployeeSchedulePosition'
          x-ballerina-name: position
        JobXRefCode:
          type: string
          x-ballerina-name: jobXRefCode
        OrgUnitName:
          type: string
          x-ballerina-name: orgUnitName
        PayAdjCodeName:
          type: string
          x-ballerina-name: payAdjCodeName
        OrgLocationTypeXRefCode:
          type: string
          x-ballerina-name: orgLocationTypeXRefCode
        Employee:
          allOf:
          - $ref: '#/components/schemas/ScheduleEmployee'
          x-ballerina-name: employee
        DocketName:
          type: string
          x-ballerina-name: docketName
        ProjectXRefCode:
          type: string
          x-ballerina-name: projectXRefCode
        LaborMetrics:
          type: array
          items:
            $ref: '#/components/schemas/ScheduleLaborMetricExtended'
          x-ballerina-name: laborMetrics
        DepartmentName:
          type: string
          x-ballerina-name: departmentName
        Published:
          type: boolean
          x-ballerina-name: published
        PayCalendar:
          allOf:
          - $ref: '#/components/schemas/EmployeeSchedulePayCalendar'
          x-ballerina-name: payCalendar
    EmployeeBalanceTransactionForSubmit:
      type: object
      properties:
        Comment:
          type: string
          x-ballerina-name: comment
        EmployeeXRefCode:
          type: string
          x-ballerina-name: employeeXRefCode
        Value:
          type: number
          format: double
          x-ballerina-name: value
        BalanceXRefCode:
          type: string
          x-ballerina-name: balanceXRefCode
        TransactionDate:
          type: string
          format: date-time
          x-ballerina-name: transactionDate
    PaginatedPayloadIEnumerableEmployeePayrollElection:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Paging:
          allOf:
          - $ref: '#/components/schemas/Paging'
          x-ballerina-name: paging
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeePayrollElection'
          x-ballerina-name: data
    PRPayeeDeduction:
      type: object
      properties:
        PayeeXRefCode:
          type: string
          x-ballerina-name: payeeXRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        PaymentMethodCode:
          type: string
          x-ballerina-name: paymentMethodCode
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    EmployeeAvailability:
      type: object
      properties:
        IsDefault:
          type: boolean
          x-ballerina-name: isDefault
        UnAvailable:
          type: boolean
          x-ballerina-name: unAvailable
        EndTime1:
          type: string
          x-ballerina-name: endTime1
        StartTime2:
          type: string
          x-ballerina-name: startTime2
        EndTime2:
          type: string
          x-ballerina-name: endTime2
        DateOfRequest:
          type: string
          format: date-time
          x-ballerina-name: dateOfRequest
        StartTime1:
          type: string
          x-ballerina-name: startTime1
    GLSplitSetUpsert:
      type: object
      properties:
        OrgUnitXRefCode:
          type: string
          x-ballerina-name: orgUnitXRefCode
        EffectiveEnd:
          type: string
          format: date-time
          x-ballerina-name: effectiveEnd
        GLSplitSetDetails:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeGLSplitSetDetailUpsert'
          x-ballerina-name: gLSplitSetDetails
        EffectiveStart:
          type: string
          format: date-time
          x-ballerina-name: effectiveStart
        DeptJobXRefCode:
          type: string
          x-ballerina-name: deptJobXRefCode
    Earning:
      type: object
      properties:
        CreditJournalNumber:
          type: string
          x-ballerina-name: creditJournalNumber
        IsGenerated:
          type: boolean
          x-ballerina-name: isGenerated
        CalculationType:
          allOf:
          - $ref: '#/components/schemas/CalculationType'
          x-ballerina-name: calculationType
        IsDecliningBalance:
          type: boolean
          x-ballerina-name: isDecliningBalance
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        DebitJournalNumber:
          type: string
          x-ballerina-name: debitJournalNumber
        EarningCode:
          allOf:
          - $ref: '#/components/schemas/EarningCode'
          x-ballerina-name: earningCode
        DisplayName:
          type: string
          x-ballerina-name: displayName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    EmployeePunch:
      type: object
      properties:
        TimeStartRaw:
          type: string
          format: date-time
          x-ballerina-name: timeStartRaw
        TimeEndRaw:
          type: string
          format: date-time
          x-ballerina-name: timeEndRaw
        BusinessDate:
          type: string
          format: date-time
          x-ballerina-name: businessDate
        StartExceptionCode:
          type: string
          x-ballerina-name: startExceptionCode
        FuturePunch:
          type: boolean
          x-ballerina-name: futurePunch
        MealBreaks:
          type: array
          items:
            $ref: '#/components/schemas/MealBreaks'
          x-ballerina-name: mealBreaks
        TimeEnd:
          type: string
          format: date-time
          x-ballerina-name: timeEnd
        TimeStart:
          type: string
          format: date-time
          x-ballerina-name: timeStart
        PositionXRefCode:
          type: string
          x-ballerina-name: positionXRefCode
        DocketXRefCode:
          type: string
          x-ballerina-name: docketXRefCode
        EmployeeXRefCode:
          type: string
          x-ballerina-name: employeeXRefCode
        IsOnCall:
          type: boolean
          x-ballerina-name: isOnCall
        LocationXRefCode:
          type: string
          x-ballerina-name: locationXRefCode
        EndExceptionCode:
          type: string
          x-ballerina-name: endExceptionCode
        ManagerComment:
          type: string
          x-ballerina-name: managerComment
        PayAdjustmentXRefCode:
          type: string
          x-ballerina-name: payAdjustmentXRefCode
        LastModifiedTimestampUtc:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestampUtc
        NetHours:
          type: number
          format: double
          x-ballerina-name: netHours
        DepartmentXRefCode:
          type: string
          x-ballerina-name: departmentXRefCode
        EmployeeComment:
          type: string
          x-ballerina-name: employeeComment
        PunchStatus:
          type: string
          x-ballerina-name: punchStatus
        IsDeleted:
          type: boolean
          x-ballerina-name: isDeleted
        JobXRefCode:
          type: string
          x-ballerina-name: jobXRefCode
        DocketQuantity:
          type: number
          format: double
          x-ballerina-name: docketQuantity
        PunchXRefCode:
          type: string
          x-ballerina-name: punchXRefCode
        ProjectXRefCode:
          type: string
          x-ballerina-name: projectXRefCode
        AssumedTimeEnd:
          type: string
          format: date-time
          x-ballerina-name: assumedTimeEnd
        LaborMetrics:
          type: array
          items:
            $ref: '#/components/schemas/LaborMetrics'
          x-ballerina-name: laborMetrics
        Transfers:
          type: array
          items:
            $ref: '#/components/schemas/Transfers'
          x-ballerina-name: transfers
        AssumedTimeStart:
          type: string
          format: date-time
          x-ballerina-name: assumedTimeStart
    EarningPayeeEarningParameter:
      type: object
      properties:
        ElementParamName:
          type: string
          x-ballerina-name: elementParamName
        Value:
          type: number
          format: double
          x-ballerina-name: value
        ElementParamCodeName:
          type: string
          x-ballerina-name: elementParamCodeName
    DocumentType:
      type: object
      properties:
        Description:
          type: string
          x-ballerina-name: description
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        ShortName:
          type: string
          x-ballerina-name: shortName
    JobFamily:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    ProjectForSubmit:
      type: object
      properties:
        ProjectTypeXRefCode:
          type: string
          x-ballerina-name: projectTypeXRefCode
        ProjectPriority:
          type: integer
          format: int32
          x-ballerina-name: projectPriority
        ProjectPhaseXRefCode:
          type: string
          x-ballerina-name: projectPhaseXRefCode
        DepartmentAssignment:
          allOf:
          - $ref: '#/components/schemas/ProjectAssignmentType'
          x-ballerina-name: departmentAssignment
        ShortName:
          type: string
          x-ballerina-name: shortName
        BudgetAmount:
          type: number
          format: double
          x-ballerina-name: budgetAmount
        StartDate:
          type: string
          format: date-time
          x-ballerina-name: startDate
        EmployeeAssignment:
          allOf:
          - $ref: '#/components/schemas/ProjectAssignmentType'
          x-ballerina-name: employeeAssignment
        AccountNum:
          type: string
          x-ballerina-name: accountNum
        CertifiedPayrollProjectNumber:
          type: string
          x-ballerina-name: certifiedPayrollProjectNumber
        ProductModuleXRefCode:
          type: string
          x-ballerina-name: productModuleXRefCode
        PctComplete:
          type: number
          format: double
          x-ballerina-name: pctComplete
        CreationOrgUnitXRefCodes:
          type: array
          items:
            type: string
          x-ballerina-name: creationOrgUnitXRefCodes
        DueDate:
          type: string
          format: date-time
          x-ballerina-name: dueDate
        DeptJobAssignment:
          allOf:
          - $ref: '#/components/schemas/ProjectAssignmentType'
          x-ballerina-name: deptJobAssignment
        IFRSClassification:
          type: boolean
          x-ballerina-name: iFRSClassification
        ParentProjectXRefCode:
          type: string
          x-ballerina-name: parentProjectXRefCode
        IsDeleted:
          type: boolean
          x-ballerina-name: isDeleted
        BudgetHours:
          type: number
          format: double
          x-ballerina-name: budgetHours
        TaxLocationAddressXRefCode:
          type: string
          x-ballerina-name: taxLocationAddressXRefCode
        ClockTransferCode:
          type: string
          x-ballerina-name: clockTransferCode
        CompletedDate:
          type: string
          format: date-time
          x-ballerina-name: completedDate
        IsResidentAddressUsedForTaxation:
          type: boolean
          x-ballerina-name: isResidentAddressUsedForTaxation
        LedgerCode:
          type: string
          x-ballerina-name: ledgerCode
        ProductGroupXRefCode:
          type: string
          x-ballerina-name: productGroupXRefCode
        ProjectXRefCode:
          type: string
          x-ballerina-name: projectXRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        PayCodeXRefCodeChargeToHours:
          allOf:
          - $ref: '#/components/schemas/ProjectAssignmentType'
          x-ballerina-name: payCodeXRefCodeChargeToHours
        ProjectClientXRefCode:
          type: string
          x-ballerina-name: projectClientXRefCode
        PayCodeXRefCodeChargeToAmount:
          allOf:
          - $ref: '#/components/schemas/ProjectAssignmentType'
          x-ballerina-name: payCodeXRefCodeChargeToAmount
        IsCOEProject:
          type: boolean
          x-ballerina-name: isCOEProject
    EmployeeLocation:
      type: object
      properties:
        IsDefault:
          type: boolean
          x-ballerina-name: isDefault
        EffectiveEnd:
          type: string
          format: date-time
          x-ballerina-name: effectiveEnd
        IsPrimary:
          type: boolean
          x-ballerina-name: isPrimary
        EffectiveStart:
          type: string
          format: date-time
          x-ballerina-name: effectiveStart
        EmployeeLocationAuthorities:
          allOf:
          - $ref: '#/components/schemas/EmployeeLocationAuthorityCollection'
          x-ballerina-name: employeeLocationAuthorities
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
        Location:
          allOf:
          - $ref: '#/components/schemas/Location'
          x-ballerina-name: location
    PaginatedPayloadEarningStatementHeader:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Paging:
          allOf:
          - $ref: '#/components/schemas/Paging'
          x-ballerina-name: paging
        Data:
          allOf:
          - $ref: '#/components/schemas/EarningStatementHeader'
          x-ballerina-name: data
    CitizenshipType:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    BenefitsDFLinkExportOrgUnit:
      type: object
      properties:
        LegalEntity:
          type: string
          x-ballerina-name: legalEntity
        RecordType:
          type: string
          x-ballerina-name: recordType
        OrgUnitCode:
          type: string
          x-ballerina-name: orgUnitCode
        OrgLevelCode:
          type: string
          x-ballerina-name: orgLevelCode
        OrgUnitLedgerCode:
          type: string
          x-ballerina-name: orgUnitLedgerCode
        OrgUnitName:
          type: string
          x-ballerina-name: orgUnitName
        OrgUnitWorkSiteZipCode:
          type: string
          x-ballerina-name: orgUnitWorkSiteZipCode
    EmployeeLocationAuthorityCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeLocationAuthority'
          x-ballerina-name: items
    EmployeePropertyValueCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeePropertyValue'
          x-ballerina-name: items
    EmployeeSchedulePolicy:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    EmployeeProperty:
      type: object
      properties:
        IsEditable:
          type: boolean
          x-ballerina-name: isEditable
        DataTypeParam:
          type: string
          x-ballerina-name: dataTypeParam
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        DataType:
          type: integer
          format: int32
          x-ballerina-name: dataType
        ShortName:
          type: string
          x-ballerina-name: shortName
        Sequence:
          type: integer
          format: int32
          x-ballerina-name: sequence
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
        EmployeeCardinality:
          type: integer
          format: int32
          x-ballerina-name: employeeCardinality
        GenerateHREvent:
          type: boolean
          x-ballerina-name: generateHREvent
    PayloadPayClass:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          allOf:
          - $ref: '#/components/schemas/PayClass'
          x-ballerina-name: data
    JobSet:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        Grade:
          type: integer
          format: int32
          x-ballerina-name: grade
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    PayloadAnalyticsReportMetadata:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          allOf:
          - $ref: '#/components/schemas/AnalyticsReportMetadata'
          x-ballerina-name: data
    ImportSetModel:
      type: object
      properties:
        DataEntries:
          type: array
          items:
            $ref: '#/components/schemas/DataEntryDeleteModel'
          x-ballerina-name: dataEntries
        ImportSetName:
          type: string
          x-ballerina-name: importSetName
    BackgroundScreeningReport:
      type: object
      properties:
        ScreeningRequestId:
          type: string
          x-ballerina-name: screeningRequestId
        CandidatePII:
          allOf:
          - $ref: '#/components/schemas/CandidatePersonalIdentifiableInformation'
          x-ballerina-name: candidatePII
    EmployeeDeductionLimitCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeDeductionLimit'
          x-ballerina-name: items
    PayloadIEnumerableLocationAddresses:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/LocationAddresses'
          x-ballerina-name: data
    EmployeeEmploymentAgreement:
      type: object
      properties:
        EmploymentAgreementDuration:
          allOf:
          - $ref: '#/components/schemas/EmploymentAgreementDuration'
          x-ballerina-name: employmentAgreementDuration
        EmploymentAgreementDetails:
          allOf:
          - $ref: '#/components/schemas/EmploymentAgreementDetails'
          x-ballerina-name: employmentAgreementDetails
        EmploymentAgreementPopulation:
          allOf:
          - $ref: '#/components/schemas/EmploymentAgreementPopulation'
          x-ballerina-name: employmentAgreementPopulation
        GovernmentIdentifier:
          type: string
          x-ballerina-name: governmentIdentifier
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
        EmploymentAgreementTaxRegime:
          allOf:
          - $ref: '#/components/schemas/EmploymentAgreementTaxRegime'
          x-ballerina-name: employmentAgreementTaxRegime
        EffectiveEnd:
          type: string
          format: date-time
          x-ballerina-name: effectiveEnd
        AgreementReason:
          allOf:
          - $ref: '#/components/schemas/EmploymentStatusReason'
          x-ballerina-name: agreementReason
        AgreementEndReason:
          allOf:
          - $ref: '#/components/schemas/EmploymentStatusReason'
          x-ballerina-name: agreementEndReason
        XRefCode:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
          x-ballerina-name: xRefCode
        EmploymentAgreementSettlement:
          allOf:
          - $ref: '#/components/schemas/EmploymentAgreementSettlement'
          x-ballerina-name: employmentAgreementSettlement
        EffectiveStart:
          type: string
          format: date-time
          x-ballerina-name: effectiveStart
        EmploymentAgreementType:
          allOf:
          - $ref: '#/components/schemas/EmploymentAgreementType'
          x-ballerina-name: employmentAgreementType
        Country:
          allOf:
          - $ref: '#/components/schemas/Country'
          x-ballerina-name: country
    SkillType:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
        IsWFM:
          type: boolean
          x-ballerina-name: isWFM
    PayloadIEnumerableEmployeeManager:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeManager'
          x-ballerina-name: data
    EmployeeRawPunchForSubmit:
      type: object
      properties:
        MealWaiver:
          type: string
          x-ballerina-name: mealWaiver
        PunchType:
          type: string
          x-ballerina-name: punchType
        EmployeeBadge:
          type: string
          x-ballerina-name: employeeBadge
        SupervisorBadge:
          type: string
          x-ballerina-name: supervisorBadge
        BreakAttestation:
          type: boolean
          x-ballerina-name: breakAttestation
        Quantity:
          type: number
          format: double
          x-ballerina-name: quantity
        ProjectClockTransferCode:
          type: string
          x-ballerina-name: projectClockTransferCode
        PositionClockTransferCode:
          type: string
          x-ballerina-name: positionClockTransferCode
        RawPunchTime:
          type: string
          x-ballerina-name: rawPunchTime
        PositionXRefCode:
          type: string
          x-ballerina-name: positionXRefCode
        DocketClockTransferCode:
          type: string
          x-ballerina-name: docketClockTransferCode
        ProjectXRefCode:
          type: string
          x-ballerina-name: projectXRefCode
        DocketXRefCode:
          type: string
          x-ballerina-name: docketXRefCode
        LaborMetrics:
          type: array
          items:
            $ref: '#/components/schemas/PunchLaborMetric'
          x-ballerina-name: laborMetrics
        PunchDevice:
          type: string
          x-ballerina-name: punchDevice
        LocationXRefCode:
          type: string
          x-ballerina-name: locationXRefCode
        LocationClockTransferCode:
          type: string
          x-ballerina-name: locationClockTransferCode
    Country:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
        Name:
          type: string
          x-ballerina-name: name
    OrgUnitDetailConfiguration:
      type: object
      properties:
        Timezone:
          allOf:
          - $ref: '#/components/schemas/TimeZone'
          x-ballerina-name: timezone
        Address:
          allOf:
          - $ref: '#/components/schemas/Address'
          x-ballerina-name: address
        OrgLevel:
          allOf:
          - $ref: '#/components/schemas/OrgLevel'
          x-ballerina-name: orgLevel
        OrgUnitParent:
          allOf:
          - $ref: '#/components/schemas/OrgUnitParent'
          x-ballerina-name: orgUnitParent
        ParentSortOrder:
          type: integer
          format: int32
          x-ballerina-name: parentSortOrder
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
        IsPhysicalLocation:
          type: boolean
          x-ballerina-name: isPhysicalLocation
        EffectiveEnd:
          type: string
          format: date-time
          x-ballerina-name: effectiveEnd
        LedgerCode:
          type: string
          x-ballerina-name: ledgerCode
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        TaxLocationAddress:
          allOf:
          - $ref: '#/components/schemas/LocationAddress'
          x-ballerina-name: taxLocationAddress
        EffectiveStart:
          type: string
          format: date-time
          x-ballerina-name: effectiveStart
        IsPrimary:
          type: boolean
          x-ballerina-name: isPrimary
        ChildSortOrder:
          type: integer
          format: int32
          x-ballerina-name: childSortOrder
    AdditionalTaxType:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    PayloadIEnumerableEmployeeAUSSuperannuation:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeAUSSuperannuation'
          x-ballerina-name: data
    DisabilityEvidenceIssuingAgency:
      type: object
      properties:
        DisabilityEvidenceIssuingAgencyId:
          type: integer
          format: int32
          x-ballerina-name: disabilityEvidenceIssuingAgencyId
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    EmployeeHRIncident:
      type: object
      properties:
        OrgUnit:
          allOf:
          - $ref: '#/components/schemas/OrgUnitDetailConfiguration'
          x-ballerina-name: orgUnit
        DoctorName:
          type: string
          x-ballerina-name: doctorName
        EmergencyRoom:
          type: boolean
          x-ballerina-name: emergencyRoom
        DaysLost:
          type: number
          format: double
          x-ballerina-name: daysLost
        CausedObject:
          type: string
          x-ballerina-name: causedObject
        PrivacyCase:
          type: boolean
          x-ballerina-name: privacyCase
        OpenDate:
          type: string
          format: date-time
          x-ballerina-name: openDate
        HRIncidentBeganWork:
          type: string
          format: date-time
          x-ballerina-name: hRIncidentBeganWork
        HRIncidentState:
          type: string
          x-ballerina-name: hRIncidentState
        HRIncidentBodyPart:
          allOf:
          - $ref: '#/components/schemas/HRIncidentBodyPart'
          x-ballerina-name: hRIncidentBodyPart
        HRIncidentDate:
          type: string
          format: date-time
          x-ballerina-name: hRIncidentDate
        SafetyHealthType:
          allOf:
          - $ref: '#/components/schemas/SafetyHealthType'
          x-ballerina-name: safetyHealthType
        HospitalOvernight:
          type: boolean
          x-ballerina-name: hospitalOvernight
        HRIncidentNotes:
          allOf:
          - $ref: '#/components/schemas/EmployeeHRIncidentNoteCollection'
          x-ballerina-name: hRIncidentNotes
        HRIncidentArea:
          type: string
          x-ballerina-name: hRIncidentArea
        Hospital:
          type: string
          x-ballerina-name: hospital
        HRIncidentEventTime:
          type: string
          format: date-time
          x-ballerina-name: hRIncidentEventTime
        HRIncidentType:
          allOf:
          - $ref: '#/components/schemas/HRIncidentType'
          x-ballerina-name: hRIncidentType
        CausedAction:
          type: string
          x-ballerina-name: causedAction
        HRIncidentAction:
          allOf:
          - $ref: '#/components/schemas/HRIncidentAction'
          x-ballerina-name: hRIncidentAction
        TaskBeingPerformed:
          type: string
          x-ballerina-name: taskBeingPerformed
        Died:
          type: boolean
          x-ballerina-name: died
        HospitalStreet:
          type: string
          x-ballerina-name: hospitalStreet
        IsDaysLost:
          type: boolean
          x-ballerina-name: isDaysLost
        AssignedToUserXRefCode:
          type: string
          x-ballerina-name: assignedToUserXRefCode
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
        EmployeeComplainantXRefCode:
          type: string
          x-ballerina-name: employeeComplainantXRefCode
        HospitalStateCode:
          type: string
          x-ballerina-name: hospitalStateCode
        HospitalCity:
          type: string
          x-ballerina-name: hospitalCity
        HospitalZip:
          type: string
          x-ballerina-name: hospitalZip
        QuestionableClaim:
          type: boolean
          x-ballerina-name: questionableClaim
        DaysRestricted:
          type: number
          format: double
          x-ballerina-name: daysRestricted
        WCBCaseNumber:
          type: string
          x-ballerina-name: wCBCaseNumber
        DateReturnToWork:
          type: string
          format: date-time
          x-ballerina-name: dateReturnToWork
        ClosedDate:
          type: string
          format: date-time
          x-ballerina-name: closedDate
        HRIncidentInjury:
          allOf:
          - $ref: '#/components/schemas/HRIncidentInjury'
          x-ballerina-name: hRIncidentInjury
        DateDied:
          type: string
          format: date-time
          x-ballerina-name: dateDied
    PayloadIEnumerableLocation:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/Location'
          x-ballerina-name: data
    PayloadIEnumerablePersonContact:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/PersonContact'
          x-ballerina-name: data
    PayloadArchiveDocument:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          allOf:
          - $ref: '#/components/schemas/ArchiveDocument'
          x-ballerina-name: data
    EmployeeAUSSuperannuation:
      type: object
      properties:
        EffectiveEnd:
          type: string
          format: date-time
          x-ballerina-name: effectiveEnd
        SuperannuationContributionCalcValue:
          type: number
          format: double
          x-ballerina-name: superannuationContributionCalcValue
        SuperannuationContributionCalculationType:
          allOf:
          - $ref: '#/components/schemas/SuperannuationContributionCalculationType'
          x-ballerina-name: superannuationContributionCalculationType
        SuperannuationContributionType:
          allOf:
          - $ref: '#/components/schemas/SuperannuationContributionType'
          x-ballerina-name: superannuationContributionType
        PayrollDeduction:
          allOf:
          - $ref: '#/components/schemas/PayrollDeduction'
          x-ballerina-name: payrollDeduction
        EffectiveStart:
          type: string
          format: date-time
          x-ballerina-name: effectiveStart
        SuperannuationType:
          allOf:
          - $ref: '#/components/schemas/SuperannuationType'
          x-ballerina-name: superannuationType
        MembershipNumber:
          type: string
          x-ballerina-name: membershipNumber
        PayrollPayee:
          allOf:
          - $ref: '#/components/schemas/PayrollPayeeInfo'
          x-ballerina-name: payrollPayee
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    PayloadIEnumerableEmployeeWorkLocationOverride:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeWorkLocationOverride'
          x-ballerina-name: data
    BenefitsDFLinkExportRecord:
      type: object
      properties:
        PropertyDetails:
          type: array
          items:
            $ref: '#/components/schemas/BenefitsDFLinkExportProperty'
          x-ballerina-name: propertyDetails
        UnionMembershipDetails:
          type: array
          items:
            $ref: '#/components/schemas/BenefitsDFLinkExportUnionMembership'
          x-ballerina-name: unionMembershipDetails
        ContactDetails:
          type: array
          items:
            $ref: '#/components/schemas/BenefitsDFLinkExportContact'
          x-ballerina-name: contactDetails
        AddressDetails:
          type: array
          items:
            $ref: '#/components/schemas/BenefitsDFLinkExportAddress'
          x-ballerina-name: addressDetails
        EmployeeElectionDetails:
          type: array
          items:
            $ref: '#/components/schemas/BenefitsDFLinkExportEmployeeElectionDetail'
          x-ballerina-name: employeeElectionDetails
        BeneficiaryDetails:
          type: array
          items:
            $ref: '#/components/schemas/BenefitsDFLinkExportBeneficiaryRecord'
          x-ballerina-name: beneficiaryDetails
        EarningGroupingResults:
          type: array
          items:
            $ref: '#/components/schemas/BenefitsDFLinkExportEarningGroupingResults'
          x-ballerina-name: earningGroupingResults
        OrgUnitDetails:
          type: array
          items:
            $ref: '#/components/schemas/BenefitsDFLinkExportOrgUnit'
          x-ballerina-name: orgUnitDetails
        EarningGroupingCustomPeriodResults:
          type: array
          items:
            $ref: '#/components/schemas/BenefitsDFLinkExportEarningGroupingCustomPeriodResults'
          x-ballerina-name: earningGroupingCustomPeriodResults
        EmployeeDetails:
          allOf:
          - $ref: '#/components/schemas/BenefitsDFLinkExportEmployeeRecord'
          x-ballerina-name: employeeDetails
        DependentDetails:
          type: array
          items:
            $ref: '#/components/schemas/BenefitsDFLinkExportDependentRecord'
          x-ballerina-name: dependentDetails
    BenefitsDFLinkExportEmployeeRecord:
      type: object
      properties:
        NormalSemiMonthlyHoursBottom:
          type: number
          format: double
          x-ballerina-name: normalSemiMonthlyHoursBottom
        PayGroupCode:
          type: string
          x-ballerina-name: payGroupCode
        PayRunCheckDate:
          type: string
          format: date-time
          x-ballerina-name: payRunCheckDate
        ManagerEmail:
          type: string
          x-ballerina-name: managerEmail
        NormalSemiMonthlyHoursTop:
          type: number
          format: double
          x-ballerina-name: normalSemiMonthlyHoursTop
        WorkedInState:
          type: string
          x-ballerina-name: workedInState
        DisabilityEndDate:
          type: string
          format: date-time
          x-ballerina-name: disabilityEndDate
        PayPeriodEndDate:
          type: string
          format: date-time
          x-ballerina-name: payPeriodEndDate
        VirtualIndicator:
          type: boolean
          x-ballerina-name: virtualIndicator
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        ManagerLastName:
          type: string
          x-ballerina-name: managerLastName
        HireDate:
          type: string
          format: date-time
          x-ballerina-name: hireDate
        NameSuffix:
          type: string
          x-ballerina-name: nameSuffix
        EmploymentStatusEndDate:
          type: string
          format: date-time
          x-ballerina-name: employmentStatusEndDate
        BadgeNumber:
          type: string
          x-ballerina-name: badgeNumber
        BaseSalary:
          type: number
          format: double
          x-ballerina-name: baseSalary
        DateOfBirth:
          type: string
          format: date-time
          x-ballerina-name: dateOfBirth
        GenderCode:
          type: integer
          format: int32
          x-ballerina-name: genderCode
        TobaccoUseEffectiveEnd:
          type: string
          format: date-time
          x-ballerina-name: tobaccoUseEffectiveEnd
        PayFrequencyCode:
          type: integer
          format: int32
          x-ballerina-name: payFrequencyCode
        EmploymentStatusStartDate:
          type: string
          format: date-time
          x-ballerina-name: employmentStatusStartDate
        Citizenship:
          type: string
          x-ballerina-name: citizenship
        EmploymentStatus:
          type: string
          x-ballerina-name: employmentStatus
        EmployeeGroupCode:
          type: string
          x-ballerina-name: employeeGroupCode
        GenderIdentity:
          type: string
          x-ballerina-name: genderIdentity
        DateLastSmoked:
          type: string
          format: date-time
          x-ballerina-name: dateLastSmoked
        Weight:
          type: integer
          format: int32
          x-ballerina-name: weight
        IsAboriginal:
          type: boolean
          x-ballerina-name: isAboriginal
        WorkAssignmentEffectiveEnd:
          type: string
          format: date-time
          x-ballerina-name: workAssignmentEffectiveEnd
        MaritalStatusCode:
          type: string
          x-ballerina-name: maritalStatusCode
        TobaccoSubstanceUse:
          type: boolean
          x-ballerina-name: tobaccoSubstanceUse
        EmploymentStatusReasonCode:
          type: string
          x-ballerina-name: employmentStatusReasonCode
        LastName:
          type: string
          x-ballerina-name: lastName
        IncomeFrequency:
          type: integer
          format: int32
          x-ballerina-name: incomeFrequency
        SeniorityDate:
          type: string
          format: date-time
          x-ballerina-name: seniorityDate
        PayPeriodStartDate:
          type: string
          format: date-time
          x-ballerina-name: payPeriodStartDate
        MedicareReasonCode:
          type: integer
          format: int32
          x-ballerina-name: medicareReasonCode
        NationalIDExpiryDate:
          type: string
          format: date-time
          x-ballerina-name: nationalIDExpiryDate
        PayTypeCode:
          type: string
          x-ballerina-name: payTypeCode
        TobaccoUseEffectiveStart:
          type: string
          format: date-time
          x-ballerina-name: tobaccoUseEffectiveStart
        BaseRate:
          type: number
          format: double
          x-ballerina-name: baseRate
        WorkAssignmentEffectiveStart:
          type: string
          format: date-time
          x-ballerina-name: workAssignmentEffectiveStart
        AverageDailyHours:
          type: number
          format: double
          x-ballerina-name: averageDailyHours
        DisabilityBeginDate:
          type: string
          format: date-time
          x-ballerina-name: disabilityBeginDate
        DepartmentJobNameCode:
          type: string
          x-ballerina-name: departmentJobNameCode
        RecordType:
          type: string
          x-ballerina-name: recordType
        IsVisibleMinority:
          type: boolean
          x-ballerina-name: isVisibleMinority
        NormalWeeklyHours:
          type: number
          format: double
          x-ballerina-name: normalWeeklyHours
        CultureCode:
          type: string
          x-ballerina-name: cultureCode
        Height:
          type: integer
          format: int32
          x-ballerina-name: height
        DateOfDeath:
          type: string
          format: date-time
          x-ballerina-name: dateOfDeath
        MedicareStatus:
          type: integer
          format: int32
          x-ballerina-name: medicareStatus
        Age:
          type: integer
          format: int32
          x-ballerina-name: age
        InitialNoticeFlag:
          type: boolean
          x-ballerina-name: initialNoticeFlag
        OriginalHireDate:
          type: string
          format: date-time
          x-ballerina-name: originalHireDate
        PayClassCode:
          type: string
          x-ballerina-name: payClassCode
        FirstName:
          type: string
          x-ballerina-name: firstName
        TerminationDate:
          type: string
          format: date-time
          x-ballerina-name: terminationDate
        NationalId:
          type: string
          x-ballerina-name: nationalId
        EmployeeNumber:
          type: string
          x-ballerina-name: employeeNumber
        MiddleName:
          type: string
          x-ballerina-name: middleName
        ManagerPhoneNumber:
          type: string
          x-ballerina-name: managerPhoneNumber
        PositionLedgerCode:
          type: string
          x-ballerina-name: positionLedgerCode
        Ethnicity:
          type: string
          x-ballerina-name: ethnicity
        ManagerFirstName:
          type: string
          x-ballerina-name: managerFirstName
        DisabilityCode:
          type: boolean
          x-ballerina-name: disabilityCode
        EmploymentIndicatorCode:
          type: string
          x-ballerina-name: employmentIndicatorCode
    EmployeeAssignedSexAndGenderIdentityCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeAssignedSexAndGenderIdentity'
          x-ballerina-name: items
    EmployeePropertyValue:
      type: object
      properties:
        EffectiveEnd:
          type: string
          format: date-time
          x-ballerina-name: effectiveEnd
        BitValue:
          type: boolean
          x-ballerina-name: bitValue
        DateTimeValue:
          type: string
          format: date-time
          x-ballerina-name: dateTimeValue
        NumberValue:
          type: number
          format: double
          x-ballerina-name: numberValue
        EffectiveStart:
          type: string
          format: date-time
          x-ballerina-name: effectiveStart
        OptionValue:
          allOf:
          - $ref: '#/components/schemas/EmployeePropertyOption'
          x-ballerina-name: optionValue
        StringValue:
          type: string
          x-ballerina-name: stringValue
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
        EmployeeProperty:
          allOf:
          - $ref: '#/components/schemas/EmployeeProperty'
          x-ballerina-name: employeeProperty
    EmployeeDirectDepositCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeDirectDeposit'
          x-ballerina-name: items
    EmployeeOrgUnitInformation:
      type: object
      properties:
        Department:
          allOf:
          - $ref: '#/components/schemas/Department'
          x-ballerina-name: department
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
        OrgUnitDetail:
          allOf:
          - $ref: '#/components/schemas/OrgUnitDetailConfiguration'
          x-ballerina-name: orgUnitDetail
    PayrollPayeeInfo:
      type: object
      properties:
        BSBCode:
          type: string
          x-ballerina-name: bSBCode
        ShowEmployeeDetails:
          type: boolean
          x-ballerina-name: showEmployeeDetails
        Category:
          allOf:
          - $ref: '#/components/schemas/PayrollPayeeCategory'
          x-ballerina-name: category
        CombineEarningsandDeductions:
          type: boolean
          x-ballerina-name: combineEarningsandDeductions
        IsActive:
          type: boolean
          x-ballerina-name: isActive
        CombineEmployees:
          type: boolean
          x-ballerina-name: combineEmployees
        PostalCode:
          type: string
          x-ballerina-name: postalCode
        USI:
          type: string
          x-ballerina-name: uSI
        ShortName:
          type: string
          x-ballerina-name: shortName
        City:
          type: string
          x-ballerina-name: city
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
        ABN:
          type: string
          x-ballerina-name: aBN
        AccountNumber:
          type: string
          x-ballerina-name: accountNumber
        AddressLine3:
          type: string
          x-ballerina-name: addressLine3
        AddressLine2:
          type: string
          x-ballerina-name: addressLine2
        ESA:
          type: string
          x-ballerina-name: eSA
        AddressLine1:
          type: string
          x-ballerina-name: addressLine1
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        State:
          type: string
          x-ballerina-name: state
        PaymentMethod:
          allOf:
          - $ref: '#/components/schemas/PayrollPaymentMethod'
          x-ballerina-name: paymentMethod
        AllowNegativeAmounts:
          type: boolean
          x-ballerina-name: allowNegativeAmounts
        CountryCode:
          type: string
          x-ballerina-name: countryCode
        IsDeductionPayee:
          type: boolean
          x-ballerina-name: isDeductionPayee
    I9Order:
      type: object
      properties:
        OrderStatusXRefCode:
          type: string
          x-ballerina-name: orderStatusXRefCode
        I9OrderId:
          type: string
          x-ballerina-name: i9OrderId
        EVerify:
          allOf:
          - $ref: '#/components/schemas/EVerify'
          x-ballerina-name: eVerify
    OperatingHoursExceptionPOST:
      type: object
      properties:
        OrgUnitXRefCode:
          type: string
          x-ballerina-name: orgUnitXRefCode
        OpHrsPatternException:
          type: integer
          format: int64
          x-ballerina-name: opHrsPatternException
        OperatingHoursDayPattern:
          allOf:
          - $ref: '#/components/schemas/OperatingHoursDayPattern'
          x-ballerina-name: operatingHoursDayPattern
        EffectiveEnd:
          type: string
          format: date-time
          x-ballerina-name: effectiveEnd
        OpHrsPatternAssignment:
          type: integer
          format: int64
          x-ballerina-name: opHrsPatternAssignment
        EffectiveStart:
          type: string
          format: date-time
          x-ballerina-name: effectiveStart
        OperatingHoursExceptionDay:
          type: array
          items:
            $ref: '#/components/schemas/OperatingHoursExceptionDay'
          x-ballerina-name: operatingHoursExceptionDay
    OperatingHoursItem:
      type: object
      properties:
        OpenTime:
          type: string
          format: date-time
          x-ballerina-name: openTime
        IsException:
          type: integer
          format: int32
          x-ballerina-name: isException
        LongName:
          type: string
          x-ballerina-name: longName
        CloseTime:
          type: string
          format: date-time
          x-ballerina-name: closeTime
        ShortName:
          type: string
          x-ballerina-name: shortName
        IsClosed:
          type: integer
          format: int32
          x-ballerina-name: isClosed
        NoDayPattern:
          type: integer
          format: int32
          x-ballerina-name: noDayPattern
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
        Client:
          type: integer
          format: int32
          x-ballerina-name: client
        Day:
          type: string
          format: date-time
          x-ballerina-name: day
    PayloadListEarningStatementDocument:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EarningStatementDocument'
          x-ballerina-name: data
    EmployeeCANFederalTax:
      type: object
      properties:
        IncomeLessThanClaim:
          type: boolean
          x-ballerina-name: incomeLessThanClaim
        AdditionalAmount:
          type: number
          format: double
          x-ballerina-name: additionalAmount
        TotalClaimAmount:
          type: number
          format: double
          x-ballerina-name: totalClaimAmount
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
        EstimatedExpense:
          type: number
          format: double
          x-ballerina-name: estimatedExpense
        MultipleEmployer:
          type: boolean
          x-ballerina-name: multipleEmployer
        EffectiveEnd:
          type: string
          format: date-time
          x-ballerina-name: effectiveEnd
        IsNonResident:
          type: boolean
          x-ballerina-name: isNonResident
        DistrictTaxDeduction:
          type: number
          format: double
          x-ballerina-name: districtTaxDeduction
        AuthorizedTaxCredits:
          type: number
          format: double
          x-ballerina-name: authorizedTaxCredits
        EstimatedRemuneration:
          type: number
          format: double
          x-ballerina-name: estimatedRemuneration
        EffectiveStart:
          type: string
          format: date-time
          x-ballerina-name: effectiveStart
        PrescribedAreaDeduction:
          type: number
          format: double
          x-ballerina-name: prescribedAreaDeduction
    PayrollPaymentMethod:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    EmployeeEmploymentStatus:
      type: object
      properties:
        NormalSemiMonthlyHoursBottom:
          type: number
          format: double
          x-ballerina-name: normalSemiMonthlyHoursBottom
        VacationRate:
          type: number
          format: double
          x-ballerina-name: vacationRate
        EmploymentStatusGroup:
          allOf:
          - $ref: '#/components/schemas/EmploymentStatusGroup'
          x-ballerina-name: employmentStatusGroup
        PayPolicy:
          allOf:
          - $ref: '#/components/schemas/PayPolicy'
          x-ballerina-name: payPolicy
        PayTypeGroup:
          allOf:
          - $ref: '#/components/schemas/PayTypeGroup'
          x-ballerina-name: payTypeGroup
        NormalSemiMonthlyHoursTop:
          type: number
          format: double
          x-ballerina-name: normalSemiMonthlyHoursTop
        BaseRate:
          type: number
          format: double
          x-ballerina-name: baseRate
        EmploymentStatusReason:
          allOf:
          - $ref: '#/components/schemas/EmploymentStatusReason'
          x-ballerina-name: employmentStatusReason
        TimeOffPolicy:
          allOf:
          - $ref: '#/components/schemas/TimeOffPolicy'
          x-ballerina-name: timeOffPolicy
        AverageDailyHours:
          type: number
          format: double
          x-ballerina-name: averageDailyHours
        EntitlementPolicy:
          allOf:
          - $ref: '#/components/schemas/EntitlementPolicy'
          x-ballerina-name: entitlementPolicy
        CreateShiftRotationShift:
          type: boolean
          x-ballerina-name: createShiftRotationShift
        EffectiveEnd:
          type: string
          format: date-time
          x-ballerina-name: effectiveEnd
        AttendancePolicy:
          allOf:
          - $ref: '#/components/schemas/AttendancePolicy'
          x-ballerina-name: attendancePolicy
        ScheduleChangePolicy:
          allOf:
          - $ref: '#/components/schemas/ScheduleChangePolicy'
          x-ballerina-name: scheduleChangePolicy
        NormalWeeklyHours:
          type: number
          format: double
          x-ballerina-name: normalWeeklyHours
        ShiftTradePolicy:
          allOf:
          - $ref: '#/components/schemas/ShiftTradePolicy'
          x-ballerina-name: shiftTradePolicy
        EffectiveStart:
          type: string
          format: date-time
          x-ballerina-name: effectiveStart
        AverageOvertimeRate:
          type: number
          format: double
          x-ballerina-name: averageOvertimeRate
        SchedulePolicy:
          allOf:
          - $ref: '#/components/schemas/EmployeeSchedulePolicy'
          x-ballerina-name: schedulePolicy
        BaseSalary:
          type: number
          format: double
          x-ballerina-name: baseSalary
        TargetBonus:
          type: number
          format: double
          x-ballerina-name: targetBonus
        OvertimeGroup:
          allOf:
          - $ref: '#/components/schemas/EmployeeOvertimeGroup'
          x-ballerina-name: overtimeGroup
        PayGroup:
          allOf:
          - $ref: '#/components/schemas/PayGroup'
          x-ballerina-name: payGroup
        PayClass:
          allOf:
          - $ref: '#/components/schemas/PayClass'
          x-ballerina-name: payClass
        EmployeeNumber:
          type: string
          x-ballerina-name: employeeNumber
        BaseRateManuallySet:
          type: boolean
          x-ballerina-name: baseRateManuallySet
        EmploymentStatus:
          allOf:
          - $ref: '#/components/schemas/EmploymentStatus'
          x-ballerina-name: employmentStatus
        PeriodicSalary:
          type: number
          format: double
          x-ballerina-name: periodicSalary
        AlternateRate:
          type: number
          format: double
          x-ballerina-name: alternateRate
        PayType:
          allOf:
          - $ref: '#/components/schemas/PayType'
          x-ballerina-name: payType
        ShiftRotation:
          allOf:
          - $ref: '#/components/schemas/ShiftRotation'
          x-ballerina-name: shiftRotation
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
        DEUHoursChangeReason:
          allOf:
          - $ref: '#/components/schemas/DEUHoursChangeReason'
          x-ballerina-name: dEUHoursChangeReason
        PayHolidayGroup:
          allOf:
          - $ref: '#/components/schemas/PayHolidayGroup'
          x-ballerina-name: payHolidayGroup
        DailyRate:
          type: number
          format: double
          x-ballerina-name: dailyRate
        OriginalEffectiveStart:
          type: string
          format: date-time
          x-ballerina-name: originalEffectiveStart
        AuthorizationPolicy:
          allOf:
          - $ref: '#/components/schemas/AuthorizationPolicy'
          x-ballerina-name: authorizationPolicy
        ShiftRotationDayOffset:
          type: integer
          format: int64
          x-ballerina-name: shiftRotationDayOffset
        JobStepPolicy:
          allOf:
          - $ref: '#/components/schemas/JobStepPolicy'
          x-ballerina-name: jobStepPolicy
        EmployeeGroup:
          allOf:
          - $ref: '#/components/schemas/EmployeeGroup'
          x-ballerina-name: employeeGroup
        OriginalEffectiveEnd:
          type: string
          format: date-time
          x-ballerina-name: originalEffectiveEnd
        LastPayEditDate:
          type: string
          format: date-time
          x-ballerina-name: lastPayEditDate
        PayrollPolicy:
          allOf:
          - $ref: '#/components/schemas/PayrollPolicy'
          x-ballerina-name: payrollPolicy
        WorkContractPremiumPolicy:
          allOf:
          - $ref: '#/components/schemas/WorkContractPremiumPolicy'
          x-ballerina-name: workContractPremiumPolicy
        OriginalEmploymentStatus:
          allOf:
          - $ref: '#/components/schemas/EmploymentStatus'
          x-ballerina-name: originalEmploymentStatus
        PunchPolicy:
          allOf:
          - $ref: '#/components/schemas/PunchPolicy'
          x-ballerina-name: punchPolicy
        ShiftRotationStartDate:
          type: string
          format: date-time
          x-ballerina-name: shiftRotationStartDate
    PayloadIEnumerableEmployeeDependentBeneficiary:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeDependentBeneficiary'
          x-ballerina-name: data
    AnalyticsDatasetMetadataResponse:
      type: object
      properties:
        Status:
          type: string
          x-ballerina-name: status
        DifferenceCount:
          type: integer
          description: Difference between report row counts
          format: int32
          x-ballerina-name: differenceCount
        EndedTimestamp:
          type: string
          description: Ended refresh Timestamp
          format: date-time
          x-ballerina-name: endedTimestamp
        Parameters:
          type: string
          description: Report Parameters
          x-ballerina-name: parameters
        Message:
          type: string
          description: Message returned to user
          x-ballerina-name: message
        ReportId:
          type: integer
          description: Report Id
          format: int32
          x-ballerina-name: reportId
        TotalPages:
          type: integer
          description: Total number of pages for given dataset
          format: int32
          x-ballerina-name: totalPages
        StartedTimestamp:
          type: string
          description: Started refresh Timestamp
          format: date-time
          x-ballerina-name: startedTimestamp
        LastModifiedTimestamp:
          type: string
          description: Last modified timestamp of report
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
        RefreshStatus:
          type: string
          description: RefreshStatus
          x-ballerina-name: refreshStatus
        DatasetId:
          type: string
          description: Dataset Id
          x-ballerina-name: datasetId
        Filters:
          type: string
          description: Report Filters
          x-ballerina-name: filters
        CreatedDate:
          type: string
          description: Created Date of report
          format: date-time
          x-ballerina-name: createdDate
        RowCount:
          type: string
          description: Row count in the dataset
          x-ballerina-name: rowCount
    PayrollEmployeeEarningParameter:
      type: object
      properties:
        EmployeeElectedValue:
          type: number
          format: double
          x-ballerina-name: employeeElectedValue
        ShortName:
          type: string
          x-ballerina-name: shortName
        PayGroupDefaultValue:
          type: number
          format: double
          x-ballerina-name: payGroupDefaultValue
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
        ParamCodeName:
          type: string
          x-ballerina-name: paramCodeName
    EmployeeHRPolicyCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeHRPolicy'
          x-ballerina-name: items
    TimeOffPolicy:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    BenefitsDFLinkExportBeneficiaryRecord:
      type: object
      properties:
        EmployeeNationalId:
          type: string
          x-ballerina-name: employeeNationalId
        DateOfBirth:
          type: string
          format: date-time
          x-ballerina-name: dateOfBirth
        GenderCode:
          type: integer
          format: int32
          x-ballerina-name: genderCode
        BeneficiaryElectionDetails:
          type: array
          items:
            $ref: '#/components/schemas/BenefitsDFLinkExportBeneficiaryElectionDetail'
          x-ballerina-name: beneficiaryElectionDetails
        AddressDetails:
          type: array
          items:
            $ref: '#/components/schemas/BenefitsDFLinkExportAddress'
          x-ballerina-name: addressDetails
        FirstName:
          type: string
          x-ballerina-name: firstName
        NationalId:
          type: string
          x-ballerina-name: nationalId
        NationalIDExpiryDate:
          type: string
          format: date-time
          x-ballerina-name: nationalIDExpiryDate
        MiddleName:
          type: string
          x-ballerina-name: middleName
        RecordType:
          type: string
          x-ballerina-name: recordType
        ContactDetails:
          type: array
          items:
            $ref: '#/components/schemas/BenefitsDFLinkExportContact'
          x-ballerina-name: contactDetails
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        RelationshipCode:
          type: string
          x-ballerina-name: relationshipCode
        HomePhoneNumber:
          type: string
          x-ballerina-name: homePhoneNumber
        UniqueBeneficiaryId:
          type: integer
          format: int32
          x-ballerina-name: uniqueBeneficiaryId
        LastName:
          type: string
          x-ballerina-name: lastName
    EmployeeUKNIDetails:
      type: object
      properties:
        EffectiveEnd:
          type: string
          format: date-time
          x-ballerina-name: effectiveEnd
        LegalEntityXrefCode:
          type: string
          x-ballerina-name: legalEntityXrefCode
        Annual:
          type: boolean
          x-ballerina-name: annual
        DirectorStartDate:
          type: string
          format: date-time
          x-ballerina-name: directorStartDate
        IsDirector:
          type: boolean
          x-ballerina-name: isDirector
        EffectiveStart:
          type: string
          format: date-time
          x-ballerina-name: effectiveStart
        ChangeReasonXrefCode:
          type: string
          x-ballerina-name: changeReasonXrefCode
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
        NILetterXrefCode:
          type: string
          x-ballerina-name: nILetterXrefCode
    LaborValidationQualifier:
      type: object
      properties:
        Active:
          type: boolean
          x-ballerina-name: active
        Description:
          type: string
          x-ballerina-name: description
        CodeName:
          type: string
          x-ballerina-name: codeName
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        Models:
          type: array
          items:
            $ref: '#/components/schemas/LaborValidationModel'
          x-ballerina-name: models
        Sequence:
          type: integer
          format: int32
          x-ballerina-name: sequence
        Children:
          type: array
          items:
            $ref: '#/components/schemas/LaborValidationQualifier'
          x-ballerina-name: children
        Name:
          type: string
          x-ballerina-name: name
    Job:
      type: object
      properties:
        JobUDFString1:
          type: string
          x-ballerina-name: jobUDFString1
        JobUDFString2:
          type: string
          x-ballerina-name: jobUDFString2
        NOC:
          type: string
          x-ballerina-name: nOC
        EmployeeEEO:
          allOf:
          - $ref: '#/components/schemas/EmployeeEEO'
          x-ballerina-name: employeeEEO
        IsUnionJob:
          type: boolean
          x-ballerina-name: isUnionJob
        JobFunction:
          allOf:
          - $ref: '#/components/schemas/JobFunction'
          x-ballerina-name: jobFunction
        FLSAStatus:
          allOf:
          - $ref: '#/components/schemas/FLSAStatus'
          x-ballerina-name: fLSAStatus
        JobClassification:
          allOf:
          - $ref: '#/components/schemas/JobClassification'
          x-ballerina-name: jobClassification
        ShortName:
          type: string
          x-ballerina-name: shortName
        JobRank:
          type: integer
          format: int32
          x-ballerina-name: jobRank
        JobFamily:
          allOf:
          - $ref: '#/components/schemas/JobFamily'
          x-ballerina-name: jobFamily
        JobUDFString3:
          type: string
          x-ballerina-name: jobUDFString3
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
        Union:
          allOf:
          - $ref: '#/components/schemas/DFUnion'
          x-ballerina-name: union
        EffectiveEnd:
          type: string
          format: date-time
          x-ballerina-name: effectiveEnd
        JobQualifications:
          type: string
          x-ballerina-name: jobQualifications
        LedgerCode:
          type: string
          x-ballerina-name: ledgerCode
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        EffectiveStart:
          type: string
          format: date-time
          x-ballerina-name: effectiveStart
        JobSOC:
          allOf:
          - $ref: '#/components/schemas/JobSOC'
          x-ballerina-name: jobSOC
        PayGrade:
          allOf:
          - $ref: '#/components/schemas/PayGrade'
          x-ballerina-name: payGrade
    OrgUnitLocationTypeCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/OrgUnitLocationType'
          x-ballerina-name: items
    Culture:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    PayloadIEnumerableDEUEmployeeWageTax:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/DEUEmployeeWageTax'
          x-ballerina-name: data
    PositionAssignmentCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/PositionAssignment'
          x-ballerina-name: items
    QuestionAnswers:
      type: object
      properties:
        Value:
          type: string
          x-ballerina-name: value
        Values:
          type: array
          items:
            type: string
          x-ballerina-name: values
        Id:
          type: string
          x-ballerina-name: id
    LaborMetricTypePatchPostResponse:
      type: object
      properties:
        LaborMetricTypePatchPostResponseXrefCode:
          type: string
          x-ballerina-name: laborMetricTypePatchPostResponseXrefCode
    JobFeed:
      type: object
      properties:
        Description:
          type: string
          x-ballerina-name: description
        JobFunction:
          type: string
          x-ballerina-name: jobFunction
        TravelPercentage:
          type: number
          format: double
          x-ballerina-name: travelPercentage
        JobDetailsUrl:
          type: string
          x-ballerina-name: jobDetailsUrl
        PostalCode:
          type: string
          x-ballerina-name: postalCode
        ParentCompanyName:
          type: string
          x-ballerina-name: parentCompanyName
        CandidateApplicationPostUrl:
          type: string
          x-ballerina-name: candidateApplicationPostUrl
        DatePosted:
          type: string
          format: date-time
          x-ballerina-name: datePosted
        CompanyName:
          type: string
          x-ballerina-name: companyName
        Education:
          type: string
          x-ballerina-name: education
        CandidatesUrl:
          type: string
          x-ballerina-name: candidatesUrl
        CultureCode:
          type: string
          x-ballerina-name: cultureCode
        LastUpdated:
          type: string
          format: date-time
          x-ballerina-name: lastUpdated
        QuestionnaireUrl:
          type: string
          x-ballerina-name: questionnaireUrl
        ParentRequisitionCode:
          type: integer
          format: int32
          x-ballerina-name: parentRequisitionCode
        TravelRequired:
          type: integer
          format: int32
          x-ballerina-name: travelRequired
        HiringRate:
          type: number
          format: double
          x-ballerina-name: hiringRate
        ReferenceNumber:
          type: integer
          format: int32
          x-ballerina-name: referenceNumber
        ClientSiteXRefCode:
          type: string
          x-ballerina-name: clientSiteXRefCode
        IsVirtualLocation:
          type: boolean
          x-ballerina-name: isVirtualLocation
        Title:
          type: string
          x-ballerina-name: title
        EmploymentIndicator:
          type: string
          x-ballerina-name: employmentIndicator
        City:
          type: string
          x-ballerina-name: city
        JobFamily:
          type: string
          x-ballerina-name: jobFamily
        ClientSiteName:
          type: string
          x-ballerina-name: clientSiteName
        ApplyUrl:
          type: string
          x-ballerina-name: applyUrl
        AddressLine2:
          type: string
          x-ballerina-name: addressLine2
        AddressLine1:
          type: string
          x-ballerina-name: addressLine1
        JobType:
          type: integer
          format: int32
          x-ballerina-name: jobType
        MaxHiringRate:
          type: number
          format: double
          x-ballerina-name: maxHiringRate
        TelecommutePercentage:
          type: number
          format: double
          x-ballerina-name: telecommutePercentage
        State:
          type: string
          x-ballerina-name: state
        Country:
          type: string
          x-ballerina-name: country
        MinHiringRate:
          type: number
          format: double
          x-ballerina-name: minHiringRate
        Qualifications:
          type: string
          x-ballerina-name: qualifications
    PMPositionAssignment:
      type: object
      properties:
        PositionAssignmentGlobalId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
          x-ballerina-name: positionAssignmentGlobalId
        EffectiveEnd:
          type: string
          format: date-time
          x-ballerina-name: effectiveEnd
        PMPosition:
          allOf:
          - $ref: '#/components/schemas/PMPosition'
          x-ballerina-name: pMPosition
        EffectiveStart:
          type: string
          format: date-time
          x-ballerina-name: effectiveStart
        IsPrimary:
          type: boolean
          x-ballerina-name: isPrimary
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    GenderIdentity:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    PayType:
      type: object
      properties:
        MaximumSalary:
          type: number
          format: double
          x-ballerina-name: maximumSalary
        MaximumRate:
          type: number
          format: double
          x-ballerina-name: maximumRate
        LedgerCode:
          type: string
          x-ballerina-name: ledgerCode
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        PayTypeGroup:
          allOf:
          - $ref: '#/components/schemas/PayTypeGroup'
          x-ballerina-name: payTypeGroup
        SortOrder:
          type: integer
          format: int32
          x-ballerina-name: sortOrder
        IsPayrollAutoPay:
          type: boolean
          x-ballerina-name: isPayrollAutoPay
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
        HidePayOnTimesheet:
          type: boolean
          x-ballerina-name: hidePayOnTimesheet
    BenefitsDFLinkExportUnionMembership:
      type: object
      properties:
        RecordType:
          type: string
          x-ballerina-name: recordType
        MembershipEffectiveStartDate:
          type: string
          format: date-time
          x-ballerina-name: membershipEffectiveStartDate
        MembershipDate:
          type: string
          format: date-time
          x-ballerina-name: membershipDate
        UnionName:
          type: string
          x-ballerina-name: unionName
        UnionXrefCode:
          type: string
          x-ballerina-name: unionXrefCode
    PayloadIEnumerableEmployeeWorkAssignmentManager:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeWorkAssignmentManager'
          x-ballerina-name: data
    EmployeeLocationAuthority:
      type: object
      properties:
        EffectiveEnd:
          type: string
          format: date-time
          x-ballerina-name: effectiveEnd
        AuthorityType:
          allOf:
          - $ref: '#/components/schemas/AuthorityType'
          x-ballerina-name: authorityType
        EffectiveStart:
          type: string
          format: date-time
          x-ballerina-name: effectiveStart
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    PayloadLaborCostResult:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          allOf:
          - $ref: '#/components/schemas/LaborCostResult'
          x-ballerina-name: data
    EmployeePerformanceRatingCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeePerformanceRating'
          x-ballerina-name: items
    AssociationDetails:
      type: object
      properties:
        StartDateMonth:
          type: string
          x-ballerina-name: startDateMonth
        EndDateYear:
          type: string
          x-ballerina-name: endDateYear
        EndCurrent:
          type: boolean
          x-ballerina-name: endCurrent
        Description:
          type: string
          x-ballerina-name: description
        EndDateMonth:
          type: string
          x-ballerina-name: endDateMonth
        Title:
          type: string
          x-ballerina-name: title
        StartDateYear:
          type: string
          x-ballerina-name: startDateYear
    EmployeeUSTaxStatusCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeUSTaxStatus'
          x-ballerina-name: items
    EmployeeEmergencyContact:
      type: object
      properties:
        Addresses:
          allOf:
          - $ref: '#/components/schemas/EmergencyContactPersonAddressCollection'
          x-ballerina-name: addresses
        Comment:
          type: string
          x-ballerina-name: comment
        Contacts:
          allOf:
          - $ref: '#/components/schemas/EmergencyContactPersonContactCollection'
          x-ballerina-name: contacts
        FirstName:
          type: string
          x-ballerina-name: firstName
        Relationship:
          allOf:
          - $ref: '#/components/schemas/RelationshipType'
          x-ballerina-name: relationship
        IsPrimary:
          type: boolean
          x-ballerina-name: isPrimary
        LastName:
          type: string
          x-ballerina-name: lastName
        MiddleName:
          type: string
          x-ballerina-name: middleName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    EmployeeShortTimeWorkCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeShortTimeWork'
          x-ballerina-name: items
    PayloadSubordinateEntityReferences:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          allOf:
          - $ref: '#/components/schemas/SubordinateEntityReferences'
          x-ballerina-name: data
    PayloadIEnumerableEmployeeCompensation:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeCompensation'
          x-ballerina-name: data
    PREarningAccumulator:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    EmploymentStatusReason:
      type: object
      properties:
        IsLeaveReason:
          type: boolean
          x-ballerina-name: isLeaveReason
        IsVoluntaryReason:
          type: boolean
          x-ballerina-name: isVoluntaryReason
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        IsTerminationReason:
          type: boolean
          x-ballerina-name: isTerminationReason
        IsCompChangeReason:
          type: boolean
          x-ballerina-name: isCompChangeReason
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
        IsPositionChangeReason:
          type: boolean
          x-ballerina-name: isPositionChangeReason
    EmployeeOvertimeGroup:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    PersonContact:
      type: object
      properties:
        ShowRejectedWarning:
          type: boolean
          x-ballerina-name: showRejectedWarning
        ElectronicAddress:
          type: string
          x-ballerina-name: electronicAddress
        IsRejected:
          type: boolean
          x-ballerina-name: isRejected
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
        Extension:
          type: string
          x-ballerina-name: extension
        EffectiveEnd:
          type: string
          format: date-time
          x-ballerina-name: effectiveEnd
        IsUnlistedNumber:
          type: boolean
          x-ballerina-name: isUnlistedNumber
        EffectiveStart:
          type: string
          format: date-time
          x-ballerina-name: effectiveStart
        ContactNumber:
          type: string
          x-ballerina-name: contactNumber
        Country:
          allOf:
          - $ref: '#/components/schemas/Country'
          x-ballerina-name: country
        IsForSystemCommunications:
          type: boolean
          x-ballerina-name: isForSystemCommunications
        IsVerified:
          type: boolean
          x-ballerina-name: isVerified
        IsPreferredContactMethod:
          type: boolean
          x-ballerina-name: isPreferredContactMethod
        NumberOfVerificationRequests:
          type: integer
          format: int32
          x-ballerina-name: numberOfVerificationRequests
        ContactInformationType:
          allOf:
          - $ref: '#/components/schemas/ContactInformationType'
          x-ballerina-name: contactInformationType
        FormattedNumber:
          type: string
          x-ballerina-name: formattedNumber
    AttendancePolicy:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        TrackingBasedOn:
          type: integer
          format: int32
          x-ballerina-name: trackingBasedOn
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    MilitaryServices:
      type: object
      properties:
        _Total:
          type: integer
          format: int32
          x-ballerina-name: total
        Values:
          type: array
          items:
            $ref: '#/components/schemas/MilitaryServiceDetails'
          x-ballerina-name: values
    EmployeeDefaultLaborCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeDefaultLabor'
          x-ballerina-name: items
    EmployeeCANStateTaxCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeCANStateTax'
          x-ballerina-name: items
    PayrollPayEntryImportHistoryDetails:
      type: object
      properties:
        TotalInvalidRecords:
          type: integer
          format: int32
          x-ballerina-name: totalInvalidRecords
        ErrorActionCode:
          type: integer
          format: int32
          x-ballerina-name: errorActionCode
        TotalRecordsIncluded:
          type: integer
          format: int32
          x-ballerina-name: totalRecordsIncluded
        ImportSetName:
          type: string
          x-ballerina-name: importSetName
        UploadedDateUTC:
          type: string
          format: date-time
          x-ballerina-name: uploadedDateUTC
        FinishedDate:
          type: string
          format: date-time
          x-ballerina-name: finishedDate
        ErrorOccurActionName:
          type: string
          x-ballerina-name: errorOccurActionName
        TotalRecordsImported:
          type: integer
          format: int32
          x-ballerina-name: totalRecordsImported
        Source:
          type: string
          x-ballerina-name: source
        StartDate:
          type: string
          format: date-time
          x-ballerina-name: startDate
        Errors:
          type: array
          items:
            $ref: '#/components/schemas/PayrollPayEntryImportHistoryErrorDetails'
          x-ballerina-name: errors
        ImportStatus:
          type: string
          x-ballerina-name: importStatus
        SourceFile:
          type: string
          x-ballerina-name: sourceFile
        ImportIdentifier:
          type: string
          x-ballerina-name: importIdentifier
    EmployeePunchPatchPostDeleteResponse:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
    PayloadIEnumerableEmployeeShortTimeWork:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeShortTimeWork'
          x-ballerina-name: data
    EmployeeGLSplitSets:
      type: object
      properties:
        OrgUnitXRefCode:
          type: string
          x-ballerina-name: orgUnitXRefCode
        EmployeeGLSplitSetDetails:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeGLSplitSetDetails'
          x-ballerina-name: employeeGLSplitSetDetails
        DeptJobName:
          type: string
          x-ballerina-name: deptJobName
        OrgUnitName:
          type: string
          x-ballerina-name: orgUnitName
        SplitEffectiveFrom:
          type: string
          format: date-time
          x-ballerina-name: splitEffectiveFrom
        SplitEffectiveTo:
          type: string
          format: date-time
          x-ballerina-name: splitEffectiveTo
        DeptJobXRefCode:
          type: string
          x-ballerina-name: deptJobXRefCode
    EmployeeScheduleActivityPostAPIRequestDTO:
      required:
      - TimeEnd
      - TimeStart
      - XRefCode
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        TimeEnd:
          type: string
          format: date-time
          x-ballerina-name: timeEnd
        TimeStart:
          type: string
          format: date-time
          x-ballerina-name: timeStart
    EmployeeTimeAwayFromWorkForSubmit:
      type: object
      properties:
        HalfDay:
          type: boolean
          x-ballerina-name: halfDay
        TAFWXRefCode:
          type: string
          x-ballerina-name: tAFWXRefCode
        TimeEnd:
          type: string
          format: date-time
          x-ballerina-name: timeEnd
        TimeStart:
          type: string
          format: date-time
          x-ballerina-name: timeStart
        PayAdjustmentCodeXRefCode:
          type: string
          x-ballerina-name: payAdjustmentCodeXRefCode
        AllDay:
          type: boolean
          x-ballerina-name: allDay
        EmployeeXRefCode:
          type: string
          x-ballerina-name: employeeXRefCode
        Days:
          type: integer
          format: int32
          x-ballerina-name: days
        StatusXRefCode:
          type: string
          x-ballerina-name: statusXRefCode
        ManagerComment:
          type: string
          x-ballerina-name: managerComment
        NetHours:
          type: number
          format: double
          x-ballerina-name: netHours
        EmployeeComment:
          type: string
          x-ballerina-name: employeeComment
        NetHoursPerDay:
          type: array
          items:
            type: number
            format: double
          x-ballerina-name: netHoursPerDay
    ContactInformationTypeGroup:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    Transfers:
      type: object
      properties:
        TimeStartRaw:
          type: string
          format: date-time
          x-ballerina-name: timeStartRaw
        PositionXRefCode:
          type: string
          x-ballerina-name: positionXRefCode
        ProjectXRefCode:
          type: string
          x-ballerina-name: projectXRefCode
        DocketXRefCode:
          type: string
          x-ballerina-name: docketXRefCode
        LaborMetrics:
          type: array
          items:
            $ref: '#/components/schemas/LaborMetrics'
          x-ballerina-name: laborMetrics
        LocationXRefCode:
          type: string
          x-ballerina-name: locationXRefCode
        ManagerComment:
          type: string
          x-ballerina-name: managerComment
        PayAdjustmentXRefCode:
          type: string
          x-ballerina-name: payAdjustmentXRefCode
        DocketQuantity:
          type: number
          format: double
          x-ballerina-name: docketQuantity
        TimeStart:
          type: string
          format: date-time
          x-ballerina-name: timeStart
        EmployeeComment:
          type: string
          x-ballerina-name: employeeComment
    Links:
      type: object
      properties:
        _Total:
          type: integer
          format: int32
          x-ballerina-name: total
        Values:
          type: array
          items:
            $ref: '#/components/schemas/LinkDetails'
          x-ballerina-name: values
    EmployeePayAdjCodeGroupListCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeePayAdjustCodeGroup'
          x-ballerina-name: items
    PayAdjCodeGroup:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    EducationDetails:
      type: object
      properties:
        Field:
          type: string
          x-ballerina-name: field
        School:
          type: string
          x-ballerina-name: school
        EndDateYear:
          type: string
          x-ballerina-name: endDateYear
        EndCurrent:
          type: boolean
          x-ballerina-name: endCurrent
        Degree:
          type: string
          x-ballerina-name: degree
        StartDateYear:
          type: string
          x-ballerina-name: startDateYear
        Location:
          type: string
          x-ballerina-name: location
    EmployeeVeteransStatusCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeVeteransStatus'
          x-ballerina-name: items
    EarningStatementDocument:
      type: object
      properties:
        Contents:
          type: string
          x-ballerina-name: contents
        FileName:
          type: string
          x-ballerina-name: fileName
        Title:
          type: string
          x-ballerina-name: title
        Link:
          type: string
          x-ballerina-name: link
    MetadataField:
      type: object
      properties:
        DbColumn:
          type: string
          x-ballerina-name: dbColumn
        IsUniqueField:
          type: boolean
          x-ballerina-name: isUniqueField
        Cfg:
          allOf:
          - $ref: '#/components/schemas/AmfCfg'
          x-ballerina-name: cfg
        MetadataId:
          type: string
          x-ballerina-name: metadataId
        Label:
          type: string
          x-ballerina-name: label
        EnumFrom:
          allOf:
          - $ref: '#/components/schemas/AmfEnumFrom'
          x-ballerina-name: enumFrom
        GeoContext:
          allOf:
          - $ref: '#/components/schemas/ContextLevel'
          x-ballerina-name: geoContext
        EnableAdditionalAssumePreviousValueIfNullLogic:
          type: boolean
          x-ballerina-name: enableAdditionalAssumePreviousValueIfNullLogic
        DfAuthorize:
          allOf:
          - $ref: '#/components/schemas/AmfAuthorize'
          x-ballerina-name: dfAuthorize
        ShortDescription:
          type: string
          x-ballerina-name: shortDescription
        Name:
          type: string
          x-ballerina-name: name
        IsCommon:
          type: boolean
          x-ballerina-name: isCommon
        DayforcePropertyName:
          type: string
          readOnly: true
          x-ballerina-name: dayforcePropertyName
        DataType:
          type: string
          x-ballerina-name: dataType
        IsExtended:
          type: boolean
          x-ballerina-name: isExtended
        OriginalId:
          type: string
          x-ballerina-name: originalId
        IsPublicKey:
          type: boolean
          x-ballerina-name: isPublicKey
        Title:
          type: string
          x-ballerina-name: title
        IsIndexKey:
          type: boolean
          x-ballerina-name: isIndexKey
        PredefinedValues:
          type: array
          items:
            $ref: '#/components/schemas/PredefinedValue'
          x-ballerina-name: predefinedValues
        LongDescription:
          type: string
          x-ballerina-name: longDescription
        Mappings:
          type: object
          additionalProperties:
            type: string
          x-ballerina-name: mappings
        ParentEntityType:
          type: string
          x-ballerina-name: parentEntityType
        Validators:
          type: array
          items:
            $ref: '#/components/schemas/AmfValidationModel'
          x-ballerina-name: validators
        Id:
          type: string
          x-ballerina-name: id
        ApplicationMapping:
          type: string
          readOnly: true
          x-ballerina-name: applicationMapping
        SchemaName:
          type: string
          x-ballerina-name: schemaName
        DbTable:
          type: string
          x-ballerina-name: dbTable
    PayloadIEnumerableEmployeeSchedulePostAPIResponse:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeSchedulePostAPIResponse'
          x-ballerina-name: data
    PaginatedPayloadIEnumerableEmployeePaySummary:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Paging:
          allOf:
          - $ref: '#/components/schemas/Paging'
          x-ballerina-name: paging
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeePaySummary'
          x-ballerina-name: data
    PayloadIEnumerableContactInformationType:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/ContactInformationType'
          x-ballerina-name: data
    PRGLSplitSet:
      type: object
      properties:
        EffectiveEnd:
          type: string
          format: date-time
          x-ballerina-name: effectiveEnd
        Position:
          allOf:
          - $ref: '#/components/schemas/Position'
          x-ballerina-name: position
        EffectiveStart:
          type: string
          format: date-time
          x-ballerina-name: effectiveStart
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
        Location:
          allOf:
          - $ref: '#/components/schemas/Location'
          x-ballerina-name: location
        PRGLSplitSetDetails:
          allOf:
          - $ref: '#/components/schemas/PRGLSplitSetDetailCollection'
          x-ballerina-name: pRGLSplitSetDetails
    DEUSTWParticipationReason:
      type: object
      properties:
        LongName:
          type: string
          x-ballerina-name: longName
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        DEUSTWParticipationReasonId:
          type: integer
          format: int32
          x-ballerina-name: dEUSTWParticipationReasonId
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    PayloadAnalyticsDatasetMetadataResponse:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          allOf:
          - $ref: '#/components/schemas/AnalyticsDatasetMetadataResponse'
          x-ballerina-name: data
    PayloadLocation:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          allOf:
          - $ref: '#/components/schemas/Location'
          x-ballerina-name: data
    DocMgmtUploadResponse:
      type: object
      properties:
        Status:
          type: string
          x-ballerina-name: status
        FilesProcessed:
          type: array
          items:
            $ref: '#/components/schemas/DocMgmtFileProcessedResponse'
          x-ballerina-name: filesProcessed
    PayloadIEnumerableEmployeeEmploymentAgreement:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeEmploymentAgreement'
          x-ballerina-name: data
    PayloadIEnumerableEmployeePropertyValue:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeePropertyValue'
          x-ballerina-name: data
    PayloadIEnumerableEmployee:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/Employee'
          x-ballerina-name: data
    AnalyticsReportDefinitions:
      type: object
      properties:
        Description:
          type: string
          description: "Description of the Report.\r\nThe description will be localized,\
            \ based on the Session Culture"
          x-ballerina-name: description
        ReportId:
          type: string
          description: Feature Id for the Report
          x-ballerina-name: reportId
        Name:
          type: string
          description: "Name of the Report.\r\nThe name will be localized, based on\
            \ the Session Culture"
          x-ballerina-name: name
    PayloadIEnumerableEmployeeAvailability:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeAvailability'
          x-ballerina-name: data
    DEUHoursChangeReason:
      type: object
      properties:
        ITSGCode:
          type: string
          x-ballerina-name: iTSGCode
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    PRGLSplitSetDetailMetricCodeCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/PRGLSplitSetDetailMetricCode'
          x-ballerina-name: items
    PayMethod:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    BackgroundScreeningAdjudicationStatus:
      type: object
      properties:
        ScreeningRequestId:
          type: string
          x-ballerina-name: screeningRequestId
        AdjudicationStatus:
          type: string
          x-ballerina-name: adjudicationStatus
    EmployeeUSFederalTax:
      type: object
      properties:
        EffectiveEnd:
          type: string
          format: date-time
          x-ballerina-name: effectiveEnd
        AdditionalAmount:
          type: number
          format: double
          x-ballerina-name: additionalAmount
        DependentTaxCredit:
          type: number
          format: double
          x-ballerina-name: dependentTaxCredit
        EffectiveStart:
          type: string
          format: date-time
          x-ballerina-name: effectiveStart
        FilingStatus:
          allOf:
          - $ref: '#/components/schemas/FederalFilingStatus'
          x-ballerina-name: filingStatus
        Allowances:
          type: integer
          format: int32
          x-ballerina-name: allowances
        IsLocked:
          type: boolean
          x-ballerina-name: isLocked
        TwoJobs:
          type: boolean
          x-ballerina-name: twoJobs
        OtherIncome:
          type: number
          format: double
          x-ballerina-name: otherIncome
        Deductions:
          type: number
          format: double
          x-ballerina-name: deductions
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
        IsTaxExempt:
          type: boolean
          x-ballerina-name: isTaxExempt
    PayloadIEnumerableEmployeeVolunteerList:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeVolunteerList'
          x-ballerina-name: data
    PublicationDetails:
      type: object
      properties:
        DateDay:
          type: string
          x-ballerina-name: dateDay
        Description:
          type: string
          x-ballerina-name: description
        Title:
          type: string
          x-ballerina-name: title
        DateYear:
          type: string
          x-ballerina-name: dateYear
        Url:
          type: string
          x-ballerina-name: url
        DateMonth:
          type: string
          x-ballerina-name: dateMonth
    PayrollDeduction:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    EmployeeUnionMembership:
      type: object
      properties:
        EffectiveEnd:
          type: string
          format: date-time
          x-ballerina-name: effectiveEnd
        UnionMembershipDate:
          type: string
          format: date-time
          x-ballerina-name: unionMembershipDate
        EffectiveStart:
          type: string
          format: date-time
          x-ballerina-name: effectiveStart
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
        Union:
          allOf:
          - $ref: '#/components/schemas/DFUnion'
          x-ballerina-name: union
    PayPeriodInformation:
      type: object
      properties:
        PayPeriodStartDate:
          type: string
          format: date-time
          x-ballerina-name: payPeriodStartDate
        PayPeriodEndDate:
          type: string
          format: date-time
          x-ballerina-name: payPeriodEndDate
        PayGroup:
          allOf:
          - $ref: '#/components/schemas/PayGroupBrief'
          x-ballerina-name: payGroup
        OffsetPayPeriodEndDate:
          type: string
          format: date-time
          x-ballerina-name: offsetPayPeriodEndDate
        OffsetPayPeriodStartDate:
          type: string
          format: date-time
          x-ballerina-name: offsetPayPeriodStartDate
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    LocationAddresses:
      type: object
      properties:
        Description:
          type: string
          x-ballerina-name: description
        Address:
          type: string
          x-ballerina-name: address
        CountryName:
          type: string
          x-ballerina-name: countryName
        StateProvince:
          type: string
          x-ballerina-name: stateProvince
        StateProvinceCode:
          type: string
          x-ballerina-name: stateProvinceCode
        ShortName:
          type: string
          x-ballerina-name: shortName
        City:
          type: string
          x-ballerina-name: city
        TaxAuthorityInstance:
          type: string
          x-ballerina-name: taxAuthorityInstance
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
        County:
          type: string
          x-ballerina-name: county
        ZipPostalCode:
          type: string
          x-ballerina-name: zipPostalCode
        IsTaxation:
          type: boolean
          x-ballerina-name: isTaxation
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        AddressLineTwo:
          type: string
          x-ballerina-name: addressLineTwo
        CountryCode:
          type: string
          x-ballerina-name: countryCode
        LocationInJtEconomicDevDistAreaJedd:
          type: boolean
          x-ballerina-name: locationInJtEconomicDevDistAreaJedd
        JeddTaxes:
          type: string
          x-ballerina-name: jeddTaxes
    PayloadIEnumerableEmployeePayrollElection:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeePayrollElection'
          x-ballerina-name: data
    EmployeeEarningLimit:
      type: object
      properties:
        EarningLimit:
          allOf:
          - $ref: '#/components/schemas/EarningLimit'
          x-ballerina-name: earningLimit
        LimitPercent:
          type: number
          format: double
          x-ballerina-name: limitPercent
        PayGroupLimitPercent:
          type: number
          format: double
          x-ballerina-name: payGroupLimitPercent
        LimitAmount:
          type: number
          format: double
          x-ballerina-name: limitAmount
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
        PayGroupLimitAmount:
          type: number
          format: double
          x-ballerina-name: payGroupLimitAmount
    Breaks:
      type: object
      properties:
        Type:
          type: string
          x-ballerina-name: type
        TimeEnd:
          type: string
          format: date-time
          x-ballerina-name: timeEnd
        NetHours:
          type: number
          format: double
          x-ballerina-name: netHours
        TimeStart:
          type: string
          format: date-time
          x-ballerina-name: timeStart
    EmployeeBadge:
      type: object
      properties:
        EffectiveEnd:
          type: string
          format: date-time
          x-ballerina-name: effectiveEnd
        EffectiveStart:
          type: string
          format: date-time
          x-ballerina-name: effectiveStart
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
        BadgeNumber:
          type: string
          x-ballerina-name: badgeNumber
    DEUEmployeeWageTax:
      type: object
      properties:
        DenominationCodeName:
          type: string
          x-ballerina-name: denominationCodeName
        EmploymentTypeCodeName:
          type: string
          x-ballerina-name: employmentTypeCodeName
        IsManualInput:
          type: boolean
          x-ballerina-name: isManualInput
        ElectronicDataTransfer:
          type: boolean
          x-ballerina-name: electronicDataTransfer
        SpouseDenominationCodeName:
          type: string
          x-ballerina-name: spouseDenominationCodeName
        TaxClass:
          type: string
          x-ballerina-name: taxClass
        TaxExemption:
          type: boolean
          x-ballerina-name: taxExemption
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
        RequestedAnnualAllowance:
          type: number
          format: double
          x-ballerina-name: requestedAnnualAllowance
        ChildAllowance:
          type: number
          format: double
          x-ballerina-name: childAllowance
        EffectiveEnd:
          type: string
          format: date-time
          x-ballerina-name: effectiveEnd
        AnnualAllowance:
          type: number
          format: double
          x-ballerina-name: annualAllowance
        Factor:
          type: number
          format: double
          x-ballerina-name: factor
        EffectiveStart:
          type: string
          format: date-time
          x-ballerina-name: effectiveStart
        OptOutYearEndWageTaxAdjustment:
          type: boolean
          x-ballerina-name: optOutYearEndWageTaxAdjustment
        MonthlyAllowance:
          type: number
          format: double
          x-ballerina-name: monthlyAllowance
        ReferenceDate:
          type: string
          format: date-time
          x-ballerina-name: referenceDate
    PensionTypeConfiguration:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    PayloadIEnumerableKpiTargetPattern:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/KpiTargetPattern'
          x-ballerina-name: data
    EmployeeBalancePeriod:
      type: object
      properties:
        EffectiveEnd:
          type: string
          format: date-time
          x-ballerina-name: effectiveEnd
        InitialAccruedValue:
          type: number
          format: double
          x-ballerina-name: initialAccruedValue
        CurrentAccruedValue:
          type: number
          format: double
          x-ballerina-name: currentAccruedValue
        EmployeeXRefCode:
          type: string
          x-ballerina-name: employeeXRefCode
        EffectiveStart:
          type: string
          format: date-time
          x-ballerina-name: effectiveStart
        MaximumValue:
          type: number
          format: double
          x-ballerina-name: maximumValue
        BalanceName:
          type: string
          x-ballerina-name: balanceName
        MinimumValue:
          type: number
          format: double
          x-ballerina-name: minimumValue
        BalanceXRefCode:
          type: string
          x-ballerina-name: balanceXRefCode
        CurrentGrantValue:
          type: number
          format: double
          x-ballerina-name: currentGrantValue
        InitialGrantValue:
          type: number
          format: double
          x-ballerina-name: initialGrantValue
    PersonManagementEraseHistory:
      type: object
      properties:
        LastPayDate:
          type: string
          format: date-time
          x-ballerina-name: lastPayDate
        LastDeptJob:
          type: string
          x-ballerina-name: lastDeptJob
        RequestId:
          type: integer
          format: int32
          x-ballerina-name: requestId
        TerminationDate:
          type: string
          format: date-time
          x-ballerina-name: terminationDate
        EraseRequestDate:
          type: string
          format: date-time
          x-ballerina-name: eraseRequestDate
        PersonType:
          type: string
          x-ballerina-name: personType
        DayforceCreateDate:
          type: string
          format: date-time
          x-ballerina-name: dayforceCreateDate
        EmploymentStatusReason:
          type: string
          x-ballerina-name: employmentStatusReason
        Reason:
          type: string
          x-ballerina-name: reason
        EligibleForRehire:
          type: string
          x-ballerina-name: eligibleForRehire
        LastOrgUnit:
          type: string
          x-ballerina-name: lastOrgUnit
        Originator:
          type: string
          x-ballerina-name: originator
        LastBenefitCoverageDate:
          type: string
          format: date-time
          x-ballerina-name: lastBenefitCoverageDate
        DisplayName:
          type: string
          x-ballerina-name: displayName
        HireDate:
          type: string
          format: date-time
          x-ballerina-name: hireDate
        LastPayGroup:
          type: string
          x-ballerina-name: lastPayGroup
        PurgeDate:
          type: string
          format: date-time
          x-ballerina-name: purgeDate
    EmployeeUKTaxDetails:
      type: object
      properties:
        EffectiveEnd:
          type: string
          format: date-time
          x-ballerina-name: effectiveEnd
        PreviousTaxableGrossPaidToDate:
          type: number
          format: double
          x-ballerina-name: previousTaxableGrossPaidToDate
        LegalEntityXrefCode:
          type: string
          x-ballerina-name: legalEntityXrefCode
        PreviousTaxPaidToDate:
          type: number
          format: double
          x-ballerina-name: previousTaxPaidToDate
        TaxCode:
          type: string
          x-ballerina-name: taxCode
        TaxBasis:
          type: boolean
          x-ballerina-name: taxBasis
        StarterDeclaration:
          type: string
          x-ballerina-name: starterDeclaration
        EffectiveStart:
          type: string
          format: date-time
          x-ballerina-name: effectiveStart
        ChangeReasonXrefCode:
          type: string
          x-ballerina-name: changeReasonXrefCode
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
        PreviouslyReportedOnFPS:
          type: boolean
          x-ballerina-name: previouslyReportedOnFPS
    EmployeePayrollTaxParameter:
      type: object
      properties:
        EffectiveEnd:
          type: string
          format: date-time
          x-ballerina-name: effectiveEnd
        LegalEntityXrefCode:
          type: string
          x-ballerina-name: legalEntityXrefCode
        ExemptTaxOnlyUpdateWages:
          type: boolean
          x-ballerina-name: exemptTaxOnlyUpdateWages
        InactivateTax:
          type: boolean
          x-ballerina-name: inactivateTax
        EffectiveStart:
          type: string
          format: date-time
          x-ballerina-name: effectiveStart
        TaxAuthorityInstance:
          type: string
          x-ballerina-name: taxAuthorityInstance
        OverrideParameters:
          type: array
          items:
            $ref: '#/components/schemas/EmployeePayrollTaxParameterElement'
          x-ballerina-name: overrideParameters
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
        ExemptTaxAndTaxableWages:
          type: boolean
          x-ballerina-name: exemptTaxAndTaxableWages
    EmployeeElectionAPIDeletionModel:
      type: object
      properties:
        SourceTypeXRefCode:
          type: string
          x-ballerina-name: sourceTypeXRefCode
        ElectionXrefCode:
          type: string
          x-ballerina-name: electionXrefCode
    Educations:
      type: object
      properties:
        _Total:
          type: integer
          format: int32
          x-ballerina-name: total
        Values:
          type: array
          items:
            $ref: '#/components/schemas/EducationDetails'
          x-ballerina-name: values
    HRIncidentInjury:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    ContextLevel:
      type: object
      properties:
        Level:
          type: string
          x-ballerina-name: level
        LevelValue:
          type: string
          x-ballerina-name: levelValue
    LMSCertification:
      type: object
      properties:
        EffectiveEnd:
          type: string
          format: date-time
          x-ballerina-name: effectiveEnd
        ExpirationUnit:
          type: string
          x-ballerina-name: expirationUnit
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ExpirationValue:
          type: integer
          format: int32
          x-ballerina-name: expirationValue
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    EmployeeGLSplitUpsert:
      type: object
      properties:
        GLSplitSets:
          type: array
          items:
            $ref: '#/components/schemas/GLSplitSetUpsert'
          x-ballerina-name: gLSplitSets
        EmployeeXRefCode:
          type: string
          x-ballerina-name: employeeXRefCode
    CandidateRTWDocument:
      type: object
      properties:
        CandidateRTWDocumentId:
          type: integer
          format: int32
          x-ballerina-name: candidateRTWDocumentId
        Type:
          type: string
          x-ballerina-name: type
        Details:
          type: array
          items:
            $ref: '#/components/schemas/CandidateRTWDocumentDetails'
          x-ballerina-name: details
        DocumentErrors:
          type: array
          items:
            $ref: '#/components/schemas/CandidateRTWDocumentGenericError'
          x-ballerina-name: documentErrors
        DocumentExtension:
          type: string
          x-ballerina-name: documentExtension
        DateExpire:
          type: string
          format: date-time
          x-ballerina-name: dateExpire
        PathwayCode:
          type: string
          x-ballerina-name: pathwayCode
        DateAdded:
          type: string
          format: date-time
          x-ballerina-name: dateAdded
        CountryCode:
          type: string
          x-ballerina-name: countryCode
        Sources:
          allOf:
          - $ref: '#/components/schemas/CandidateRTWDocumentSource'
          x-ballerina-name: sources
        DocumentName:
          type: string
          x-ballerina-name: documentName
    ClientPayrollCountry:
      type: object
      properties:
        ClientOperatingLocations:
          type: string
          x-ballerina-name: clientOperatingLocations
        Countries:
          type: array
          items:
            $ref: '#/components/schemas/PayrollCountry'
          x-ballerina-name: countries
        ConnectPayEnabled:
          type: boolean
          x-ballerina-name: connectPayEnabled
        ClientOperatingLocationsLabel:
          type: string
          x-ballerina-name: clientOperatingLocationsLabel
    JobClassification:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    EmployeeAssignedSexAndGenderIdentity:
      type: object
      properties:
        AssignedSexCountryAware:
          allOf:
          - $ref: '#/components/schemas/AssignedSexCountryAware'
          x-ballerina-name: assignedSexCountryAware
        EffectiveEnd:
          type: string
          format: date-time
          x-ballerina-name: effectiveEnd
        State:
          allOf:
          - $ref: '#/components/schemas/State'
          x-ballerina-name: state
        EffectiveStart:
          type: string
          format: date-time
          x-ballerina-name: effectiveStart
        Country:
          allOf:
          - $ref: '#/components/schemas/Country'
          x-ballerina-name: country
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
        GenderIdentityCountryAware:
          allOf:
          - $ref: '#/components/schemas/GenderIdentityCountryAware'
          x-ballerina-name: genderIdentityCountryAware
    PaginatedPayloadIEnumerableEmployeePunch:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Paging:
          allOf:
          - $ref: '#/components/schemas/Paging'
          x-ballerina-name: paging
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeePunch'
          x-ballerina-name: data
    KpiTargetPatternAssignment:
      type: object
      properties:
        OrgUnitXRefCode:
          type: string
          x-ballerina-name: orgUnitXRefCode
        EffectiveEnd:
          type: string
          format: date-time
          x-ballerina-name: effectiveEnd
        EffectiveStart:
          type: string
          format: date-time
          x-ballerina-name: effectiveStart
        PatternOffset:
          type: integer
          format: int32
          x-ballerina-name: patternOffset
        KpiXRefCode:
          type: string
          x-ballerina-name: kpiXRefCode
        ZoneXRefCode:
          type: string
          x-ballerina-name: zoneXRefCode
    PayloadIEnumerableEmployeePayrollElectionDeletionModel:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeePayrollElectionDeletionModel'
          x-ballerina-name: data
    PaginatedPayloadPersonManagementExemption:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Paging:
          allOf:
          - $ref: '#/components/schemas/Paging'
          x-ballerina-name: paging
        Data:
          allOf:
          - $ref: '#/components/schemas/PersonManagementExemption'
          x-ballerina-name: data
    EmployeeBadgeCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeBadge'
          x-ballerina-name: items
    EmployeeBalanceTransactions:
      type: object
      properties:
        EffectiveEnd:
          type: string
          format: date-time
          x-ballerina-name: effectiveEnd
        Transactions:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeBalanceTransaction'
          x-ballerina-name: transactions
        EffectiveStart:
          type: string
          format: date-time
          x-ballerina-name: effectiveStart
        EmployeeBalancePeriodIdExternal:
          type: integer
          format: int64
          x-ballerina-name: employeeBalancePeriodIdExternal
    PayrollEmployeeDeductionParameter:
      type: object
      properties:
        EmployeeElectedValue:
          type: number
          format: double
          x-ballerina-name: employeeElectedValue
        ShortName:
          type: string
          x-ballerina-name: shortName
        PayGroupDefaultValue:
          type: number
          format: double
          x-ballerina-name: payGroupDefaultValue
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
        ParamCodeName:
          type: string
          x-ballerina-name: paramCodeName
    Course:
      type: object
      properties:
        EffectiveEnd:
          type: string
          format: date-time
          x-ballerina-name: effectiveEnd
        CourseProvider:
          allOf:
          - $ref: '#/components/schemas/CourseProvider'
          x-ballerina-name: courseProvider
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        EffectiveStart:
          type: string
          format: date-time
          x-ballerina-name: effectiveStart
        CourseCode:
          type: string
          x-ballerina-name: courseCode
        ShortName:
          type: string
          x-ballerina-name: shortName
        CourseType:
          allOf:
          - $ref: '#/components/schemas/CourseType'
          x-ballerina-name: courseType
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    PayloadIEnumerableManagerShiftBid:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/ManagerShiftBid'
          x-ballerina-name: data
    EmployeePayAdjustmentLaborMetrics:
      type: object
      properties:
        LaborMetricsTypeXRefCode:
          type: string
          x-ballerina-name: laborMetricsTypeXRefCode
        LaborMetricsCodeXRefCode:
          type: string
          x-ballerina-name: laborMetricsCodeXRefCode
    PayloadIEnumerablePayee:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/Payee'
          x-ballerina-name: data
    PayloadIEnumerableEmployeeWorkAssignment:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeWorkAssignment'
          x-ballerina-name: data
    Role:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    BankAccountBranchAddress:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    UserPayAdjCodeGroupCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/UserPayAdjustCodeGroup'
          x-ballerina-name: items
    ChildLocationCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/ChildLocation'
          x-ballerina-name: items
    EmployeeCourse:
      type: object
      properties:
        Comment:
          type: string
          x-ballerina-name: comment
        PassFail:
          type: string
          x-ballerina-name: passFail
        EmployeeTrainingProgram:
          allOf:
          - $ref: '#/components/schemas/EmployeeTrainingProgram'
          x-ballerina-name: employeeTrainingProgram
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
        CertificationExpiryDate:
          type: string
          format: date-time
          x-ballerina-name: certificationExpiryDate
        Cost:
          type: number
          format: double
          x-ballerina-name: cost
        StartDate:
          type: string
          format: date-time
          x-ballerina-name: startDate
        Score:
          type: string
          x-ballerina-name: score
        Credits:
          type: string
          x-ballerina-name: credits
        EnrollmentStatus:
          allOf:
          - $ref: '#/components/schemas/LMSEnrollmentStatus'
          x-ballerina-name: enrollmentStatus
        CostCurrencyCode:
          type: string
          x-ballerina-name: costCurrencyCode
        TimeSpent:
          type: integer
          format: int32
          x-ballerina-name: timeSpent
        Course:
          allOf:
          - $ref: '#/components/schemas/Course'
          x-ballerina-name: course
        CompletionDate:
          type: string
          format: date-time
          x-ballerina-name: completionDate
        CertificationNumber:
          type: string
          x-ballerina-name: certificationNumber
    PaginatedPayloadIEnumerableTrainingProgram:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Paging:
          allOf:
          - $ref: '#/components/schemas/Paging'
          x-ballerina-name: paging
        Data:
          type: array
          items:
            $ref: '#/components/schemas/TrainingProgram'
          x-ballerina-name: data
    EmployeeEarning:
      type: object
      properties:
        LimitPercent:
          type: number
          format: double
          x-ballerina-name: limitPercent
        Earning:
          allOf:
          - $ref: '#/components/schemas/Earning'
          x-ballerina-name: earning
        Position:
          allOf:
          - $ref: '#/components/schemas/Position'
          x-ballerina-name: position
        LimitAmount:
          type: number
          format: double
          x-ballerina-name: limitAmount
        ElectionSchedule:
          allOf:
          - $ref: '#/components/schemas/ElectionSchedule'
          x-ballerina-name: electionSchedule
        ElectionStartPayGroup:
          allOf:
          - $ref: '#/components/schemas/PayGroup'
          x-ballerina-name: electionStartPayGroup
        ElectionStartPayPeriodStartDate:
          type: string
          format: date-time
          x-ballerina-name: electionStartPayPeriodStartDate
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
        EffectiveEnd:
          type: string
          format: date-time
          x-ballerina-name: effectiveEnd
        EmployeeEarningParameters:
          allOf:
          - $ref: '#/components/schemas/EmployeeEarningParameterCollection'
          x-ballerina-name: employeeEarningParameters
        ContinuePaymentOnStatutoryPay:
          type: boolean
          x-ballerina-name: continuePaymentOnStatutoryPay
        IsOptOut:
          type: integer
          format: int32
          x-ballerina-name: isOptOut
        EffectiveStart:
          type: string
          format: date-time
          x-ballerina-name: effectiveStart
        EmployeeEarningLimits:
          allOf:
          - $ref: '#/components/schemas/EmployeeEarningLimitCollection'
          x-ballerina-name: employeeEarningLimits
        IsBlocked:
          type: boolean
          x-ballerina-name: isBlocked
        Location:
          allOf:
          - $ref: '#/components/schemas/Location'
          x-ballerina-name: location
    SuperannuationType:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    Projects:
      type: object
      properties:
        ProjectTypeXRefCode:
          type: string
          x-ballerina-name: projectTypeXRefCode
        ProjectPriority:
          type: integer
          format: int32
          x-ballerina-name: projectPriority
        ProjectPhaseXRefCode:
          type: string
          x-ballerina-name: projectPhaseXRefCode
        ShortName:
          type: string
          x-ballerina-name: shortName
        BudgetAmount:
          type: number
          format: double
          x-ballerina-name: budgetAmount
        StartDate:
          type: string
          format: date-time
          x-ballerina-name: startDate
        AccountNum:
          type: string
          x-ballerina-name: accountNum
        CertifiedPayrollProjectNumber:
          type: string
          x-ballerina-name: certifiedPayrollProjectNumber
        ProductModuleXRefCode:
          type: string
          x-ballerina-name: productModuleXRefCode
        PctComplete:
          type: number
          format: double
          x-ballerina-name: pctComplete
        CreationOrgUnitXRefCodes:
          type: array
          items:
            type: string
          x-ballerina-name: creationOrgUnitXRefCodes
        Deleted:
          type: boolean
          x-ballerina-name: deleted
        DueDate:
          type: string
          format: date-time
          x-ballerina-name: dueDate
        IFRSClassification:
          type: boolean
          x-ballerina-name: iFRSClassification
        EmployeeXRefCodes:
          allOf:
          - $ref: '#/components/schemas/ProjectAssignmentType'
          x-ballerina-name: employeeXRefCodes
        ParentProjectXRefCode:
          type: string
          x-ballerina-name: parentProjectXRefCode
        BudgetHours:
          type: number
          format: double
          x-ballerina-name: budgetHours
        TaxLocationAddressXRefCode:
          type: string
          x-ballerina-name: taxLocationAddressXRefCode
        ClockTransferCode:
          type: string
          x-ballerina-name: clockTransferCode
        ChildProjectXRefCodes:
          type: array
          items:
            type: string
          x-ballerina-name: childProjectXRefCodes
        DepartmentXRefCodes:
          allOf:
          - $ref: '#/components/schemas/ProjectAssignmentType'
          x-ballerina-name: departmentXRefCodes
        CompletedDate:
          type: string
          format: date-time
          x-ballerina-name: completedDate
        IsResidentAddressUsedForTaxation:
          type: boolean
          x-ballerina-name: isResidentAddressUsedForTaxation
        LedgerCode:
          type: string
          x-ballerina-name: ledgerCode
        ProductGroupXRefCode:
          type: string
          x-ballerina-name: productGroupXRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ProjectXRefCode:
          type: string
          x-ballerina-name: projectXRefCode
        DeptJobXRefCodes:
          allOf:
          - $ref: '#/components/schemas/ProjectAssignmentType'
          x-ballerina-name: deptJobXRefCodes
        PayCodeXRefCodeChargeToHours:
          allOf:
          - $ref: '#/components/schemas/ProjectAssignmentType'
          x-ballerina-name: payCodeXRefCodeChargeToHours
        ProjectClientXRefCode:
          type: string
          x-ballerina-name: projectClientXRefCode
        PayCodeXRefCodeChargeToAmount:
          allOf:
          - $ref: '#/components/schemas/ProjectAssignmentType'
          x-ballerina-name: payCodeXRefCodeChargeToAmount
        IsCOEProject:
          type: boolean
          x-ballerina-name: isCOEProject
    EmployeeTrainingProgram:
      type: object
      properties:
        EnrollmentDate:
          type: string
          format: date-time
          x-ballerina-name: enrollmentDate
        TrainingProgram:
          allOf:
          - $ref: '#/components/schemas/TrainingProgram'
          x-ballerina-name: trainingProgram
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    AmfProperty:
      type: object
      properties:
        EntityId:
          type: integer
          format: int32
          x-ballerina-name: entityId
        ParentId:
          type: integer
          format: int32
          x-ballerina-name: parentId
        DateTimeValue:
          type: string
          format: date-time
          x-ballerina-name: dateTimeValue
        NumberValue:
          type: number
          format: double
          x-ballerina-name: numberValue
        BoolValue:
          type: boolean
          x-ballerina-name: boolValue
        Id:
          type: integer
          format: int32
          x-ballerina-name: id
        EntityState:
          type: string
          x-ballerina-name: entityState
        StringValue:
          type: string
          x-ballerina-name: stringValue
    CandidatePersonalIdentifiableInformation:
      type: object
      properties:
        DateOfBirth:
          type: string
          x-ballerina-name: dateOfBirth
        SocialSecurityNumber:
          type: string
          x-ballerina-name: socialSecurityNumber
        DriverLicense:
          type: string
          x-ballerina-name: driverLicense
        SocialInsuranceNumber:
          type: string
          x-ballerina-name: socialInsuranceNumber
    BaseProject:
      type: object
      properties:
        StartDate:
          type: string
          format: date-time
          x-ballerina-name: startDate
        ParentProjectXRefCode:
          type: string
          x-ballerina-name: parentProjectXRefCode
        ProjectXRefCode:
          type: string
          x-ballerina-name: projectXRefCode
        ShortName:
          type: string
          x-ballerina-name: shortName
        DueDate:
          type: string
          format: date-time
          x-ballerina-name: dueDate
    EmploymentAgreementTaxRegime:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    PayloadPayType:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          allOf:
          - $ref: '#/components/schemas/PayType'
          x-ballerina-name: data
    DisabilityGroup:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
        DisabilityGroupId:
          type: integer
          format: int32
          x-ballerina-name: disabilityGroupId
    EmployeeSchedule:
      type: object
      properties:
        EmployeeScheduleXRefCode:
          type: string
          readOnly: true
          x-ballerina-name: employeeScheduleXRefCode
        OrgUnitXRefCode:
          type: string
          x-ballerina-name: orgUnitXRefCode
        SiteOrgUnitXRefCode:
          type: string
          x-ballerina-name: siteOrgUnitXRefCode
        PayAdjCodeXRefCode:
          type: string
          x-ballerina-name: payAdjCodeXRefCode
        Activities:
          type: array
          items:
            $ref: '#/components/schemas/Activity'
          x-ballerina-name: activities
        Comment:
          type: string
          x-ballerina-name: comment
        Breaks:
          type: array
          items:
            $ref: '#/components/schemas/Breaks'
          x-ballerina-name: breaks
        JobXRefCode:
          type: string
          x-ballerina-name: jobXRefCode
        TimeEnd:
          type: string
          format: date-time
          x-ballerina-name: timeEnd
        Segments:
          type: array
          items:
            $ref: '#/components/schemas/Segment'
          x-ballerina-name: segments
        TimeStart:
          type: string
          format: date-time
          x-ballerina-name: timeStart
        PositionXRefCode:
          type: string
          x-ballerina-name: positionXRefCode
        IsPostedShiftBid:
          type: boolean
          readOnly: true
          x-ballerina-name: isPostedShiftBid
        OrgLocationTypeXRefCode:
          type: string
          x-ballerina-name: orgLocationTypeXRefCode
        ProjectXRefCode:
          type: string
          x-ballerina-name: projectXRefCode
        Skills:
          type: array
          items:
            $ref: '#/components/schemas/Skills'
          x-ballerina-name: skills
        DocketXRefCode:
          type: string
          x-ballerina-name: docketXRefCode
        LaborMetrics:
          type: array
          items:
            $ref: '#/components/schemas/LaborMetric'
          x-ballerina-name: laborMetrics
        EmployeeXRefCode:
          type: string
          x-ballerina-name: employeeXRefCode
        Published:
          type: boolean
          x-ballerina-name: published
        NetHours:
          type: number
          format: double
          x-ballerina-name: netHours
        DepartmentXRefCode:
          type: string
          x-ballerina-name: departmentXRefCode
    EmployeeMaritalStatus:
      type: object
      properties:
        MaritalStatus:
          allOf:
          - $ref: '#/components/schemas/MaritalStatus'
          x-ballerina-name: maritalStatus
        EffectiveEnd:
          type: string
          format: date-time
          x-ballerina-name: effectiveEnd
        EffectiveStart:
          type: string
          format: date-time
          x-ballerina-name: effectiveStart
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    EmployeeRawPunch:
      type: object
      properties:
        Comment:
          type: string
          x-ballerina-name: comment
        PunchType:
          type: string
          x-ballerina-name: punchType
        RawPunchXRefCode:
          type: string
          x-ballerina-name: rawPunchXRefCode
        EmployeeBadge:
          type: string
          x-ballerina-name: employeeBadge
        SupervisorBadge:
          type: string
          x-ballerina-name: supervisorBadge
        IsDuplicate:
          type: boolean
          x-ballerina-name: isDuplicate
        JobXRefCode:
          type: string
          x-ballerina-name: jobXRefCode
        PunchState:
          type: string
          x-ballerina-name: punchState
        PunchOrigin:
          type: string
          x-ballerina-name: punchOrigin
        Latitude:
          type: number
          format: double
          x-ballerina-name: latitude
        ExtraData:
          allOf:
          - $ref: '#/components/schemas/PunchExtraData'
          x-ballerina-name: extraData
        Longitude:
          type: number
          format: double
          x-ballerina-name: longitude
        RawPunchTime:
          type: string
          format: date-time
          x-ballerina-name: rawPunchTime
        PunchXRefCode:
          type: string
          x-ballerina-name: punchXRefCode
        PositionXRefCode:
          type: string
          x-ballerina-name: positionXRefCode
        Accuracy:
          type: integer
          format: int32
          x-ballerina-name: accuracy
        PayDate:
          type: string
          format: date-time
          x-ballerina-name: payDate
        EmployeeXRefCode:
          type: string
          x-ballerina-name: employeeXRefCode
        PunchDevice:
          type: string
          x-ballerina-name: punchDevice
        LocationXRefCode:
          type: string
          x-ballerina-name: locationXRefCode
        RejectedReason:
          type: string
          x-ballerina-name: rejectedReason
        IPAddress:
          type: string
          x-ballerina-name: iPAddress
        DepartmentXRefCode:
          type: string
          x-ballerina-name: departmentXRefCode
        WasOfflinePunch:
          type: boolean
          x-ballerina-name: wasOfflinePunch
    LegacyLaborMetricCodes:
      type: object
      properties:
        Description:
          type: string
          x-ballerina-name: description
        LegacyLaborMetricType:
          type: string
          x-ballerina-name: legacyLaborMetricType
        LegacyLaborMetricXRefCode:
          type: string
          x-ballerina-name: legacyLaborMetricXRefCode
        Name:
          type: string
          x-ballerina-name: name
    AuthorityType:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    BusinessUnitParentAssignment:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        BusinessUnitGlobalId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
          x-ballerina-name: businessUnitGlobalId
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    EmployeeAvailabilityPostAPIRequestDTO:
      required:
      - EffectiveEnd
      - EffectiveStart
      - IsDefault
      - Weeks
      type: object
      properties:
        IsDefault:
          type: boolean
          x-ballerina-name: isDefault
        EffectiveEnd:
          type: string
          format: date-time
          x-ballerina-name: effectiveEnd
        Weeks:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeAvailabilityWeeksPostRequestDTO'
          x-ballerina-name: weeks
        EffectiveStart:
          type: string
          format: date-time
          x-ballerina-name: effectiveStart
        ManagerComments:
          type: string
          x-ballerina-name: managerComments
    EarningParameter:
      type: object
      properties:
        CodeName:
          type: string
          x-ballerina-name: codeName
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
        ParameterAccessType:
          allOf:
          - $ref: '#/components/schemas/ParameterAccessType'
          x-ballerina-name: parameterAccessType
    EmployeeScheduleMBPostAPIRequestDTO:
      required:
      - TimeEnd
      - TimeStart
      - Type
      type: object
      properties:
        Type:
          type: integer
          format: int32
          enum:
          - 1
          - 2
          x-ballerina-name: type
        TimeEnd:
          type: string
          format: date-time
          x-ballerina-name: timeEnd
        TimeStart:
          type: string
          format: date-time
          x-ballerina-name: timeStart
    ReportMetadata:
      type: object
      properties:
        ColumnMetadata:
          type: array
          description: An array of ReportColumnMetadata objects
          items:
            $ref: '#/components/schemas/ReportColumnMetadata'
          x-ballerina-name: columnMetadata
        Description:
          type: string
          description: "Description of the Report.\r\nThe description will be localized,\
            \ based on the Session Culture"
          x-ballerina-name: description
        Parameters:
          type: array
          description: Collection of report parameters defined by the report
          items:
            $ref: '#/components/schemas/ReportParameterMetadata'
          x-ballerina-name: parameters
        XRefCode:
          type: string
          description: "Reference Code for the Report.\r\nThis is a unique, human\
            \ readable, code used to identify the Report"
          x-ballerina-name: xRefCode
        MaxRows:
          type: integer
          description: "Maximum number of rows the Report will return as part of it's\
            \ ResultSet.\r\nIf the MaxRows is assigned -1, it will execute to include\
            \ all possible rows in it's ResultSet"
          format: int32
          x-ballerina-name: maxRows
        Name:
          type: string
          description: "Name of the Report.\r\nThe name will be localized, based on\
            \ the Session Culture"
          x-ballerina-name: name
      description: This class provides information about a report
    PayloadIEnumerableEmployeeOnboardingPolicy:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeOnboardingPolicy'
          x-ballerina-name: data
    EmployeeUnionCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeUnionMembership'
          x-ballerina-name: items
    Address:
      type: object
      properties:
        Address6:
          type: string
          x-ballerina-name: address6
        Address4:
          type: string
          x-ballerina-name: address4
        State:
          allOf:
          - $ref: '#/components/schemas/State'
          x-ballerina-name: state
        Address5:
          type: string
          x-ballerina-name: address5
        Address2:
          type: string
          x-ballerina-name: address2
        Address3:
          type: string
          x-ballerina-name: address3
        PostalCode:
          type: string
          x-ballerina-name: postalCode
        Country:
          allOf:
          - $ref: '#/components/schemas/Country'
          x-ballerina-name: country
        Address1:
          type: string
          x-ballerina-name: address1
        City:
          type: string
          x-ballerina-name: city
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    PayClassGroup:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    PayloadIEnumerableAuthorizationAssignment:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/AuthorizationAssignment'
          x-ballerina-name: data
    PayloadIEnumerableTaxAuthorityInstanceDetails:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/TaxAuthorityInstanceDetails'
          x-ballerina-name: data
    EmployeeUSFederalTaxCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeUSFederalTax'
          x-ballerina-name: items
    Deduction:
      type: object
      properties:
        DeductionCode:
          allOf:
          - $ref: '#/components/schemas/DeductionCode'
          x-ballerina-name: deductionCode
        CreditJournalNumber:
          type: string
          x-ballerina-name: creditJournalNumber
        CalculationType:
          allOf:
          - $ref: '#/components/schemas/CalculationType'
          x-ballerina-name: calculationType
        IsDecliningBalance:
          type: boolean
          x-ballerina-name: isDecliningBalance
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        DebitJournalNumber:
          type: string
          x-ballerina-name: debitJournalNumber
        DeductionType:
          allOf:
          - $ref: '#/components/schemas/DeductionType'
          x-ballerina-name: deductionType
        DisplayName:
          type: string
          x-ballerina-name: displayName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    EmployeeCANEmploymentInsuranceRate:
      type: object
      properties:
        EffectiveEnd:
          type: string
          format: date-time
          x-ballerina-name: effectiveEnd
        LegalEntity:
          allOf:
          - $ref: '#/components/schemas/LegalEntity'
          x-ballerina-name: legalEntity
        EffectiveStart:
          type: string
          format: date-time
          x-ballerina-name: effectiveStart
        RateGroup:
          type: string
          x-ballerina-name: rateGroup
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    AnalyticsReportDataset:
      type: object
      properties:
        Dataset:
          type: object
          x-ballerina-name: dataset
    CandidateApplicationStatusModel:
      type: object
      properties:
        EffectiveEnd:
          type: string
          format: date-time
          x-ballerina-name: effectiveEnd
        EffectiveStart:
          type: string
          format: date-time
          x-ballerina-name: effectiveStart
        StatusName:
          type: string
          x-ballerina-name: statusName
        StatusGroupName:
          type: string
          x-ballerina-name: statusGroupName
    EmployeeDEUTaxSocialInsuranceCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/DEUTaxSocialInsurance'
          x-ballerina-name: items
    PayloadEmploymentStatusReason:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          allOf:
          - $ref: '#/components/schemas/EmploymentStatusReason'
          x-ballerina-name: data
    EmployeeEarningsCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeEarning'
          x-ballerina-name: items
    EmployeeHRIncidentNote:
      type: object
      properties:
        DateAdded:
          type: string
          format: date-time
          x-ballerina-name: dateAdded
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
        Notes:
          type: string
          x-ballerina-name: notes
    EmployeeVolunteerList:
      type: object
      properties:
        EffectiveEnd:
          type: string
          format: date-time
          x-ballerina-name: effectiveEnd
        EffectiveStart:
          type: string
          format: date-time
          x-ballerina-name: effectiveStart
        VolunteerList:
          allOf:
          - $ref: '#/components/schemas/VolunteerList'
          x-ballerina-name: volunteerList
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    TaxProperty:
      type: object
      properties:
        PropertyValue:
          type: string
          x-ballerina-name: propertyValue
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
        PropertyCodeName:
          type: string
          x-ballerina-name: propertyCodeName
    LegacyLaborMetricPatchPostDeleteResponse:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
    OrgUnitParentCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/OrgUnitParent'
          x-ballerina-name: items
    Position:
      type: object
      properties:
        PositionTerm:
          allOf:
          - $ref: '#/components/schemas/PositionTerm'
          x-ballerina-name: positionTerm
        SemiMonthlyBottomHours:
          type: number
          format: double
          x-ballerina-name: semiMonthlyBottomHours
        ShortName:
          type: string
          x-ballerina-name: shortName
        AverageDailyHours:
          type: number
          format: double
          x-ballerina-name: averageDailyHours
        EffectiveEnd:
          type: string
          format: date-time
          x-ballerina-name: effectiveEnd
        Department:
          allOf:
          - $ref: '#/components/schemas/Department'
          x-ballerina-name: department
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        EffectiveStart:
          type: string
          format: date-time
          x-ballerina-name: effectiveStart
        StandardCostRate:
          type: number
          format: double
          x-ballerina-name: standardCostRate
        DefaultTargetBonus:
          type: number
          format: double
          x-ballerina-name: defaultTargetBonus
        Job:
          allOf:
          - $ref: '#/components/schemas/Job'
          x-ballerina-name: job
        SemiMonthlyTopHours:
          type: number
          format: double
          x-ballerina-name: semiMonthlyTopHours
        IsWCBExempt:
          type: boolean
          x-ballerina-name: isWCBExempt
        Executive:
          type: boolean
          x-ballerina-name: executive
        PayGroup:
          allOf:
          - $ref: '#/components/schemas/PayGroup'
          x-ballerina-name: payGroup
        PayClass:
          allOf:
          - $ref: '#/components/schemas/PayClass'
          x-ballerina-name: payClass
        PositionAssignments:
          allOf:
          - $ref: '#/components/schemas/PositionAssignmentCollection'
          x-ballerina-name: positionAssignments
        EmploymentIndicator:
          allOf:
          - $ref: '#/components/schemas/EmploymentIndicator'
          x-ballerina-name: employmentIndicator
        PayType:
          allOf:
          - $ref: '#/components/schemas/PayType'
          x-ballerina-name: payType
        PPACAFullTime:
          type: boolean
          x-ballerina-name: pPACAFullTime
        ClockTransferCode:
          type: string
          x-ballerina-name: clockTransferCode
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
        LedgerCode:
          type: string
          x-ballerina-name: ledgerCode
        LongName:
          type: string
          x-ballerina-name: longName
        FTE:
          type: number
          format: double
          x-ballerina-name: fTE
        WeeklyHours:
          type: number
          format: double
          x-ballerina-name: weeklyHours
        IsNonService:
          type: boolean
          x-ballerina-name: isNonService
        Officer:
          type: boolean
          x-ballerina-name: officer
    EmployeeUSStateTaxCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeUSStateTax'
          x-ballerina-name: items
    EmployeeDependentsBeneficiariesContactCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeDependentsBeneficiariesContact'
          x-ballerina-name: items
    CandidateApplicationStatusUpdatesModel:
      type: object
      properties:
        Identifier:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
          x-ballerina-name: identifier
        ApplicationStatuses:
          type: array
          items:
            $ref: '#/components/schemas/CandidateApplicationStatusModel'
          x-ballerina-name: applicationStatuses
    KpiData:
      type: object
      properties:
        OrgUnitXRefCode:
          type: string
          x-ballerina-name: orgUnitXRefCode
        AxisXRefCode:
          type: string
          x-ballerina-name: axisXRefCode
        Forma:
          type: string
          x-ballerina-name: forma
        Minute:
          type: string
          format: date-time
          x-ballerina-name: minute
        AdjustedValue:
          type: number
          format: double
          x-ballerina-name: adjustedValue
        Forecast:
          type: string
          x-ballerina-name: forecast
        Value:
          type: number
          format: double
          x-ballerina-name: value
        KpiXRefCode:
          type: string
          x-ballerina-name: kpiXRefCode
        Day:
          type: string
          format: date-time
          x-ballerina-name: day
        Week:
          type: string
          format: date-time
          x-ballerina-name: week
        AggregateToDay:
          type: boolean
          x-ballerina-name: aggregateToDay
        MdseXRefCode:
          type: string
          x-ballerina-name: mdseXRefCode
    CandidateRTWDocumentSource:
      type: object
      properties:
        SingleDocumentBase64:
          type: string
          x-ballerina-name: singleDocumentBase64
        DocumentBackBase64:
          type: string
          x-ballerina-name: documentBackBase64
        DocumentFrontBase64:
          type: string
          x-ballerina-name: documentFrontBase64
    BenefitsDFLinkExportDependentRecord:
      type: object
      properties:
        EmployeeNationalId:
          type: string
          x-ballerina-name: employeeNationalId
        DependentHandicapIndicator:
          type: boolean
          x-ballerina-name: dependentHandicapIndicator
        MedicareReasonCode:
          type: integer
          format: int32
          x-ballerina-name: medicareReasonCode
        NationalIDExpiryDate:
          type: string
          format: date-time
          x-ballerina-name: nationalIDExpiryDate
        UniqueDependentId:
          type: integer
          format: int32
          x-ballerina-name: uniqueDependentId
        StudentIndicator:
          type: boolean
          x-ballerina-name: studentIndicator
        RecordType:
          type: string
          x-ballerina-name: recordType
        ContactDetails:
          type: array
          items:
            $ref: '#/components/schemas/BenefitsDFLinkExportContact'
          x-ballerina-name: contactDetails
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        RelationshipCode:
          type: string
          x-ballerina-name: relationshipCode
        Height:
          type: integer
          format: int32
          x-ballerina-name: height
        MedicareStatusCode:
          type: integer
          format: int32
          x-ballerina-name: medicareStatusCode
        DateOfBirth:
          type: string
          format: date-time
          x-ballerina-name: dateOfBirth
        GenderCode:
          type: integer
          format: int32
          x-ballerina-name: genderCode
        InitialNoticeFlag:
          type: boolean
          x-ballerina-name: initialNoticeFlag
        DependentElectionDetails:
          type: array
          items:
            $ref: '#/components/schemas/BenefitsDFLinkExportDependentElectionDetail'
          x-ballerina-name: dependentElectionDetails
        EligibilityBeginDate:
          type: string
          format: date-time
          x-ballerina-name: eligibilityBeginDate
        SocialSecurityDisabilityAwardDate:
          type: string
          format: date-time
          x-ballerina-name: socialSecurityDisabilityAwardDate
        AddressDetails:
          type: array
          items:
            $ref: '#/components/schemas/BenefitsDFLinkExportAddress'
          x-ballerina-name: addressDetails
        FirstName:
          type: string
          x-ballerina-name: firstName
        NationalId:
          type: string
          x-ballerina-name: nationalId
        MiddleName:
          type: string
          x-ballerina-name: middleName
        DateLastSmoked:
          type: string
          format: date-time
          x-ballerina-name: dateLastSmoked
        DeathDate:
          type: string
          format: date-time
          x-ballerina-name: deathDate
        Weight:
          type: integer
          format: int32
          x-ballerina-name: weight
        TobaccoSubstanceUse:
          type: boolean
          x-ballerina-name: tobaccoSubstanceUse
        EligibilityEndDate:
          type: string
          format: date-time
          x-ballerina-name: eligibilityEndDate
        DependentAge:
          type: integer
          format: int32
          x-ballerina-name: dependentAge
        LastName:
          type: string
          x-ballerina-name: lastName
    HRPolicy:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    PunchPolicy:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    PayloadIEnumerableDepartment:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/Department'
          x-ballerina-name: data
    PayloadIEnumerableEmployeePayGradeRate:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeePayGradeRate'
          x-ballerina-name: data
    EmployeeAUSSuperannuationCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeAUSSuperannuation'
          x-ballerina-name: items
    PaginatedPayloadIEnumerableDataEntry:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Paging:
          allOf:
          - $ref: '#/components/schemas/Paging'
          x-ballerina-name: paging
        Data:
          type: array
          items:
            $ref: '#/components/schemas/DataEntry'
          x-ballerina-name: data
    AmfAuthorize:
      type: object
      properties:
        Tags:
          type: array
          items:
            type: string
          x-ballerina-name: tags
    DocumentImportQueueRequest:
      type: object
      properties:
        EntityTypeXRefCode:
          type: string
          x-ballerina-name: entityTypeXRefCode
        AdditionalData:
          type: string
          x-ballerina-name: additionalData
        Entity:
          type: string
          x-ballerina-name: entity
        Comment:
          type: string
          x-ballerina-name: comment
        FileName:
          type: string
          x-ballerina-name: fileName
        EmployeeXRefCode:
          type: string
          x-ballerina-name: employeeXRefCode
        EmployeeNumber:
          type: string
          x-ballerina-name: employeeNumber
        Link:
          type: string
          x-ballerina-name: link
        DocumentTypeXRefCode:
          type: string
          x-ballerina-name: documentTypeXRefCode
        Tags:
          type: array
          items:
            type: string
          x-ballerina-name: tags
    EmployeeWorkPattern:
      type: object
      properties:
        OrgLocationType:
          allOf:
          - $ref: '#/components/schemas/OrgLocationType'
          x-ballerina-name: orgLocationType
        ShiftTimeBegin:
          type: string
          format: date-time
          x-ballerina-name: shiftTimeBegin
        Deparment:
          allOf:
          - $ref: '#/components/schemas/Department'
          x-ballerina-name: deparment
        WorkPatternDayIndex:
          type: integer
          format: int32
          x-ballerina-name: workPatternDayIndex
        ShiftTimeEnd:
          type: string
          format: date-time
          x-ballerina-name: shiftTimeEnd
        NetHours:
          type: number
          format: double
          x-ballerina-name: netHours
        Job:
          allOf:
          - $ref: '#/components/schemas/Job'
          x-ballerina-name: job
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
        ShiftType:
          allOf:
          - $ref: '#/components/schemas/WorkPatternShiftType'
          x-ballerina-name: shiftType
        Location:
          allOf:
          - $ref: '#/components/schemas/Location'
          x-ballerina-name: location
    PaginatedPayloadIEnumerableSkill:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Paging:
          allOf:
          - $ref: '#/components/schemas/Paging'
          x-ballerina-name: paging
        Data:
          type: array
          items:
            $ref: '#/components/schemas/Skill'
          x-ballerina-name: data
    EmployeeTimeAwayFromWork:
      type: object
      properties:
        HalfDay:
          type: boolean
          x-ballerina-name: halfDay
        DailyElapsedHours:
          type: number
          format: double
          x-ballerina-name: dailyElapsedHours
        TAFWXRefCode:
          type: string
          x-ballerina-name: tAFWXRefCode
        TimeEnd:
          type: string
          format: date-time
          x-ballerina-name: timeEnd
        TimeStart:
          type: string
          format: date-time
          x-ballerina-name: timeStart
        ReasonName:
          type: string
          x-ballerina-name: reasonName
        AllDay:
          type: boolean
          x-ballerina-name: allDay
        NetUnitsType:
          type: integer
          format: int32
          x-ballerina-name: netUnitsType
        NetUnits:
          type: number
          format: double
          x-ballerina-name: netUnits
        ManagerComment:
          type: string
          x-ballerina-name: managerComment
        NetHours:
          type: number
          format: double
          x-ballerina-name: netHours
        EmployeeComment:
          type: string
          x-ballerina-name: employeeComment
        DateOfRequest:
          type: string
          format: date-time
          x-ballerina-name: dateOfRequest
    EmployeeSchedulePatchAPIRequestDTO:
      required:
      - EmployeeScheduleXRefCode
      type: object
      properties:
        EmployeeScheduleXRefCode:
          type: string
          x-ballerina-name: employeeScheduleXRefCode
        Activities:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeScheduleActivityPostAPIRequestDTO'
          x-ballerina-name: activities
        PayAdjCodeXRefCode:
          type: string
          x-ballerina-name: payAdjCodeXRefCode
        Breaks:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeScheduleMBPostAPIRequestDTO'
          x-ballerina-name: breaks
        Comment:
          type: string
          x-ballerina-name: comment
        IsDeleted:
          type: boolean
          x-ballerina-name: isDeleted
        TimeEnd:
          type: string
          format: date-time
          x-ballerina-name: timeEnd
        Segments:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeScheduleSegmentAPIRequestDTO'
          x-ballerina-name: segments
        TimeStart:
          type: string
          format: date-time
          x-ballerina-name: timeStart
        PostShiftBid:
          type: boolean
          x-ballerina-name: postShiftBid
        PositionXRefCode:
          type: string
          x-ballerina-name: positionXRefCode
        OrgLocationTypeXRefCode:
          type: string
          x-ballerina-name: orgLocationTypeXRefCode
        ProjectXRefCode:
          type: string
          x-ballerina-name: projectXRefCode
        DocketXRefCode:
          type: string
          x-ballerina-name: docketXRefCode
        LaborMetrics:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeScheduleLaborMetricPostAPIRequestDTO'
          x-ballerina-name: laborMetrics
        EmployeeXRefCode:
          type: string
          x-ballerina-name: employeeXRefCode
    GlobalPropertyOption:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    EmployeeConfidentialIdentificationCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeConfidentialIdentification'
          x-ballerina-name: items
    EmployeeWorkAssignmentManager:
      type: object
      properties:
        EffectiveEnd:
          type: string
          format: date-time
          x-ballerina-name: effectiveEnd
        TerminationDate:
          type: string
          format: date-time
          x-ballerina-name: terminationDate
        ManagerName:
          type: string
          x-ballerina-name: managerName
        EmploymentStatusGroupXRefCode:
          type: string
          x-ballerina-name: employmentStatusGroupXRefCode
        EffectiveStart:
          type: string
          format: date-time
          x-ballerina-name: effectiveStart
        ActiveEmployeeLocation:
          allOf:
          - $ref: '#/components/schemas/Location'
          x-ballerina-name: activeEmployeeLocation
        ActiveEmployeePosition:
          allOf:
          - $ref: '#/components/schemas/Position'
          x-ballerina-name: activeEmployeePosition
        ManagerXRefCode:
          type: string
          x-ballerina-name: managerXRefCode
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    EmployeeUKIrregularPaymentDetails:
      type: object
      properties:
        IrregularPayments:
          type: boolean
          x-ballerina-name: irregularPayments
        EffectiveEnd:
          type: string
          format: date-time
          x-ballerina-name: effectiveEnd
        LegalEntityXrefCode:
          type: string
          x-ballerina-name: legalEntityXrefCode
        EffectiveStart:
          type: string
          format: date-time
          x-ballerina-name: effectiveStart
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    PayloadIEnumerableEmployeeMaritalStatus:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeMaritalStatus'
          x-ballerina-name: data
    PayloadString:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: string
          x-ballerina-name: data
    EmployeeGlobalPropertyValue:
      type: object
      properties:
        EffectiveEnd:
          type: string
          format: date-time
          x-ballerina-name: effectiveEnd
        BitValue:
          type: boolean
          x-ballerina-name: bitValue
        DateTimeValue:
          type: string
          format: date-time
          x-ballerina-name: dateTimeValue
        NumberValue:
          type: number
          format: double
          x-ballerina-name: numberValue
        EffectiveStart:
          type: string
          format: date-time
          x-ballerina-name: effectiveStart
        OptionValue:
          allOf:
          - $ref: '#/components/schemas/GlobalPropertyOption'
          x-ballerina-name: optionValue
        StringValue:
          type: string
          x-ballerina-name: stringValue
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
        GlobalProperty:
          allOf:
          - $ref: '#/components/schemas/GlobalProperty'
          x-ballerina-name: globalProperty
    DEUTaxSocialInsurance:
      type: object
      properties:
        CalculationBasisXrefCode:
          type: string
          x-ballerina-name: calculationBasisXrefCode
        LevyXrefCode:
          type: string
          x-ballerina-name: levyXrefCode
        HealthInsuranceXrefCode:
          type: string
          x-ballerina-name: healthInsuranceXrefCode
        NumberOfEntitledChildren:
          type: string
          x-ballerina-name: numberOfEntitledChildren
        MainEmploymentWithMultipleMiniJobs:
          type: boolean
          x-ballerina-name: mainEmploymentWithMultipleMiniJobs
        EffectiveEnd:
          type: string
          format: date-time
          x-ballerina-name: effectiveEnd
        EffectiveStart:
          type: string
          format: date-time
          x-ballerina-name: effectiveStart
        IsMidijob:
          type: boolean
          x-ballerina-name: isMidijob
        LevyHealthInsuranceProviderXrefCode:
          type: string
          x-ballerina-name: levyHealthInsuranceProviderXrefCode
        PensionInsuranceXrefCode:
          type: string
          x-ballerina-name: pensionInsuranceXrefCode
        EmployeeGroupXrefCode:
          type: string
          x-ballerina-name: employeeGroupXrefCode
        CareInsuranceXrefCode:
          type: string
          x-ballerina-name: careInsuranceXrefCode
        IsParentLegalGuardian:
          type: boolean
          x-ballerina-name: isParentLegalGuardian
        IsSeasonalEmployee:
          type: boolean
          x-ballerina-name: isSeasonalEmployee
        RelationToEmployerXrefCode:
          type: string
          x-ballerina-name: relationToEmployerXrefCode
        HighestSchoolEducationXrefCode:
          type: string
          x-ballerina-name: highestSchoolEducationXrefCode
        EmployeePrivateHealthInsurance:
          allOf:
          - $ref: '#/components/schemas/EmployeePrivateHealthInsurance'
          x-ballerina-name: employeePrivateHealthInsurance
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
        EmployeeOccupationalPension:
          allOf:
          - $ref: '#/components/schemas/EmployeeOccupationalPension'
          x-ballerina-name: employeeOccupationalPension
        PublicHealthInsuranceXrefCode:
          type: string
          x-ballerina-name: publicHealthInsuranceXrefCode
        IsContractor:
          type: boolean
          x-ballerina-name: isContractor
        MainlySelfEmployed:
          type: boolean
          x-ballerina-name: mainlySelfEmployed
        UnemploymentInsuranceXrefCode:
          type: string
          x-ballerina-name: unemploymentInsuranceXrefCode
        HighestProfessionalEducationXrefCode:
          type: string
          x-ballerina-name: highestProfessionalEducationXrefCode
        ContractTypeXrefCode:
          type: string
          x-ballerina-name: contractTypeXrefCode
        EntitledToSickBenefit:
          type: boolean
          x-ballerina-name: entitledToSickBenefit
    PayRunStatus:
      type: object
      properties:
        Status:
          type: string
          x-ballerina-name: status
        RejectionReasonCategory:
          type: string
          x-ballerina-name: rejectionReasonCategory
        RejectionReasonCategoryXRefCode:
          type: string
          x-ballerina-name: rejectionReasonCategoryXRefCode
        CountryName:
          type: string
          x-ballerina-name: countryName
        PeriodEndDate:
          type: string
          format: date-time
          x-ballerina-name: periodEndDate
        PayGroupName:
          type: string
          x-ballerina-name: payGroupName
        PeriodStartDate:
          type: string
          format: date-time
          x-ballerina-name: periodStartDate
        RejectionReason:
          type: string
          x-ballerina-name: rejectionReason
        PPN:
          type: string
          x-ballerina-name: pPN
        PayDate:
          type: string
          format: date-time
          x-ballerina-name: payDate
        Currency:
          type: string
          x-ballerina-name: currency
        PayGroupXRefCode:
          type: string
          x-ballerina-name: payGroupXRefCode
        RejectionReasonDescription:
          type: string
          x-ballerina-name: rejectionReasonDescription
        CountryCode:
          type: string
          x-ballerina-name: countryCode
        RejectionReasonXRefCode:
          type: string
          x-ballerina-name: rejectionReasonXRefCode
    EmployeeIRLTaxRPNCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeIRLTaxRPN'
          x-ballerina-name: items
    DFVeteransStatus:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    AnalyticsReportMetadata:
      type: object
      properties:
        Filters:
          type: array
          description: An array of AnalyticsParameterMetadata objects
          items:
            $ref: '#/components/schemas/AnalyticsReportFilterMetadata'
          x-ballerina-name: filters
        Description:
          type: string
          description: "Description of the Report.\r\nThe description will be localized,\
            \ based on the Session Culture"
          x-ballerina-name: description
        XRefCode:
          type: string
          description: "Reference Code for the Report.\r\nThis is a unique, human\
            \ readable, code used to identify the Report"
          x-ballerina-name: xRefCode
        ReportId:
          type: integer
          description: FeatureId of the report
          format: int32
          x-ballerina-name: reportId
        Columns:
          type: array
          description: An array of ReportColumnMetadata objects
          items:
            $ref: '#/components/schemas/AnalyticsReportColumnMetadata'
          x-ballerina-name: columns
        MaxRows:
          type: integer
          description: Maximum number of rows the Report will return as part of it's
            ResultSet
          format: int32
          x-ballerina-name: maxRows
        OnlyIncludeUniqueRecords:
          type: boolean
          description: ""
          x-ballerina-name: onlyIncludeUniqueRecords
        Name:
          type: string
          description: "Name of the Report.\r\nThe name will be localized, based on\
            \ the Session Culture"
          x-ballerina-name: name
    EmployeeGLSplitSetDetailUpsert:
      type: object
      properties:
        LaborMetricsXRefCodes:
          type: array
          items:
            type: string
          x-ballerina-name: laborMetricsXRefCodes
        IsPrimary:
          type: boolean
          x-ballerina-name: isPrimary
        LaborPercentage:
          type: integer
          format: int32
          x-ballerina-name: laborPercentage
    PerformanceRating:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    TaxPropertyCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/TaxProperty'
          x-ballerina-name: items
    AmfRuleModel:
      type: object
      properties:
        FunctionName:
          type: string
          x-ballerina-name: functionName
        Parameters:
          type: array
          items:
            $ref: '#/components/schemas/AmfRuleParameterModel'
          x-ballerina-name: parameters
        WorkflowName:
          type: string
          x-ballerina-name: workflowName
    BackgroundScreeningBillingCode:
      type: object
      properties:
        ProviderReference:
          type: string
          x-ballerina-name: providerReference
        BillingCodes:
          type: array
          items:
            $ref: '#/components/schemas/BackgroundScreeningProviderBillingCode'
          x-ballerina-name: billingCodes
    AmfCfg:
      type: object
      properties:
        AppView:
          type: string
          x-ballerina-name: appView
        Type:
          type: string
          x-ballerina-name: type
        Model:
          type: string
          x-ballerina-name: model
        Module:
          type: string
          x-ballerina-name: module
    EmployeePayAdjustmentForSubmit:
      type: object
      properties:
        OrgUnitXRefCode:
          type: string
          x-ballerina-name: orgUnitXRefCode
        IsDeleted:
          type: boolean
          x-ballerina-name: isDeleted
        Hours:
          type: number
          format: double
          x-ballerina-name: hours
        IsPremium:
          type: boolean
          x-ballerina-name: isPremium
        JobXRefCode:
          type: string
          x-ballerina-name: jobXRefCode
        Rate:
          type: number
          format: double
          x-ballerina-name: rate
        EmployeeAuthorized:
          type: boolean
          x-ballerina-name: employeeAuthorized
        Amount:
          type: number
          format: double
          x-ballerina-name: amount
        AdjustPeriodEndDate:
          type: string
          format: date-time
          x-ballerina-name: adjustPeriodEndDate
        PayAdjustmentCodeXRefCode:
          type: string
          x-ballerina-name: payAdjustmentCodeXRefCode
        AdjustPeriodStartDate:
          type: string
          format: date-time
          x-ballerina-name: adjustPeriodStartDate
        EmployeePayAdjustXRefCode:
          type: string
          x-ballerina-name: employeePayAdjustXRefCode
        PayAdjustmentDate:
          type: string
          format: date-time
          x-ballerina-name: payAdjustmentDate
        PayCategoryXRefCode:
          type: string
          x-ballerina-name: payCategoryXRefCode
        PayDate:
          type: string
          format: date-time
          x-ballerina-name: payDate
        ProjectXRefCode:
          type: string
          x-ballerina-name: projectXRefCode
        DocketXRefCode:
          type: string
          x-ballerina-name: docketXRefCode
        LaborMetrics:
          type: array
          items:
            $ref: '#/components/schemas/EmployeePayAdjustmentLaborMetrics'
          x-ballerina-name: laborMetrics
        EmployeeXRefCode:
          type: string
          x-ballerina-name: employeeXRefCode
        ManagerComment:
          type: string
          x-ballerina-name: managerComment
        ManagerAuthorized:
          type: boolean
          x-ballerina-name: managerAuthorized
        DepartmentXRefCode:
          type: string
          x-ballerina-name: departmentXRefCode
        ReferenceDate:
          type: string
          format: date-time
          x-ballerina-name: referenceDate
        EmployeeComment:
          type: string
          x-ballerina-name: employeeComment
    PayrollEmployeeDeductionLimit:
      type: object
      properties:
        LimitPercent:
          type: number
          format: double
          x-ballerina-name: limitPercent
        LimitAmount:
          type: number
          format: double
          x-ballerina-name: limitAmount
        LimitTypeCodeName:
          type: string
          x-ballerina-name: limitTypeCodeName
        ShortNameFormattedPercent:
          type: string
          x-ballerina-name: shortNameFormattedPercent
        PayGroupDefaultLimitPercent:
          type: number
          format: double
          x-ballerina-name: payGroupDefaultLimitPercent
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
        PayGroupDefaultLimitAmount:
          type: number
          format: double
          x-ballerina-name: payGroupDefaultLimitAmount
        PRDeductionLimitXRefCode:
          type: string
          x-ballerina-name: pRDeductionLimitXRefCode
        ShortNameFormattedAmount:
          type: string
          x-ballerina-name: shortNameFormattedAmount
    PayloadEmploymentStatus:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          allOf:
          - $ref: '#/components/schemas/EmploymentStatus'
          x-ballerina-name: data
    PayloadIEnumerableEmployeeDocumentManagementSecurityGroup:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeDocumentManagementSecurityGroup'
          x-ballerina-name: data
    EmployeeDeductionPayeeParameter:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        EmployeeElectedValue:
          type: string
          x-ballerina-name: employeeElectedValue
        Comments:
          type: string
          x-ballerina-name: comments
        ShortName:
          type: string
          x-ballerina-name: shortName
        PayeeDefaultValue:
          type: string
          x-ballerina-name: payeeDefaultValue
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    EmploymentAgreementDetails:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    PayloadIEnumerableProcessResult:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: data
    EmployeeIRLTaxPAYEExclusion:
      type: object
      properties:
        EffectiveEnd:
          type: string
          format: date-time
          x-ballerina-name: effectiveEnd
        LegalEntity:
          allOf:
          - $ref: '#/components/schemas/LegalEntity'
          x-ballerina-name: legalEntity
        ExclusionOrder:
          type: boolean
          x-ballerina-name: exclusionOrder
        LegalEntityXrefCode:
          type: string
          x-ballerina-name: legalEntityXrefCode
        EffectiveStart:
          type: string
          format: date-time
          x-ballerina-name: effectiveStart
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    LMSEnrollmentStatus:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    EmployeeAUSFederalTaxCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeAUSFederalTax'
          x-ballerina-name: items
    CourseProvider:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    PayeeStateCoverage:
      type: object
      properties:
        EffectiveEnd:
          type: string
          format: date-time
          x-ballerina-name: effectiveEnd
        StateName:
          type: string
          x-ballerina-name: stateName
        StateCode:
          type: string
          x-ballerina-name: stateCode
        EffectiveStart:
          type: string
          format: date-time
          x-ballerina-name: effectiveStart
    PayloadIEnumerableJob:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/Job'
          x-ballerina-name: data
    PayloadEmployeeTimeAwayFromWorkForSubmit:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          allOf:
          - $ref: '#/components/schemas/EmployeeTimeAwayFromWorkForSubmit'
          x-ballerina-name: data
    AssignedSexCountryAware:
      type: object
      properties:
        UserDefinedComplianceCode:
          type: string
          x-ballerina-name: userDefinedComplianceCode
        AssignedSexComplianceCode:
          allOf:
          - $ref: '#/components/schemas/AssignedSexComplianceCode'
          x-ballerina-name: assignedSexComplianceCode
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    DEUEmployeeAccidentInsuranceCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/DEUEmployeeAccidentInsurance'
          x-ballerina-name: items
    SuperannuationContributionCalculationType:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    EmployeeBalanceTransactionForPatch:
      type: object
      properties:
        Comment:
          type: string
          x-ballerina-name: comment
        Delta:
          type: number
          format: double
          x-ballerina-name: delta
        GrantDelta:
          type: number
          format: double
          x-ballerina-name: grantDelta
        TransactionDate:
          type: string
          format: date-time
          x-ballerina-name: transactionDate
    PlanLaborCategoryCode:
      type: object
      properties:
        CategoryCodeXRefCode:
          type: string
          x-ballerina-name: categoryCodeXRefCode
        ShortName:
          type: string
          x-ballerina-name: shortName
    Paging:
      type: object
      properties:
        Next:
          type: string
          x-ballerina-name: next
    EmploymentStatus:
      type: object
      properties:
        EmploymentStatusGroup:
          allOf:
          - $ref: '#/components/schemas/EmploymentStatusGroup'
          x-ballerina-name: employmentStatusGroup
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        EffectiveStartingPointOfDay:
          type: string
          readOnly: true
          x-ballerina-name: effectiveStartingPointOfDay
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
        IsBenefitArrearsEnabled:
          type: boolean
          x-ballerina-name: isBenefitArrearsEnabled
    City:
      type: object
      properties:
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    PaginatedPayloadIEnumerableEmployeeSchedule:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Paging:
          allOf:
          - $ref: '#/components/schemas/Paging'
          x-ballerina-name: paging
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeSchedule'
          x-ballerina-name: data
    MaritalStatus:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    PMPosition:
      type: object
      properties:
        EffectiveEnd:
          type: string
          format: date-time
          x-ballerina-name: effectiveEnd
        LedgerCode:
          type: string
          x-ballerina-name: ledgerCode
        PositionGlobalId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
          x-ballerina-name: positionGlobalId
        Number:
          type: string
          x-ballerina-name: number
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        FTE:
          type: number
          format: double
          x-ballerina-name: fTE
        BusinessUnit:
          allOf:
          - $ref: '#/components/schemas/BusinessUnit'
          x-ballerina-name: businessUnit
        EffectiveStart:
          type: string
          format: date-time
          x-ballerina-name: effectiveStart
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    EmployeeDeductionParameterCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeDeductionParameter'
          x-ballerina-name: items
    EmergencyContactPersonContact:
      type: object
      properties:
        ShowRejectedWarning:
          type: boolean
          x-ballerina-name: showRejectedWarning
        ElectronicAddress:
          type: string
          x-ballerina-name: electronicAddress
        IsRejected:
          type: boolean
          x-ballerina-name: isRejected
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
        Extension:
          type: string
          x-ballerina-name: extension
        EffectiveEnd:
          type: string
          format: date-time
          x-ballerina-name: effectiveEnd
        IsUnlistedNumber:
          type: boolean
          x-ballerina-name: isUnlistedNumber
        EffectiveStart:
          type: string
          format: date-time
          x-ballerina-name: effectiveStart
        ContactNumber:
          type: string
          x-ballerina-name: contactNumber
        Country:
          allOf:
          - $ref: '#/components/schemas/Country'
          x-ballerina-name: country
        IsForSystemCommunications:
          type: boolean
          x-ballerina-name: isForSystemCommunications
        IsVerified:
          type: boolean
          x-ballerina-name: isVerified
        IsPreferredContactMethod:
          type: boolean
          x-ballerina-name: isPreferredContactMethod
        NumberOfVerificationRequests:
          type: integer
          format: int32
          x-ballerina-name: numberOfVerificationRequests
        ContactInformationType:
          allOf:
          - $ref: '#/components/schemas/ContactInformationType'
          x-ballerina-name: contactInformationType
        FormattedNumber:
          type: string
          x-ballerina-name: formattedNumber
    FederalFilingStatus:
      type: object
      properties:
        FederalFilingStatusCode:
          type: string
          x-ballerina-name: federalFilingStatusCode
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        PayrollOutput:
          type: string
          x-ballerina-name: payrollOutput
        CalculationCode:
          type: string
          x-ballerina-name: calculationCode
        ShortName:
          type: string
          x-ballerina-name: shortName
        CountryCode:
          type: string
          x-ballerina-name: countryCode
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    GenderIdentityCountryAware:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    EmployeeEarningPayeeParameter:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        EmployeeElectedValue:
          type: string
          x-ballerina-name: employeeElectedValue
        Comments:
          type: string
          x-ballerina-name: comments
        ShortName:
          type: string
          x-ballerina-name: shortName
        PayeeDefaultValue:
          type: string
          x-ballerina-name: payeeDefaultValue
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    PayloadCarrierFeeds:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          allOf:
          - $ref: '#/components/schemas/CarrierFeeds'
          x-ballerina-name: data
    PayloadLaborDemand:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          allOf:
          - $ref: '#/components/schemas/LaborDemand'
          x-ballerina-name: data
    BackgroundScreeningReportScreeningStatus:
      type: object
      properties:
        Status:
          type: string
          x-ballerina-name: status
        AdjudicationStatus:
          type: string
          x-ballerina-name: adjudicationStatus
        Result:
          type: string
          x-ballerina-name: result
    EmployeeDefaultLaborMetricsCodeCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeDefaultLaborMetricsCode'
          x-ballerina-name: items
    EmployeeUKPostgraduateLoan:
      type: object
      properties:
        EffectiveEnd:
          type: string
          format: date-time
          x-ballerina-name: effectiveEnd
        LegalEntityXrefCode:
          type: string
          x-ballerina-name: legalEntityXrefCode
        EffectiveStart:
          type: string
          format: date-time
          x-ballerina-name: effectiveStart
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    PlanTarget:
      type: object
      properties:
        EffectiveEnd:
          type: string
          format: date-time
          x-ballerina-name: effectiveEnd
        TargetValue:
          type: number
          format: double
          x-ballerina-name: targetValue
        DaysOfWeek:
          type: array
          items:
            type: string
          x-ballerina-name: daysOfWeek
        PlanTargetXRefCode:
          type: string
          x-ballerina-name: planTargetXRefCode
        Description:
          type: string
          x-ballerina-name: description
        CreationOrgUnitXRefCode:
          type: string
          x-ballerina-name: creationOrgUnitXRefCode
        EffectiveStart:
          type: string
          format: date-time
          x-ballerina-name: effectiveStart
        KpiXRefCode:
          type: string
          x-ballerina-name: kpiXRefCode
        ZoneXRefCode:
          type: string
          x-ballerina-name: zoneXRefCode
        OrgUnitXRefCodes:
          type: array
          items:
            type: string
          x-ballerina-name: orgUnitXRefCodes
        Name:
          type: string
          x-ballerina-name: name
    EmployeeSchedulePosition:
      type: object
      properties:
        LedgerCode:
          type: string
          x-ballerina-name: ledgerCode
        ClockCode:
          type: string
          x-ballerina-name: clockCode
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        JobXRefCode:
          type: string
          x-ballerina-name: jobXRefCode
        JobName:
          type: string
          x-ballerina-name: jobName
        DepartmentName:
          type: string
          x-ballerina-name: departmentName
        JobRank:
          type: integer
          format: int32
          x-ballerina-name: jobRank
        IsNonService:
          type: boolean
          x-ballerina-name: isNonService
        DepartmentXRefCode:
          type: string
          x-ballerina-name: departmentXRefCode
        Name:
          type: string
          x-ballerina-name: name
    PayloadIEnumerableUserPayAdjustCodeGroup:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/UserPayAdjustCodeGroup'
          x-ballerina-name: data
    AmfValidationModel:
      type: object
      properties:
        Type:
          type: string
          x-ballerina-name: type
        Value:
          type: object
          x-ballerina-name: value
    OrgUnitLegalEntityCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/OrgUnitLegalEntity'
          x-ballerina-name: items
    PayloadIEnumerableDEUTaxSocialInsurance:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/DEUTaxSocialInsurance'
          x-ballerina-name: data
    BenefitsDFLinkExportAddress:
      type: object
      properties:
        AddressLine3:
          type: string
          x-ballerina-name: addressLine3
        AddressLine2:
          type: string
          x-ballerina-name: addressLine2
        EffectiveEnd:
          type: string
          format: date-time
          x-ballerina-name: effectiveEnd
        AddressLine1:
          type: string
          x-ballerina-name: addressLine1
        RecordType:
          type: string
          x-ballerina-name: recordType
        StateCode:
          type: string
          x-ballerina-name: stateCode
        EffectiveStart:
          type: string
          format: date-time
          x-ballerina-name: effectiveStart
        PostalCode:
          type: string
          x-ballerina-name: postalCode
        City:
          type: string
          x-ballerina-name: city
        AddressType:
          type: string
          x-ballerina-name: addressType
        CountryCode:
          type: string
          x-ballerina-name: countryCode
        County:
          type: string
          x-ballerina-name: county
    PayloadIEnumerableEmployeeWorkContract:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeWorkContract'
          x-ballerina-name: data
    LaborMetric:
      type: object
      properties:
        CodeXRefCode:
          type: string
          x-ballerina-name: codeXRefCode
        TypeXRefCode:
          type: string
          x-ballerina-name: typeXRefCode
    EmployeeDependentsBeneficiariesCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeDependentBeneficiary'
          x-ballerina-name: items
    PayloadEmployeePunchPatchPostDeleteResponse:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          allOf:
          - $ref: '#/components/schemas/EmployeePunchPatchPostDeleteResponse'
          x-ballerina-name: data
    EmployeeCourseCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeCourse'
          x-ballerina-name: items
    DocMgmtSecurityGroup:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    PayeePaymentMethod:
      type: object
      properties:
        BankName:
          type: string
          x-ballerina-name: bankName
        ScheduleStartDate:
          type: string
          format: date-time
          x-ballerina-name: scheduleStartDate
        ScheduleEndDate:
          type: string
          format: date-time
          x-ballerina-name: scheduleEndDate
        SuppressPrintOfAdviceStatements:
          type: boolean
          x-ballerina-name: suppressPrintOfAdviceStatements
        PaymentMethodName:
          type: string
          x-ballerina-name: paymentMethodName
        BankNumber:
          type: string
          x-ballerina-name: bankNumber
        StatementLanguageCode:
          type: string
          x-ballerina-name: statementLanguageCode
        CombineEmployee:
          type: boolean
          x-ballerina-name: combineEmployee
        CombineEarningAndDeduction:
          type: boolean
          x-ballerina-name: combineEarningAndDeduction
        PayableTo:
          type: string
          x-ballerina-name: payableTo
        AccountTypeName:
          type: string
          x-ballerina-name: accountTypeName
        StatementMessage:
          type: string
          x-ballerina-name: statementMessage
        PaymentFrequencyName:
          type: string
          x-ballerina-name: paymentFrequencyName
        ShowEmployeeDetail:
          type: boolean
          x-ballerina-name: showEmployeeDetail
        PaymentFrequencyXRefCode:
          type: string
          x-ballerina-name: paymentFrequencyXRefCode
        PaymentMethodXrefCode:
          type: string
          x-ballerina-name: paymentMethodXrefCode
        TransitNumber:
          type: string
          x-ballerina-name: transitNumber
        SchedulePayDate:
          type: string
          format: date-time
          x-ballerina-name: schedulePayDate
        BuildingSocietyNumber:
          type: string
          x-ballerina-name: buildingSocietyNumber
        AccountNumber:
          type: string
          x-ballerina-name: accountNumber
        AccountTypeCode:
          type: string
          x-ballerina-name: accountTypeCode
        PayeeReferenceNumber:
          type: string
          x-ballerina-name: payeeReferenceNumber
        PayeeCode:
          type: string
          x-ballerina-name: payeeCode
        AllowNegativeAmounts:
          type: boolean
          x-ballerina-name: allowNegativeAmounts
        StatementLanguageName:
          type: string
          x-ballerina-name: statementLanguageName
    OperatingHoursRecurExceptionDetails:
      type: object
      properties:
        RecurrenceEndDate:
          type: string
          format: date-time
          x-ballerina-name: recurrenceEndDate
        RecurrencePeriod:
          type: integer
          format: int32
          x-ballerina-name: recurrencePeriod
        RecurrenceType:
          type: integer
          format: int32
          x-ballerina-name: recurrenceType
        RecurrenceValue:
          type: string
          x-ballerina-name: recurrenceValue
    EarningType:
      type: object
      properties:
        CodeName:
          type: string
          x-ballerina-name: codeName
        IsGLAllocatedDebit:
          type: boolean
          x-ballerina-name: isGLAllocatedDebit
        IsGLAllocatedCredit:
          type: boolean
          x-ballerina-name: isGLAllocatedCredit
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    JobPostingApplicantModel:
      type: object
      properties:
        Locale:
          type: string
          x-ballerina-name: locale
        CandidateSource:
          allOf:
          - $ref: '#/components/schemas/CandidateProfileSource'
          x-ballerina-name: candidateSource
        Questions:
          allOf:
          - $ref: '#/components/schemas/QuestionsInResponse'
          x-ballerina-name: questions
        AppliedOnMillis:
          type: integer
          format: int64
          x-ballerina-name: appliedOnMillis
        Job:
          allOf:
          - $ref: '#/components/schemas/JobPostingResponseModel'
          x-ballerina-name: job
        Applicant:
          allOf:
          - $ref: '#/components/schemas/ApplicantDetails'
          x-ballerina-name: applicant
    EmployeeWorkLocationOverride:
      type: object
      properties:
        LegalEntityOverrideDetails:
          type: array
          items:
            $ref: '#/components/schemas/LegalEntityOverride'
          x-ballerina-name: legalEntityOverrideDetails
        Description:
          type: string
          x-ballerina-name: description
        LocationAddressXRefCode:
          type: string
          x-ballerina-name: locationAddressXRefCode
        Address:
          type: string
          x-ballerina-name: address
        CountryName:
          type: string
          x-ballerina-name: countryName
        StateName:
          type: string
          x-ballerina-name: stateName
        Address2:
          type: string
          x-ballerina-name: address2
        StateCode:
          type: string
          x-ballerina-name: stateCode
        PostalCode:
          type: string
          x-ballerina-name: postalCode
        CityName:
          type: string
          x-ballerina-name: cityName
        County:
          type: string
          x-ballerina-name: county
        LocationName:
          type: string
          x-ballerina-name: locationName
        AllowLegalEntityOverride:
          type: boolean
          x-ballerina-name: allowLegalEntityOverride
        ReferenceCode:
          type: string
          x-ballerina-name: referenceCode
        CountryCode:
          type: string
          x-ballerina-name: countryCode
        JeddTaxes:
          type: string
          x-ballerina-name: jeddTaxes
    EmployeeUKStudentLoanCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeUKStudentLoan'
          x-ballerina-name: items
    AwardDetails:
      type: object
      properties:
        Description:
          type: string
          x-ballerina-name: description
        Title:
          type: string
          x-ballerina-name: title
        DateYear:
          type: string
          x-ballerina-name: dateYear
        DateMonth:
          type: string
          x-ballerina-name: dateMonth
    AnalyticsListValue:
      type: object
      properties:
        ListValueId:
          type: integer
          description: "The Id of the list item.  This value would be passed as the\
            \ parameter value.\r\nMultiple Id's can be passed as a parameter value\
            \ if comma separated"
          format: int32
          x-ballerina-name: listValueId
        Name:
          type: string
          description: The name that can be displayed in a list to the user
          x-ballerina-name: name
    PayloadIEnumerableEmployeePerformanceRating:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeePerformanceRating'
          x-ballerina-name: data
    PayloadIEnumerablePersonAddress:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/PersonAddress'
          x-ballerina-name: data
    PlanLaborStandardDriver:
      type: object
      properties:
        DriverTypeShortName:
          type: string
          x-ballerina-name: driverTypeShortName
        DriverShortName:
          type: string
          x-ballerina-name: driverShortName
        DriverXRefCode:
          type: string
          x-ballerina-name: driverXRefCode
        DriverTypeXRefCode:
          type: string
          x-ballerina-name: driverTypeXRefCode
    LegalEntity:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        LegalEntityAddress:
          allOf:
          - $ref: '#/components/schemas/Address'
          x-ballerina-name: legalEntityAddress
        LegalIdNumber:
          type: string
          x-ballerina-name: legalIdNumber
        Country:
          allOf:
          - $ref: '#/components/schemas/Country'
          x-ballerina-name: country
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    DocumentImportQueueResponse:
      type: object
      properties:
        Status:
          type: string
          x-ballerina-name: status
        DocumentsQueued:
          type: array
          items:
            type: integer
            format: int32
          x-ballerina-name: documentsQueued
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        JobGuid:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
          x-ballerina-name: jobGuid
        QueueTimestamp:
          type: string
          format: date-time
          x-ballerina-name: queueTimestamp
    OrgLevel:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    BackgroundJobLogParameters:
      type: object
      properties:
        Value:
          type: string
          x-ballerina-name: value
        Name:
          type: string
          x-ballerina-name: name
    VolunteerList:
      type: object
      properties:
        EffectiveEnd:
          type: string
          format: date-time
          x-ballerina-name: effectiveEnd
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        EffectiveStart:
          type: string
          format: date-time
          x-ballerina-name: effectiveStart
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    Activity:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        TimeEnd:
          type: string
          format: date-time
          x-ballerina-name: timeEnd
        TimeStart:
          type: string
          format: date-time
          x-ballerina-name: timeStart
    PositionDetails:
      type: object
      properties:
        Company:
          type: string
          x-ballerina-name: company
        StartDateMonth:
          type: string
          x-ballerina-name: startDateMonth
        EndDateYear:
          type: string
          x-ballerina-name: endDateYear
        EndCurrent:
          type: boolean
          x-ballerina-name: endCurrent
        Description:
          type: string
          x-ballerina-name: description
        EndDateMonth:
          type: string
          x-ballerina-name: endDateMonth
        Title:
          type: string
          x-ballerina-name: title
        StartDateYear:
          type: string
          x-ballerina-name: startDateYear
        Location:
          type: string
          x-ballerina-name: location
    DEUEmployeeAccidentInsurance:
      type: object
      properties:
        EffectiveEnd:
          type: string
          format: date-time
          x-ballerina-name: effectiveEnd
        LegalEntityXrefCode:
          type: string
          x-ballerina-name: legalEntityXrefCode
        IsExempt:
          type: boolean
          x-ballerina-name: isExempt
        AccidentInsuranceHazardCategory:
          allOf:
          - $ref: '#/components/schemas/DEUEmployeeAccidentInsuranceHazardCategoryCollection'
          x-ballerina-name: accidentInsuranceHazardCategory
        EffectiveStart:
          type: string
          format: date-time
          x-ballerina-name: effectiveStart
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    AccumulationType:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    DeductionPayeeParameter:
      type: object
      properties:
        PayeeParameterXRefCode:
          type: string
          x-ballerina-name: payeeParameterXRefCode
        Value:
          type: string
          x-ballerina-name: value
        PayeeParameterName:
          type: string
          x-ballerina-name: payeeParameterName
    PayloadIEnumerableEmployeeDisability:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeDisability'
          x-ballerina-name: data
    DFUnion:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    PaginatedPayloadIEnumerableLMSCertification:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Paging:
          allOf:
          - $ref: '#/components/schemas/Paging'
          x-ballerina-name: paging
        Data:
          type: array
          items:
            $ref: '#/components/schemas/LMSCertification'
          x-ballerina-name: data
    Department:
      type: object
      properties:
        LedgerCode:
          type: string
          x-ballerina-name: ledgerCode
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    AccidentInsuranceHazardCategory:
      type: object
      properties:
        Percentage:
          type: integer
          format: int32
          x-ballerina-name: percentage
        PRDEUAccidentInsuranceProvider_BBNR_UV:
          type: string
          x-ballerina-name: pRDEUAccidentInsuranceProviderBBNRUV
        CategoryNumber:
          type: string
          x-ballerina-name: categoryNumber
    PayloadIEnumerableDocument:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/Document'
          x-ballerina-name: data
    PayloadPosition:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          allOf:
          - $ref: '#/components/schemas/Position'
          x-ballerina-name: data
    LocationAddress:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        State:
          allOf:
          - $ref: '#/components/schemas/State'
          x-ballerina-name: state
        Address2:
          type: string
          x-ballerina-name: address2
        PostalCode:
          type: string
          x-ballerina-name: postalCode
        Country:
          allOf:
          - $ref: '#/components/schemas/Country'
          x-ballerina-name: country
        ShortName:
          type: string
          x-ballerina-name: shortName
        Address1:
          type: string
          x-ballerina-name: address1
        City:
          type: string
          x-ballerina-name: city
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
        County:
          type: string
          x-ballerina-name: county
    EmployeeDefaultLaborMetricsCode:
      type: object
      properties:
        LaborMetricsCode:
          allOf:
          - $ref: '#/components/schemas/LaborMetricsCode'
          x-ballerina-name: laborMetricsCode
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    PayloadCandidateApplicationStatusUpdatesPaginationModel:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          allOf:
          - $ref: '#/components/schemas/CandidateApplicationStatusUpdatesPaginationModel'
          x-ballerina-name: data
    EmployeeAddress:
      type: object
      properties:
        AddressLine2:
          type: string
          x-ballerina-name: addressLine2
        AddressLine1:
          type: string
          x-ballerina-name: addressLine1
        State:
          type: string
          x-ballerina-name: state
        Country:
          type: string
          x-ballerina-name: country
        PostalCode:
          type: string
          x-ballerina-name: postalCode
        City:
          type: string
          x-ballerina-name: city
    PRSIClass:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    EmployeeEIRateCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeCANEmploymentInsuranceRate'
          x-ballerina-name: items
    LimitType:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    PayClass:
      type: object
      properties:
        LedgerCode:
          type: string
          x-ballerina-name: ledgerCode
        PayClassGroup:
          allOf:
          - $ref: '#/components/schemas/PayClassGroup'
          x-ballerina-name: payClassGroup
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        SortOrder:
          type: integer
          format: int32
          x-ballerina-name: sortOrder
        ShortName:
          type: string
          x-ballerina-name: shortName
        DefaultNormalWeeklyHours:
          type: number
          format: double
          x-ballerina-name: defaultNormalWeeklyHours
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
        PayClassFrequency:
          allOf:
          - $ref: '#/components/schemas/PayClassFrequency'
          x-ballerina-name: payClassFrequency
    LegalEntityAddress:
      type: object
      properties:
        AddressLine2:
          type: string
          x-ballerina-name: addressLine2
        AddressLine1:
          type: string
          x-ballerina-name: addressLine1
        State:
          type: string
          x-ballerina-name: state
        Country:
          type: string
          x-ballerina-name: country
        PostalCode:
          type: string
          x-ballerina-name: postalCode
        City:
          type: string
          x-ballerina-name: city
    EmployeeSkill:
      type: object
      properties:
        EffectiveEnd:
          type: string
          format: date-time
          x-ballerina-name: effectiveEnd
        Skill:
          allOf:
          - $ref: '#/components/schemas/Skill'
          x-ballerina-name: skill
        SkillLevel:
          allOf:
          - $ref: '#/components/schemas/SkillLevel'
          x-ballerina-name: skillLevel
        LMSAssignmentMethod:
          allOf:
          - $ref: '#/components/schemas/LMSAssignmentMethod'
          x-ballerina-name: lMSAssignmentMethod
        EffectiveStart:
          type: string
          format: date-time
          x-ballerina-name: effectiveStart
        TrainingProgram:
          allOf:
          - $ref: '#/components/schemas/TrainingProgram'
          x-ballerina-name: trainingProgram
        Course:
          allOf:
          - $ref: '#/components/schemas/Course'
          x-ballerina-name: course
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
        LastAssignedBy:
          type: string
          x-ballerina-name: lastAssignedBy
    LegalEntityWorkSiteState:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    LaborCostTimeInterval:
      type: object
      properties:
        Totals:
          allOf:
          - $ref: '#/components/schemas/LaborCostTotalResult'
          x-ballerina-name: totals
        IntervalStartTime:
          type: string
          format: date-time
          x-ballerina-name: intervalStartTime
        IntervalEndTime:
          type: string
          format: date-time
          x-ballerina-name: intervalEndTime
    BioSensitivityLevel:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    ClientMetadata:
      type: object
      properties:
        ServiceUri:
          type: string
          x-ballerina-name: serviceUri
        ServiceVersion:
          type: string
          x-ballerina-name: serviceVersion
    EarningPayee:
      type: object
      properties:
        PayeeXRefCode:
          type: string
          x-ballerina-name: payeeXRefCode
        PayeeParameters:
          type: array
          items:
            $ref: '#/components/schemas/EarningPayeeParameter'
          x-ballerina-name: payeeParameters
        EffectiveEnd:
          type: string
          format: date-time
          x-ballerina-name: effectiveEnd
        EarningScheduleXRefCode:
          type: string
          x-ballerina-name: earningScheduleXRefCode
        PayeeEarningLimits:
          type: array
          items:
            $ref: '#/components/schemas/EarningPayeeEarningLimit'
          x-ballerina-name: payeeEarningLimits
        PayeeName:
          type: string
          x-ballerina-name: payeeName
        PayeeEarningParameters:
          type: array
          items:
            $ref: '#/components/schemas/EarningPayeeEarningParameter'
          x-ballerina-name: payeeEarningParameters
        EffectiveStart:
          type: string
          format: date-time
          x-ballerina-name: effectiveStart
        EarningScheduleName:
          type: string
          x-ballerina-name: earningScheduleName
        Default:
          type: boolean
          x-ballerina-name: default
    PayloadIEnumerableEmployeeEmploymentType:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeEmploymentType'
          x-ballerina-name: data
    PayrollPolicy:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    BackgroundScreeningProviderPackage:
      type: object
      properties:
        Description:
          type: string
          x-ballerina-name: description
        IncludeRTW:
          type: boolean
          x-ballerina-name: includeRTW
        AssociatedBillingCodes:
          type: array
          items:
            $ref: '#/components/schemas/BackgroundScreeningAssociatedBillingCode'
          x-ballerina-name: associatedBillingCodes
        PackageId:
          type: string
          x-ballerina-name: packageId
        Name:
          type: string
          x-ballerina-name: name
    PayTypeGroup:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    PayloadIEnumerableEmployeeDirectDeposit:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeDirectDeposit'
          x-ballerina-name: data
    PayloadIEnumerableEmployeeUnionMembership:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeUnionMembership'
          x-ballerina-name: data
    EmployeeEthnicity:
      type: object
      properties:
        EffectiveEnd:
          type: string
          format: date-time
          x-ballerina-name: effectiveEnd
        Ethnicity:
          allOf:
          - $ref: '#/components/schemas/DFEthnicity'
          x-ballerina-name: ethnicity
        EffectiveStart:
          type: string
          format: date-time
          x-ballerina-name: effectiveStart
        ManagerEthnicity:
          allOf:
          - $ref: '#/components/schemas/DFEthnicity'
          x-ballerina-name: managerEthnicity
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    EmployeeWorkAssignment:
      type: object
      properties:
        TelecommuterPercentage:
          type: number
          format: double
          x-ballerina-name: telecommuterPercentage
        JobClassificationGlobal:
          allOf:
          - $ref: '#/components/schemas/JobClassificationGlobal'
          x-ballerina-name: jobClassificationGlobal
        PositionTerm:
          allOf:
          - $ref: '#/components/schemas/PositionTerm'
          x-ballerina-name: positionTerm
        IsPAPrimaryWorkSite:
          type: boolean
          x-ballerina-name: isPAPrimaryWorkSite
        EmploymentStatusReason:
          allOf:
          - $ref: '#/components/schemas/EmploymentStatusReason'
          x-ballerina-name: employmentStatusReason
        IsVirtual:
          type: boolean
          x-ballerina-name: isVirtual
        LastModifiedTimeStamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimeStamp
        EffectiveEnd:
          type: string
          format: date-time
          x-ballerina-name: effectiveEnd
        PRBankAccountBranchAddress:
          allOf:
          - $ref: '#/components/schemas/BankAccountBranchAddress'
          x-ballerina-name: pRBankAccountBranchAddress
        EndSecondaryWorkAssignments:
          type: boolean
          x-ballerina-name: endSecondaryWorkAssignments
        BusinessTitle:
          type: string
          x-ballerina-name: businessTitle
        EffectiveStart:
          type: string
          format: date-time
          x-ballerina-name: effectiveStart
        LaborPercentage:
          type: number
          format: double
          x-ballerina-name: laborPercentage
        WorkLocationOverride:
          allOf:
          - $ref: '#/components/schemas/WorkLocationOverride'
          x-ballerina-name: workLocationOverride
        JobRate:
          type: number
          format: double
          x-ballerina-name: jobRate
        IsConvenienceOfEmployee:
          type: boolean
          x-ballerina-name: isConvenienceOfEmployee
        Position:
          allOf:
          - $ref: '#/components/schemas/Position'
          x-ballerina-name: position
        FlatAmount:
          type: number
          format: double
          x-ballerina-name: flatAmount
        TipTypeGroup:
          allOf:
          - $ref: '#/components/schemas/TipTypeGroup'
          x-ballerina-name: tipTypeGroup
        PMPositionAssignment:
          allOf:
          - $ref: '#/components/schemas/PMPositionAssignment'
          x-ballerina-name: pMPositionAssignment
        EmploymentIndicator:
          allOf:
          - $ref: '#/components/schemas/EmploymentIndicator'
          x-ballerina-name: employmentIndicator
        Rank:
          type: integer
          format: int64
          x-ballerina-name: rank
        OriginalEffectiveStart:
          type: string
          format: date-time
          x-ballerina-name: originalEffectiveStart
        ParticipateInReciprocalTaxCalculation:
          type: boolean
          x-ballerina-name: participateInReciprocalTaxCalculation
        JobSetLevel:
          allOf:
          - $ref: '#/components/schemas/JobSetLevel'
          x-ballerina-name: jobSetLevel
        LedgerCode:
          type: string
          x-ballerina-name: ledgerCode
        OriginalEffectiveEnd:
          type: string
          format: date-time
          x-ballerina-name: originalEffectiveEnd
        FTE:
          type: number
          format: double
          x-ballerina-name: fTE
        OriginalIsPrimary:
          type: boolean
          x-ballerina-name: originalIsPrimary
        MultiJSalaryAllocationPercent:
          type: number
          format: double
          x-ballerina-name: multiJSalaryAllocationPercent
        IsPrimary:
          type: boolean
          x-ballerina-name: isPrimary
        IsStatutory:
          type: boolean
          x-ballerina-name: isStatutory
        Location:
          allOf:
          - $ref: '#/components/schemas/Location'
          x-ballerina-name: location
    PaginatedPayloadIEnumerableLaborValidationRule:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Paging:
          allOf:
          - $ref: '#/components/schemas/Paging'
          x-ballerina-name: paging
        Data:
          type: array
          items:
            $ref: '#/components/schemas/LaborValidationRule'
          x-ballerina-name: data
    EmployeeUKTaxDetailsCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeUKTaxDetails'
          x-ballerina-name: items
    PayloadIEnumerableSkill:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/Skill'
          x-ballerina-name: data
    DeductionParameter:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
        ParameterAccessType:
          allOf:
          - $ref: '#/components/schemas/ParameterAccessType'
          x-ballerina-name: parameterAccessType
    ScheduleEmployee:
      type: object
      properties:
        SocialSecurityNumber:
          type: string
          x-ballerina-name: socialSecurityNumber
        Address:
          type: string
          x-ballerina-name: address
        FirstName:
          type: string
          x-ballerina-name: firstName
        EmployeeNumber:
          type: string
          x-ballerina-name: employeeNumber
        Address2:
          type: string
          x-ballerina-name: address2
        StateCode:
          type: string
          x-ballerina-name: stateCode
        PostalCode:
          type: string
          x-ballerina-name: postalCode
        City:
          type: string
          x-ballerina-name: city
        Gender:
          type: string
          x-ballerina-name: gender
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        HomePhone:
          type: string
          x-ballerina-name: homePhone
        DisplayName:
          type: string
          x-ballerina-name: displayName
        HireDate:
          type: string
          format: date-time
          x-ballerina-name: hireDate
        LastName:
          type: string
          x-ballerina-name: lastName
        CountryCode:
          type: string
          x-ballerina-name: countryCode
        BadgeNumber:
          type: string
          x-ballerina-name: badgeNumber
        SeniorityDate:
          type: string
          format: date-time
          x-ballerina-name: seniorityDate
        BirthDate:
          type: string
          format: date-time
          x-ballerina-name: birthDate
    LMSCertificationStatus:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    EmployeeEmploymentAgreementCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeEmploymentAgreement'
          x-ballerina-name: items
    EmployeeGLSplits:
      type: object
      properties:
        EmployeeGLSplitSets:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeGLSplitSets'
          x-ballerina-name: employeeGLSplitSets
        EmployeeXRefCode:
          type: string
          x-ballerina-name: employeeXRefCode
        EmployeeNumber:
          type: string
          x-ballerina-name: employeeNumber
        EmployeeName:
          type: string
          x-ballerina-name: employeeName
    EmployeeAvailabilityWeeksPostRequestDTO:
      required:
      - Days
      type: object
      properties:
        Days:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeAvailabilityDaysPostRequestDTO'
          x-ballerina-name: days
    PayrollPayEntryImportHistory:
      type: object
      properties:
        PayDate:
          type: string
          x-ballerina-name: payDate
        Currency:
          type: string
          x-ballerina-name: currency
        PeriodStart:
          type: string
          x-ballerina-name: periodStart
        PayGroupXRefCode:
          type: string
          x-ballerina-name: payGroupXRefCode
        Imports:
          type: array
          items:
            $ref: '#/components/schemas/PayrollPayEntryImportHistoryDetails'
          x-ballerina-name: imports
        PeriodEnd:
          type: string
          x-ballerina-name: periodEnd
        PPN:
          type: string
          x-ballerina-name: pPN
    PaginatedPayloadPersonManagementEraseHistory:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Paging:
          allOf:
          - $ref: '#/components/schemas/Paging'
          x-ballerina-name: paging
        Data:
          allOf:
          - $ref: '#/components/schemas/PersonManagementEraseHistory'
          x-ballerina-name: data
    Publications:
      type: object
      properties:
        _Total:
          type: integer
          format: int32
          x-ballerina-name: total
        Values:
          type: array
          items:
            $ref: '#/components/schemas/PublicationDetails'
          x-ballerina-name: values
    EmployeePrivateHealthInsurance:
      type: object
      properties:
        HealthInsuranceStartDate:
          type: string
          format: date-time
          x-ballerina-name: healthInsuranceStartDate
        BaseContributionHealth:
          type: number
          format: double
          x-ballerina-name: baseContributionHealth
        PrivateHealthInsuranceXrefCode:
          type: string
          x-ballerina-name: privateHealthInsuranceXrefCode
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
        PaymentCompletedByXrefCode:
          type: string
          x-ballerina-name: paymentCompletedByXrefCode
        TotalContributionCare:
          type: number
          format: double
          x-ballerina-name: totalContributionCare
        TotalContributionHealth:
          type: number
          format: double
          x-ballerina-name: totalContributionHealth
        BaseContributionCare:
          type: number
          format: double
          x-ballerina-name: baseContributionCare
    BackgroundScreeningAssociatedBillingCode:
      type: object
      properties:
        BillingCodeId:
          type: string
          x-ballerina-name: billingCodeId
        Description:
          type: string
          x-ballerina-name: description
        Name:
          type: string
          x-ballerina-name: name
    PayloadIEnumerableEmployeeLocation:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeLocation'
          x-ballerina-name: data
    KpiTargetPatternPOST:
      type: object
      properties:
        Assignment:
          type: array
          items:
            $ref: '#/components/schemas/KpiTargetPatternAssignment'
          x-ballerina-name: assignment
        Pattern:
          type: array
          items:
            $ref: '#/components/schemas/KpiTargetPatternDetail'
          x-ballerina-name: pattern
    PayloadDocumentImportQueueResponse:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          allOf:
          - $ref: '#/components/schemas/DocumentImportQueueResponse'
          x-ballerina-name: data
    PayeeParameter:
      type: object
      properties:
        PayeeParameterDescription:
          type: string
          x-ballerina-name: payeeParameterDescription
        Pattern:
          type: string
          x-ballerina-name: pattern
        Required:
          type: boolean
          x-ballerina-name: required
        AccessTypeName:
          type: string
          x-ballerina-name: accessTypeName
        PayeeParameterXRefCode:
          type: string
          x-ballerina-name: payeeParameterXRefCode
        ParameterTypeXRefCode:
          type: string
          x-ballerina-name: parameterTypeXRefCode
        PayeeParameterName:
          type: string
          x-ballerina-name: payeeParameterName
        ParameterTypeName:
          type: string
          x-ballerina-name: parameterTypeName
        AccessTypeCode:
          type: string
          x-ballerina-name: accessTypeCode
        MaxLength:
          type: integer
          format: int32
          x-ballerina-name: maxLength
        DataTypeCode:
          type: string
          x-ballerina-name: dataTypeCode
    PunchExtraData:
      type: object
      properties:
        MealWaiver:
          type: string
          x-ballerina-name: mealWaiver
        BreakAttestation:
          type: boolean
          x-ballerina-name: breakAttestation
        Quantity:
          type: number
          format: double
          x-ballerina-name: quantity
        ProjectClockTransferCode:
          type: string
          x-ballerina-name: projectClockTransferCode
        PositionClockTransferCode:
          type: string
          x-ballerina-name: positionClockTransferCode
        PositionXRefCode:
          type: string
          x-ballerina-name: positionXRefCode
        FaceVerificationFailure:
          type: boolean
          x-ballerina-name: faceVerificationFailure
        ProjectXRefCode:
          type: string
          x-ballerina-name: projectXRefCode
        BioFailure:
          type: boolean
          x-ballerina-name: bioFailure
        DocketClockTransferCode:
          type: string
          x-ballerina-name: docketClockTransferCode
        DocketXRefCode:
          type: string
          x-ballerina-name: docketXRefCode
        LaborMetrics:
          type: array
          items:
            $ref: '#/components/schemas/PunchLaborMetric'
          x-ballerina-name: laborMetrics
        LocationXRefCode:
          type: string
          x-ballerina-name: locationXRefCode
        LocationClockTransferCode:
          type: string
          x-ballerina-name: locationClockTransferCode
    EmployeePaySummary:
      type: object
      properties:
        LaborMetricsCode4XRefCode:
          type: string
          x-ballerina-name: laborMetricsCode4XRefCode
        LaborMetricsCode3XRefCode:
          type: string
          x-ballerina-name: laborMetricsCode3XRefCode
        BusinessDate:
          type: string
          format: date-time
          x-ballerina-name: businessDate
        IsPremium:
          type: boolean
          x-ballerina-name: isPremium
        TimeEnd:
          type: string
          format: date-time
          x-ballerina-name: timeEnd
        LaborMetricsCode1XRefCode:
          type: string
          x-ballerina-name: laborMetricsCode1XRefCode
        PieceQuantity:
          type: number
          format: double
          x-ballerina-name: pieceQuantity
        TimeStart:
          type: string
          format: date-time
          x-ballerina-name: timeStart
        LaborMetricsCode2XRefCode:
          type: string
          x-ballerina-name: laborMetricsCode2XRefCode
        LaborMetricsCode8XRefCode:
          type: string
          x-ballerina-name: laborMetricsCode8XRefCode
        PositionXRefCode:
          type: string
          x-ballerina-name: positionXRefCode
        LaborMetricsCode9XRefCode:
          type: string
          x-ballerina-name: laborMetricsCode9XRefCode
        LaborMetricsCode0XRefCode:
          type: string
          x-ballerina-name: laborMetricsCode0XRefCode
        PayDate:
          type: string
          format: date-time
          x-ballerina-name: payDate
        PunchSegmentStart:
          type: string
          format: date-time
          x-ballerina-name: punchSegmentStart
        DocketXRefCode:
          type: string
          x-ballerina-name: docketXRefCode
        EmployeeXRefCode:
          type: string
          x-ballerina-name: employeeXRefCode
        LocationXRefCode:
          type: string
          x-ballerina-name: locationXRefCode
        MinuteDuration:
          type: integer
          format: int32
          x-ballerina-name: minuteDuration
        NetHours:
          type: number
          format: double
          x-ballerina-name: netHours
        DepartmentXRefCode:
          type: string
          x-ballerina-name: departmentXRefCode
        PayCodeXRefCode:
          type: string
          x-ballerina-name: payCodeXRefCode
        PayAmount:
          type: number
          format: double
          x-ballerina-name: payAmount
        JobXRefCode:
          type: string
          x-ballerina-name: jobXRefCode
        Rate:
          type: number
          format: double
          x-ballerina-name: rate
        PayExportId:
          type: integer
          format: int64
          x-ballerina-name: payExportId
        PayCategoryXRefCode:
          type: string
          x-ballerina-name: payCategoryXRefCode
        LaborMetricsCode7XRefCode:
          type: string
          x-ballerina-name: laborMetricsCode7XRefCode
        ProjectXRefCode:
          type: string
          x-ballerina-name: projectXRefCode
        LaborMetricsCode6XRefCode:
          type: string
          x-ballerina-name: laborMetricsCode6XRefCode
        LaborMetricsCode5XRefCode:
          type: string
          x-ballerina-name: laborMetricsCode5XRefCode
    CalculationType:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    PayloadIEnumerableEmployeeBalanceTransactions:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeBalanceTransactions'
          x-ballerina-name: data
    PolicyAssociation:
      type: object
      properties:
        StartDate:
          type: string
          format: date-time
          x-ballerina-name: startDate
        Status:
          type: string
          x-ballerina-name: status
        ExemptedFromDataMinimization:
          type: boolean
          x-ballerina-name: exemptedFromDataMinimization
        Number:
          type: string
          x-ballerina-name: number
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        DataManagementCountryCode:
          type: string
          x-ballerina-name: dataManagementCountryCode
        PersonType:
          type: string
          x-ballerina-name: personType
        Person:
          type: string
          x-ballerina-name: person
    DeductionCode:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    PayloadIEnumerableEmployeeVeteransStatus:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeVeteransStatus'
          x-ballerina-name: data
    EmployeeLocationCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeLocation'
          x-ballerina-name: items
    PayloadIEnumerableEmployeeTimeAwayFromWorkForSubmit:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeTimeAwayFromWorkForSubmit'
          x-ballerina-name: data
    EmployeeSchedulePostAPIRequestDTO:
      required:
      - PositionXRefCode
      - TimeEnd
      - TimeStart
      type: object
      properties:
        Activities:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeScheduleActivityPostAPIRequestDTO'
          x-ballerina-name: activities
        PayAdjCodeXRefCode:
          type: string
          x-ballerina-name: payAdjCodeXRefCode
        Breaks:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeScheduleMBPostAPIRequestDTO'
          x-ballerina-name: breaks
        Comment:
          type: string
          x-ballerina-name: comment
        TimeEnd:
          type: string
          format: date-time
          x-ballerina-name: timeEnd
        Segments:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeScheduleSegmentAPIRequestDTO'
          x-ballerina-name: segments
        TimeStart:
          type: string
          format: date-time
          x-ballerina-name: timeStart
        PostShiftBid:
          type: boolean
          x-ballerina-name: postShiftBid
        PositionXRefCode:
          type: string
          x-ballerina-name: positionXRefCode
        OrgLocationTypeXRefCode:
          type: string
          x-ballerina-name: orgLocationTypeXRefCode
        ProjectXRefCode:
          type: string
          x-ballerina-name: projectXRefCode
        DocketXRefCode:
          type: string
          x-ballerina-name: docketXRefCode
        LaborMetrics:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeScheduleLaborMetricPostAPIRequestDTO'
          x-ballerina-name: laborMetrics
        EmployeeXRefCode:
          type: string
          x-ballerina-name: employeeXRefCode
    PayloadProjects:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          allOf:
          - $ref: '#/components/schemas/Projects'
          x-ballerina-name: data
    EmployeePayrollTaxName:
      type: object
      properties:
        Description:
          type: string
          x-ballerina-name: description
        TaxName:
          type: string
          x-ballerina-name: taxName
    QuestionConditionModel:
      type: object
      properties:
        id:
          type: string
        value:
          type: string
    LaborMetricsCodesForSubmit:
      type: object
      properties:
        EffectiveEnd:
          type: string
          format: date-time
          x-ballerina-name: effectiveEnd
        LedgerCode:
          type: string
          x-ballerina-name: ledgerCode
        IsDeleted:
          type: boolean
          x-ballerina-name: isDeleted
        LongName:
          type: string
          x-ballerina-name: longName
        LaborMetricsTypeXRefCode:
          type: string
          x-ballerina-name: laborMetricsTypeXRefCode
        ShortName:
          type: string
          x-ballerina-name: shortName
        EffectiveFrom:
          type: string
          format: date-time
          x-ballerina-name: effectiveFrom
        ClockTransferCode:
          type: string
          x-ballerina-name: clockTransferCode
        OrgUnitXRefCodes:
          type: array
          items:
            type: string
          x-ballerina-name: orgUnitXRefCodes
        LaborMetricsCodeXRefCode:
          type: string
          x-ballerina-name: laborMetricsCodeXRefCode
    PayloadIEnumerableEmployeeHighlyCompensatedEmployeeIndicator:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeHighlyCompensatedEmployeeIndicator'
          x-ballerina-name: data
    BackgroundScreeningProviderBillingCode:
      type: object
      properties:
        BillingCodeId:
          type: string
          x-ballerina-name: billingCodeId
        Description:
          type: string
          x-ballerina-name: description
        AssociatedPackages:
          type: array
          items:
            $ref: '#/components/schemas/BackgroundScreeningAssociatedPackage'
          x-ballerina-name: associatedPackages
        Name:
          type: string
          x-ballerina-name: name
    ShiftTradePolicy:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    EmployeeOnboardingPolicyCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeOnboardingPolicy'
          x-ballerina-name: items
    EmployeeWorkContractCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeWorkContract'
          x-ballerina-name: items
    AmfOnCUDActionModel:
      type: object
      properties:
        Type:
          type: string
          x-ballerina-name: type
        Action:
          type: integer
          format: int32
          enum:
          - 0
          - 1
          - 2
          x-ballerina-name: action
        Value:
          type: object
          x-ballerina-name: value
        Params:
          type: object
          x-ballerina-name: params
        Location:
          type: string
          x-ballerina-name: location
    UserEmployeeAuthorityTypeAssignmentCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/AuthorizationAssignment'
          x-ballerina-name: items
    DFEthnicity:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    PersonAddress:
      type: object
      properties:
        DisplayOnTaxForm:
          type: boolean
          x-ballerina-name: displayOnTaxForm
        DisplayOnEarningStatement:
          type: boolean
          x-ballerina-name: displayOnEarningStatement
        Address2:
          type: string
          x-ballerina-name: address2
        Address3:
          type: string
          x-ballerina-name: address3
        PostalCode:
          type: string
          x-ballerina-name: postalCode
        Address1:
          type: string
          x-ballerina-name: address1
        City:
          type: string
          x-ballerina-name: city
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
        County:
          type: string
          x-ballerina-name: county
        EffectiveEnd:
          type: string
          format: date-time
          x-ballerina-name: effectiveEnd
        IsPayrollMailing:
          type: boolean
          x-ballerina-name: isPayrollMailing
        Address6:
          type: string
          x-ballerina-name: address6
        Address4:
          type: string
          x-ballerina-name: address4
        State:
          allOf:
          - $ref: '#/components/schemas/State'
          x-ballerina-name: state
        Address5:
          type: string
          x-ballerina-name: address5
        EffectiveStart:
          type: string
          format: date-time
          x-ballerina-name: effectiveStart
        Country:
          allOf:
          - $ref: '#/components/schemas/Country'
          x-ballerina-name: country
        ContactInformationType:
          allOf:
          - $ref: '#/components/schemas/ContactInformationType'
          x-ballerina-name: contactInformationType
    ListValue:
      type: object
      properties:
        ListValueId:
          type: integer
          description: "The Id of the list item.  This value would be passed as the\
            \ parameter value.\r\nMultiple Id's can be passed as a parameter value\
            \ if comma separated"
          format: int32
          x-ballerina-name: listValueId
        Name:
          type: string
          description: The name that can be displayed in a list to the user
          x-ballerina-name: name
    EmployeeMaritalStatusCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeMaritalStatus'
          x-ballerina-name: items
    ManagerAssignShiftBidDTO:
      required:
      - EmployeeXRefCode
      - GroupXRefCode
      type: object
      properties:
        EmployeeXRefCode:
          type: string
          x-ballerina-name: employeeXRefCode
        GroupXRefCode:
          type: string
          x-ballerina-name: groupXRefCode
    CandidateRightToWorkResult:
      type: object
      properties:
        WorkRightStatus:
          type: string
          x-ballerina-name: workRightStatus
        Status:
          type: string
          x-ballerina-name: status
        DateIssued:
          type: string
          format: date-time
          x-ballerina-name: dateIssued
        PartnerIdentifier:
          type: integer
          format: int32
          x-ballerina-name: partnerIdentifier
        DateCompleted:
          type: string
          format: date-time
          x-ballerina-name: dateCompleted
        Documents:
          type: array
          items:
            $ref: '#/components/schemas/CandidateRTWDocument'
          x-ballerina-name: documents
        CandidateRightToWorkResultId:
          type: integer
          format: int32
          x-ballerina-name: candidateRightToWorkResultId
        RejectionOrCancellationReasons:
          type: array
          items:
            $ref: '#/components/schemas/CandidateRTWRejectionReason'
          x-ballerina-name: rejectionOrCancellationReasons
        WorkRightEffectiveEnd:
          type: string
          format: date-time
          x-ballerina-name: workRightEffectiveEnd
        WorkRightEffectiveStart:
          type: string
          format: date-time
          x-ballerina-name: workRightEffectiveStart
    EmergencyContactCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeEmergencyContact'
          x-ballerina-name: items
    PayloadIEnumerableEmployeeUKIrregularPaymentDetails:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeUKIrregularPaymentDetails'
          x-ballerina-name: data
    PayloadIEnumerableEmployeeTrainingProgram:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeTrainingProgram'
          x-ballerina-name: data
    EmployeePayGradeRateCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeePayGradeRate'
          x-ballerina-name: items
    AnalyticsReportColumnMetadata:
      type: object
      properties:
        Description:
          type: string
          description: "This is a name as defined by a user when developing this report.\
            \  This name\r\nwould be a human facing name that would be used on a printed\
            \ report.\r\nThis field is used as the key to the values dictionary"
          x-ballerina-name: description
        DataType:
          type: string
          description: This is a string representation of the data type
          x-ballerina-name: dataType
        Name:
          type: string
          description: "CodeName is a unique name that can be used with code\r\nto\
            \ refer to this specific column.  Its value should be consistent"
          x-ballerina-name: name
      description: This class encapsulates the report data generated during the execution
        of the report
    BenefitsDFLinkExportBeneficiaryElectionDetail:
      type: object
      properties:
        CoverageEndDate:
          type: string
          format: date-time
          x-ballerina-name: coverageEndDate
        EffectiveEndDate:
          type: string
          format: date-time
          x-ballerina-name: effectiveEndDate
        PlanCode:
          type: string
          x-ballerina-name: planCode
        PolicyNumber:
          type: string
          x-ballerina-name: policyNumber
        BeneficiaryPercentage:
          type: number
          format: double
          x-ballerina-name: beneficiaryPercentage
        ContingentBeneficiaryIndicator:
          type: boolean
          x-ballerina-name: contingentBeneficiaryIndicator
        OptionCode:
          type: string
          x-ballerina-name: optionCode
        PlanTypeCode:
          type: string
          x-ballerina-name: planTypeCode
        PlanXrefCode:
          type: string
          x-ballerina-name: planXrefCode
        RecordType:
          type: string
          x-ballerina-name: recordType
        PlanSubTypeCode:
          type: string
          x-ballerina-name: planSubTypeCode
        CoverageStartDate:
          type: string
          format: date-time
          x-ballerina-name: coverageStartDate
        UniqueBeneficiaryId:
          type: integer
          format: int32
          x-ballerina-name: uniqueBeneficiaryId
        EffectiveStartDate:
          type: string
          format: date-time
          x-ballerina-name: effectiveStartDate
        PlanStartDate:
          type: string
          format: date-time
          x-ballerina-name: planStartDate
    EmployeeVOI:
      type: object
      properties:
        NationalIdNumber:
          type: string
          x-ballerina-name: nationalIdNumber
        FirstName:
          type: string
          x-ballerina-name: firstName
        EmployeeXRefCode:
          type: string
          x-ballerina-name: employeeXRefCode
        EmployeeResidentialAddress:
          allOf:
          - $ref: '#/components/schemas/EmployeeAddress'
          x-ballerina-name: employeeResidentialAddress
        LegalEntities:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeLegalEntity'
          x-ballerina-name: legalEntities
        LastName:
          type: string
          x-ballerina-name: lastName
        Earnings:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeEarningSummary'
          x-ballerina-name: earnings
        MiddleName:
          type: string
          x-ballerina-name: middleName
        Namespace:
          type: string
          x-ballerina-name: namespace
        BirthDate:
          type: string
          format: date-time
          x-ballerina-name: birthDate
    ReportParameterMetadata:
      type: object
      properties:
        Operator:
          type: string
          description: "Operator type of the parameter, such as =, &lt;, &gt;=, etc...\r\
            \nNot all parameters have operator type.\r\nFor example, SQL Parameters\
            \ don't have operators"
          x-ballerina-name: operator
        DefaultValue:
          type: string
          description: "Default value that will be used if no other value is provided\
            \ for the parameter.\r\nNot all parameters have default value.\r\nEnd-user\
            \ needs to supply a value in here if the parameter doesn't have value.\r\
            \nReference values should contain Ids and be comma separated. E.g \"1,2,3\""
          x-ballerina-name: defaultValue
        ReportParameterMetadataId:
          type: string
          description: Unique Id of parameter
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
          x-ballerina-name: reportParameterMetadataId
        IsRequired:
          type: boolean
          description: True if a value needs to be supplied
          x-ballerina-name: isRequired
        DisplayName:
          type: string
          description: Human readable name of the parameter
          x-ballerina-name: displayName
        AvailableValues:
          type: array
          description: List of available values a parameter can have
          items:
            $ref: '#/components/schemas/ListValue'
          x-ballerina-name: availableValues
        DataType:
          type: string
          description: Data type of the parameter
          x-ballerina-name: dataType
        Name:
          type: string
          description: Name of the parameter
          x-ballerina-name: name
      description: "Report meta data that defines report parameters.\r\nParameter\
        \ values are supplied by the end-user for execution.\r\nAll parameters must\
        \ be supplied during execution.\r\nNot all Parameters have default value"
    PRPayeeEarning:
      type: object
      properties:
        PayeeXRefCode:
          type: string
          x-ballerina-name: payeeXRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        PaymentMethodCode:
          type: string
          x-ballerina-name: paymentMethodCode
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    BackgroundJobLog:
      type: object
      properties:
        Status:
          type: string
          x-ballerina-name: status
        JobInformation:
          type: string
          x-ballerina-name: jobInformation
        CodeName:
          type: string
          x-ballerina-name: codeName
        Parameters:
          type: array
          items:
            $ref: '#/components/schemas/BackgroundJobLogParameters'
          x-ballerina-name: parameters
        BackgroundJobLogGuid:
          type: string
          x-ballerina-name: backgroundJobLogGuid
        ExecEndTimeUtc:
          type: string
          format: date-time
          x-ballerina-name: execEndTimeUtc
        FileList:
          type: string
          x-ballerina-name: fileList
        WasScheduled:
          type: boolean
          x-ballerina-name: wasScheduled
        SubmittedBy:
          type: string
          x-ballerina-name: submittedBy
        ExecStartTimeUtc:
          type: string
          format: date-time
          x-ballerina-name: execStartTimeUtc
        DebugInformation:
          type: string
          x-ballerina-name: debugInformation
        HasItemLevelErrors:
          type: boolean
          x-ballerina-name: hasItemLevelErrors
        Name:
          type: string
          x-ballerina-name: name
        ErrorInformation:
          type: string
          x-ballerina-name: errorInformation
        BackgroundJobLogId:
          type: integer
          format: int32
          x-ballerina-name: backgroundJobLogId
        LastModifiedTimestampUtc:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestampUtc
        QueueTimeUtc:
          type: string
          format: date-time
          x-ballerina-name: queueTimeUtc
    EmployeePayrollElection:
      type: object
      properties:
        Elections:
          type: array
          items:
            $ref: '#/components/schemas/PayrollElection'
          x-ballerina-name: elections
        RowNumber:
          type: integer
          format: int64
          x-ballerina-name: rowNumber
        PreviousPayPeriodStart:
          type: string
          format: date-time
          x-ballerina-name: previousPayPeriodStart
        EmployeeXRefCode:
          type: string
          x-ballerina-name: employeeXRefCode
        CurrentPayPeriodStart:
          type: string
          format: date-time
          x-ballerina-name: currentPayPeriodStart
        EmployeeNumber:
          type: string
          x-ballerina-name: employeeNumber
        CurrentPayPeriodEnd:
          type: string
          format: date-time
          x-ballerina-name: currentPayPeriodEnd
        EmployeeName:
          type: string
          x-ballerina-name: employeeName
        CurrentPayRunStatus:
          type: string
          x-ballerina-name: currentPayRunStatus
        PreviousPayPeriodEnd:
          type: string
          format: date-time
          x-ballerina-name: previousPayPeriodEnd
    PayloadIEnumerableEmployeePayAdjustCodeGroup:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeePayAdjustCodeGroup'
          x-ballerina-name: data
    PayloadIEnumerableDEUEmployeeAccidentInsurance:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/DEUEmployeeAccidentInsurance'
          x-ballerina-name: data
    EmployeeDisability:
      type: object
      properties:
        EffectiveEnd:
          type: string
          format: date-time
          x-ballerina-name: effectiveEnd
        ExpiryDate:
          type: string
          format: date-time
          x-ballerina-name: expiryDate
        DisabilityEvidenceIssuingAgencyLocation:
          type: string
          x-ballerina-name: disabilityEvidenceIssuingAgencyLocation
        DisabilityEvidenceIssuingAgency:
          allOf:
          - $ref: '#/components/schemas/DisabilityEvidenceIssuingAgency'
          x-ballerina-name: disabilityEvidenceIssuingAgency
        EvidenceNumber:
          type: string
          x-ballerina-name: evidenceNumber
        EffectiveStart:
          type: string
          format: date-time
          x-ballerina-name: effectiveStart
        DisabilityWorkingTime:
          allOf:
          - $ref: '#/components/schemas/DisabilityWorkingTime'
          x-ballerina-name: disabilityWorkingTime
        ValidFrom:
          type: string
          format: date-time
          x-ballerina-name: validFrom
        CountryCode:
          type: string
          x-ballerina-name: countryCode
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
        DisabilityEvidenceType:
          allOf:
          - $ref: '#/components/schemas/DisabilityEvidenceType'
          x-ballerina-name: disabilityEvidenceType
        DisabilityGroup:
          allOf:
          - $ref: '#/components/schemas/DisabilityGroup'
          x-ballerina-name: disabilityGroup
    EmployeePayAdjustCodeGroup:
      type: object
      properties:
        PayAdjCodeGroup:
          allOf:
          - $ref: '#/components/schemas/PayAdjCodeGroup'
          x-ballerina-name: payAdjCodeGroup
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    PayloadIEnumerableQuestionModel:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/QuestionModel'
          x-ballerina-name: data
    PayClassFrequency:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    PayGroupBrief:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    EarningLimit:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        LimitAccessType:
          allOf:
          - $ref: '#/components/schemas/LimitAccessType'
          x-ballerina-name: limitAccessType
        ShortName:
          type: string
          x-ballerina-name: shortName
        AccumulationType:
          allOf:
          - $ref: '#/components/schemas/AccumulationType'
          x-ballerina-name: accumulationType
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
        LimitType:
          allOf:
          - $ref: '#/components/schemas/LimitType'
          x-ballerina-name: limitType
    EmployeeOnboardingPolicy:
      type: object
      properties:
        EffectiveEnd:
          type: string
          format: date-time
          x-ballerina-name: effectiveEnd
        IsInternalHire:
          type: boolean
          x-ballerina-name: isInternalHire
        EffectiveStart:
          type: string
          format: date-time
          x-ballerina-name: effectiveStart
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
        OnboardingPolicy:
          allOf:
          - $ref: '#/components/schemas/OnboardingPolicy'
          x-ballerina-name: onboardingPolicy
    CandidateDetails:
      type: object
      properties:
        AdditionalInfo:
          type: string
          x-ballerina-name: additionalInfo
        Patents:
          allOf:
          - $ref: '#/components/schemas/Patents'
          x-ballerina-name: patents
        Publications:
          allOf:
          - $ref: '#/components/schemas/Publications'
          x-ballerina-name: publications
        Certifications:
          allOf:
          - $ref: '#/components/schemas/Certifications'
          x-ballerina-name: certifications
        FirstName:
          type: string
          x-ballerina-name: firstName
        Associations:
          allOf:
          - $ref: '#/components/schemas/Associations'
          x-ballerina-name: associations
        Awards:
          allOf:
          - $ref: '#/components/schemas/Awards'
          x-ballerina-name: awards
        Skills:
          type: string
          x-ballerina-name: skills
        HomePhoneNumber:
          type: string
          x-ballerina-name: homePhoneNumber
        Headline:
          type: string
          x-ballerina-name: headline
        Positions:
          allOf:
          - $ref: '#/components/schemas/Positions'
          x-ballerina-name: positions
        Educations:
          allOf:
          - $ref: '#/components/schemas/Educations'
          x-ballerina-name: educations
        Summary:
          type: string
          x-ballerina-name: summary
        PhoneNumber:
          type: string
          x-ballerina-name: phoneNumber
        Links:
          allOf:
          - $ref: '#/components/schemas/Links'
          x-ballerina-name: links
        LastName:
          type: string
          x-ballerina-name: lastName
        MilitaryServices:
          allOf:
          - $ref: '#/components/schemas/MilitaryServices'
          x-ballerina-name: militaryServices
        PublicProfileUrl:
          type: string
          x-ballerina-name: publicProfileUrl
        Location:
          allOf:
          - $ref: '#/components/schemas/CandidateLocation'
          x-ballerina-name: location
    PayGroup:
      type: object
      properties:
        PayFrequency:
          allOf:
          - $ref: '#/components/schemas/PayFrequency'
          x-ballerina-name: payFrequency
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    CandidateLocation:
      type: object
      properties:
        StateName:
          type: string
          x-ballerina-name: stateName
        Address2:
          type: string
          x-ballerina-name: address2
        StateCode:
          type: string
          x-ballerina-name: stateCode
        PostalCode:
          type: string
          x-ballerina-name: postalCode
        Address3:
          type: string
          x-ballerina-name: address3
        Country:
          type: string
          x-ballerina-name: country
        City:
          type: string
          x-ballerina-name: city
        Address1:
          type: string
          x-ballerina-name: address1
        County:
          type: string
          x-ballerina-name: county
    Skill:
      type: object
      properties:
        SkillLevel:
          type: array
          items:
            $ref: '#/components/schemas/SkillLevel'
          x-ballerina-name: skillLevel
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        SkillType:
          allOf:
          - $ref: '#/components/schemas/SkillType'
          x-ballerina-name: skillType
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    LegacyLaborMetricForSubmit:
      type: object
      properties:
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LegacyLaborMetricType:
          type: string
          x-ballerina-name: legacyLaborMetricType
        LegacyLaborMetricXRefCode:
          type: string
          x-ballerina-name: legacyLaborMetricXRefCode
    EmployeeScheduleSegmentLaborMetric:
      type: object
      properties:
        CodeXRefCode:
          type: string
          x-ballerina-name: codeXRefCode
        TypeXRefCode:
          type: string
          x-ballerina-name: typeXRefCode
    EmergencyContactPersonAddress:
      type: object
      properties:
        DisplayOnTaxForm:
          type: boolean
          x-ballerina-name: displayOnTaxForm
        DisplayOnEarningStatement:
          type: boolean
          x-ballerina-name: displayOnEarningStatement
        Address2:
          type: string
          x-ballerina-name: address2
        Address3:
          type: string
          x-ballerina-name: address3
        PostalCode:
          type: string
          x-ballerina-name: postalCode
        Address1:
          type: string
          x-ballerina-name: address1
        City:
          type: string
          x-ballerina-name: city
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
        County:
          type: string
          x-ballerina-name: county
        EffectiveEnd:
          type: string
          format: date-time
          x-ballerina-name: effectiveEnd
        IsPayrollMailing:
          type: boolean
          x-ballerina-name: isPayrollMailing
        Address6:
          type: string
          x-ballerina-name: address6
        Address4:
          type: string
          x-ballerina-name: address4
        State:
          allOf:
          - $ref: '#/components/schemas/State'
          x-ballerina-name: state
        Address5:
          type: string
          x-ballerina-name: address5
        EffectiveStart:
          type: string
          format: date-time
          x-ballerina-name: effectiveStart
        Country:
          allOf:
          - $ref: '#/components/schemas/Country'
          x-ballerina-name: country
        ContactInformationType:
          allOf:
          - $ref: '#/components/schemas/ContactInformationType'
          x-ballerina-name: contactInformationType
    EmployeeCompensationCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeCompensation'
          x-ballerina-name: items
    PayloadIEnumerableEmployeeBalancePeriod:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeBalancePeriod'
          x-ballerina-name: data
    PayloadIEnumerableObject:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            type: object
          x-ballerina-name: data
    EmployeeVOE:
      type: object
      properties:
        NationalIdNumber:
          type: string
          x-ballerina-name: nationalIdNumber
        FirstName:
          type: string
          x-ballerina-name: firstName
        EmployeeXRefCode:
          type: string
          x-ballerina-name: employeeXRefCode
        EmployeeResidentialAddress:
          allOf:
          - $ref: '#/components/schemas/EmployeeAddress'
          x-ballerina-name: employeeResidentialAddress
        LegalEntities:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeLegalEntity'
          x-ballerina-name: legalEntities
        LastName:
          type: string
          x-ballerina-name: lastName
        MiddleName:
          type: string
          x-ballerina-name: middleName
        Namespace:
          type: string
          x-ballerina-name: namespace
        BirthDate:
          type: string
          format: date-time
          x-ballerina-name: birthDate
    PersonManagementExemption:
      type: object
      properties:
        AppliedByName:
          type: string
          x-ballerina-name: appliedByName
        Number:
          type: string
          x-ballerina-name: number
        Country:
          type: string
          x-ballerina-name: country
        EmploymentStatus:
          type: string
          x-ballerina-name: employmentStatus
        PersonType:
          type: string
          x-ballerina-name: personType
        AppliedOn:
          type: string
          format: date-time
          x-ballerina-name: appliedOn
        Name:
          type: string
          x-ballerina-name: name
    PayloadIEnumerableEmployeeTimeAwayFromWork:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeTimeAwayFromWork'
          x-ballerina-name: data
    Location:
      type: object
      properties:
        Timezone:
          allOf:
          - $ref: '#/components/schemas/TimeZone'
          x-ballerina-name: timezone
        LegalEntity:
          allOf:
          - $ref: '#/components/schemas/LegalEntity'
          x-ballerina-name: legalEntity
        ContactCellPhone:
          type: string
          x-ballerina-name: contactCellPhone
        Address:
          type: string
          x-ballerina-name: address
        OrgUnitLegalEntities:
          allOf:
          - $ref: '#/components/schemas/OrgUnitLegalEntityCollection'
          x-ballerina-name: orgUnitLegalEntities
        OrgLevel:
          allOf:
          - $ref: '#/components/schemas/OrgLevel'
          x-ballerina-name: orgLevel
        PostalCode:
          type: string
          x-ballerina-name: postalCode
        ShortName:
          type: string
          x-ballerina-name: shortName
        OrgUnitParents:
          allOf:
          - $ref: '#/components/schemas/OrgUnitParentCollection'
          x-ballerina-name: orgUnitParents
        GeoCity:
          allOf:
          - $ref: '#/components/schemas/City'
          x-ballerina-name: geoCity
        County:
          type: string
          x-ballerina-name: county
        Department:
          allOf:
          - $ref: '#/components/schemas/Department'
          x-ballerina-name: department
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        StartDayOfWeek:
          type: integer
          format: int32
          x-ballerina-name: startDayOfWeek
        CountryCode:
          type: string
          x-ballerina-name: countryCode
        ComparableLocation:
          allOf:
          - $ref: '#/components/schemas/HRConfigurationEntity'
          x-ballerina-name: comparableLocation
        PhysicalLocation:
          type: boolean
          x-ballerina-name: physicalLocation
        OpeningDate:
          type: string
          format: date-time
          x-ballerina-name: openingDate
        IsMobileOrg:
          type: boolean
          x-ballerina-name: isMobileOrg
        ChildOrgUnits:
          allOf:
          - $ref: '#/components/schemas/ChildLocationCollection'
          x-ballerina-name: childOrgUnits
        Zone:
          allOf:
          - $ref: '#/components/schemas/Zone'
          x-ballerina-name: zone
        IsOrgManaged:
          type: boolean
          x-ballerina-name: isOrgManaged
        PublicName:
          type: string
          x-ballerina-name: publicName
        StateCode:
          type: string
          x-ballerina-name: stateCode
        Address2:
          type: string
          x-ballerina-name: address2
        ClockTransferCode:
          type: string
          x-ballerina-name: clockTransferCode
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
        LedgerCode:
          type: string
          x-ballerina-name: ledgerCode
        LongName:
          type: string
          x-ballerina-name: longName
        ContactBusinessPhone:
          type: string
          x-ballerina-name: contactBusinessPhone
        ContactEmail:
          type: string
          x-ballerina-name: contactEmail
        OrgUnitLocationTypes:
          allOf:
          - $ref: '#/components/schemas/OrgUnitLocationTypeCollection'
          x-ballerina-name: orgUnitLocationTypes
        BusinessPhone:
          type: string
          x-ballerina-name: businessPhone
        ClosingDate:
          type: string
          format: date-time
          x-ballerina-name: closingDate
        ContactName:
          type: string
          x-ballerina-name: contactName
    EmployeeCANTaxStatusCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeCANTaxStatus'
          x-ballerina-name: items
    WorkLocationAddress:
      type: object
      properties:
        AddressLine2:
          type: string
          x-ballerina-name: addressLine2
        AddressLine1:
          type: string
          x-ballerina-name: addressLine1
        State:
          type: string
          x-ballerina-name: state
        Country:
          type: string
          x-ballerina-name: country
        PostalCode:
          type: string
          x-ballerina-name: postalCode
        City:
          type: string
          x-ballerina-name: city
    PaginatedPayloadString:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Paging:
          allOf:
          - $ref: '#/components/schemas/Paging'
          x-ballerina-name: paging
        Data:
          type: string
          x-ballerina-name: data
    EmployeeIRLTaxRPN:
      type: object
      properties:
        EmploymentCessationDate:
          type: string
          format: date-time
          x-ballerina-name: employmentCessationDate
        PreviousEmployeePPSN:
          type: string
          x-ballerina-name: previousEmployeePPSN
        LegalEntity:
          allOf:
          - $ref: '#/components/schemas/LegalEntity'
          x-ballerina-name: legalEntity
        PayForUSCToDate:
          type: number
          format: double
          x-ballerina-name: payForUSCToDate
        PrsiClass:
          type: string
          x-ballerina-name: prsiClass
        FamilyName:
          type: string
          x-ballerina-name: familyName
        RpnIssueDate:
          type: string
          format: date-time
          x-ballerina-name: rpnIssueDate
        EmployerReference:
          type: string
          x-ballerina-name: employerReference
        PRSIExempt:
          type: boolean
          x-ballerina-name: pRSIExempt
        UscRatePercent3:
          type: number
          format: double
          x-ballerina-name: uscRatePercent3
        LptToDeduct:
          type: number
          format: double
          x-ballerina-name: lptToDeduct
        UscRatePercent2:
          type: number
          format: double
          x-ballerina-name: uscRatePercent2
        UscRatePercent1:
          type: number
          format: double
          x-ballerina-name: uscRatePercent1
        EmployeePpsn:
          type: string
          x-ballerina-name: employeePpsn
        UscRatePercent4:
          type: number
          format: double
          x-ballerina-name: uscRatePercent4
        IncomeTaxCalculationBasis:
          type: string
          x-ballerina-name: incomeTaxCalculationBasis
        TaxRatePercent1:
          type: number
          format: double
          x-ballerina-name: taxRatePercent1
        EffectiveEnd:
          type: string
          format: date-time
          x-ballerina-name: effectiveEnd
        EffectiveStart:
          type: string
          format: date-time
          x-ballerina-name: effectiveStart
        PayForIncomeTaxToDate:
          type: number
          format: double
          x-ballerina-name: payForIncomeTaxToDate
        EmploymentID:
          type: string
          x-ballerina-name: employmentID
        UscDeductedToDate:
          type: number
          format: double
          x-ballerina-name: uscDeductedToDate
        TaxRatePercent2:
          type: number
          format: double
          x-ballerina-name: taxRatePercent2
        ExclusionOrder:
          type: boolean
          x-ballerina-name: exclusionOrder
        RpnNumber:
          type: string
          x-ballerina-name: rpnNumber
        YearlyRateCutOff1:
          type: number
          format: double
          x-ballerina-name: yearlyRateCutOff1
        FirstName:
          type: string
          x-ballerina-name: firstName
        IncomeTaxDeductedToDate:
          type: number
          format: double
          x-ballerina-name: incomeTaxDeductedToDate
        YearlyUSCRateCutOff2:
          type: number
          format: double
          x-ballerina-name: yearlyUSCRateCutOff2
        YearlyTaxCredits:
          type: number
          format: double
          x-ballerina-name: yearlyTaxCredits
        YearlyUSCRateCutOff3:
          type: number
          format: double
          x-ballerina-name: yearlyUSCRateCutOff3
        YearlyUSCRateCutOff1:
          type: number
          format: double
          x-ballerina-name: yearlyUSCRateCutOff1
        UscStatus:
          type: string
          x-ballerina-name: uscStatus
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
        LegalEntityXrefCode:
          type: string
          x-ballerina-name: legalEntityXrefCode
        TaxYear:
          type: integer
          format: int32
          x-ballerina-name: taxYear
    EmployeeBalanceTransaction:
      type: object
      properties:
        Comment:
          type: string
          x-ballerina-name: comment
        ExpiryDate:
          type: string
          format: date-time
          x-ballerina-name: expiryDate
        Delta:
          type: number
          format: double
          x-ballerina-name: delta
        TransactionSource:
          type: integer
          format: int32
          x-ballerina-name: transactionSource
        TAFWXRefCode:
          type: string
          x-ballerina-name: tAFWXRefCode
        GrantDelta:
          type: number
          format: double
          x-ballerina-name: grantDelta
        ApprovalStatus:
          type: string
          x-ballerina-name: approvalStatus
        TransactionDate:
          type: string
          format: date-time
          x-ballerina-name: transactionDate
    PayloadEmployee:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          allOf:
          - $ref: '#/components/schemas/Employee'
          x-ballerina-name: data
    PayrollCountry:
      type: object
      properties:
        ConnectedPayCountry:
          type: boolean
          x-ballerina-name: connectedPayCountry
        CountryName:
          type: string
          x-ballerina-name: countryName
        PayGroup:
          type: boolean
          x-ballerina-name: payGroup
        HCMPayrollCountry:
          type: boolean
          x-ballerina-name: hCMPayrollCountry
        IPSEnabled:
          type: boolean
          x-ballerina-name: iPSEnabled
        DefaultTimeZoneXRefCode:
          type: string
          x-ballerina-name: defaultTimeZoneXRefCode
        DefaultTimeZoneName:
          type: string
          x-ballerina-name: defaultTimeZoneName
        CountryCode:
          type: string
          x-ballerina-name: countryCode
    PayloadIEnumerableLaborValidationRule:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/LaborValidationRule'
          x-ballerina-name: data
    PayloadIEnumerableEmployeePayrollTax:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeePayrollTax'
          x-ballerina-name: data
    PaginatedPayloadPersonManagementHistory:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Paging:
          allOf:
          - $ref: '#/components/schemas/Paging'
          x-ballerina-name: paging
        Data:
          allOf:
          - $ref: '#/components/schemas/PersonManagementHistory'
          x-ballerina-name: data
    EmploymentIndicator:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    EmployeeSchedulePostAPIResponse:
      type: object
      properties:
        EmployeeScheduleXRefCode:
          type: string
          readOnly: true
          x-ballerina-name: employeeScheduleXRefCode
        EmployeeXRefCode:
          type: string
          x-ballerina-name: employeeXRefCode
        TimeEnd:
          type: string
          format: date-time
          x-ballerina-name: timeEnd
        TimeStart:
          type: string
          format: date-time
          x-ballerina-name: timeStart
    PayloadIEnumerableEmployeeUKPostgraduateLoan:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeUKPostgraduateLoan'
          x-ballerina-name: data
    BenefitsDFLinkExportCareProvider:
      type: object
      properties:
        ProviderId:
          type: string
          x-ballerina-name: providerId
        EntityIDCode:
          type: string
          x-ballerina-name: entityIDCode
        RecordType:
          type: string
          x-ballerina-name: recordType
        RelationshipCode:
          type: string
          x-ballerina-name: relationshipCode
        ProviderIDQualifier:
          type: string
          x-ballerina-name: providerIDQualifier
    JobStepPolicy:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    PRTaxResidentCode:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    LaborValidationRule:
      type: object
      properties:
        PolicyXRefCode:
          type: string
          x-ballerina-name: policyXRefCode
        Description:
          type: string
          x-ballerina-name: description
        CodeName:
          type: string
          x-ballerina-name: codeName
        Sequence:
          type: integer
          format: int32
          x-ballerina-name: sequence
        ValidationErrorMessage:
          type: string
          x-ballerina-name: validationErrorMessage
        Name:
          type: string
          x-ballerina-name: name
        SeverityLevel:
          type: integer
          format: int32
          example: 4
          default: 4
          x-ballerina-name: severityLevel
        Active:
          type: boolean
          x-ballerina-name: active
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        EffectiveFrom:
          type: string
          format: date-time
          x-ballerina-name: effectiveFrom
        Models:
          type: array
          items:
            $ref: '#/components/schemas/LaborValidationModel'
          x-ballerina-name: models
        Children:
          type: array
          items:
            $ref: '#/components/schemas/LaborValidationQualifier'
          x-ballerina-name: children
        Qualifiers:
          type: array
          items:
            $ref: '#/components/schemas/LaborValidationQualifier'
          x-ballerina-name: qualifiers
        PolicyId:
          type: integer
          format: int32
          x-ballerina-name: policyId
        EffectiveTo:
          type: string
          format: date-time
          x-ballerina-name: effectiveTo
    PayloadIEnumerableEmployeeConfidentialIdentification:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeConfidentialIdentification'
          x-ballerina-name: data
    EmploymentAgreementType:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    EmployeeEarningParameterCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeEarningParameter'
          x-ballerina-name: items
    UserPayAdjustCodeGroup:
      type: object
      properties:
        PayAdjCodeGroup:
          allOf:
          - $ref: '#/components/schemas/PayAdjCodeGroup'
          x-ballerina-name: payAdjCodeGroup
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    ContactInformationType:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ContactInformationTypeGroup:
          allOf:
          - $ref: '#/components/schemas/ContactInformationTypeGroup'
          x-ballerina-name: contactInformationTypeGroup
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    LaborCostResult:
      type: object
      properties:
        Intervals:
          type: array
          items:
            $ref: '#/components/schemas/LaborCostTimeInterval'
          x-ballerina-name: intervals
        CalendarDate:
          type: string
          format: date-time
          x-ballerina-name: calendarDate
        Totals:
          allOf:
          - $ref: '#/components/schemas/LaborCostTotalResult'
          x-ballerina-name: totals
        Currency:
          type: string
          x-ballerina-name: currency
        LocationXRefCode:
          type: string
          x-ballerina-name: locationXRefCode
    DeductionLimit:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        LimitAccessType:
          allOf:
          - $ref: '#/components/schemas/LimitAccessType'
          x-ballerina-name: limitAccessType
        ShortName:
          type: string
          x-ballerina-name: shortName
        AccumulationType:
          allOf:
          - $ref: '#/components/schemas/AccumulationType'
          x-ballerina-name: accumulationType
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
        LimitType:
          allOf:
          - $ref: '#/components/schemas/LimitType'
          x-ballerina-name: limitType
    ApplicantResume:
      type: object
      properties:
        HrXml:
          type: string
          x-ballerina-name: hrXml
        Html:
          type: string
          x-ballerina-name: html
        Text:
          type: string
          x-ballerina-name: text
        Json:
          allOf:
          - $ref: '#/components/schemas/CandidateDetails'
          x-ballerina-name: json
        File:
          allOf:
          - $ref: '#/components/schemas/FileDetails'
          x-ballerina-name: file
    EmployeeEarningSummary:
      type: object
      properties:
        EarningGroupingsSumUp:
          type: boolean
          x-ballerina-name: earningGroupingsSumUp
        RateOfPay:
          type: number
          format: double
          x-ballerina-name: rateOfPay
        NationalIdNumber:
          type: string
          x-ballerina-name: nationalIdNumber
        FEIN:
          type: string
          x-ballerina-name: fEIN
        GrossOtherEarningYTD:
          type: number
          format: double
          x-ballerina-name: grossOtherEarningYTD
        FirstName:
          type: string
          x-ballerina-name: firstName
        TerminationDate:
          type: string
          format: date-time
          x-ballerina-name: terminationDate
        LegalEntityAddress:
          allOf:
          - $ref: '#/components/schemas/LegalEntityAddress'
          x-ballerina-name: legalEntityAddress
        EmploymentStatus:
          type: string
          x-ballerina-name: employmentStatus
        PayType:
          type: string
          x-ballerina-name: payType
        GrossEarningYTD:
          type: number
          format: double
          x-ballerina-name: grossEarningYTD
        EmploymentType:
          type: string
          x-ballerina-name: employmentType
        GrossOverTimeEarningYTD:
          type: number
          format: double
          x-ballerina-name: grossOverTimeEarningYTD
        GrossNormalEarningYTD:
          type: number
          format: double
          x-ballerina-name: grossNormalEarningYTD
        PayFrequency:
          type: string
          x-ballerina-name: payFrequency
        Year:
          type: integer
          format: int32
          x-ballerina-name: year
        LegalEntityName:
          type: string
          x-ballerina-name: legalEntityName
        HireDate:
          type: string
          format: date-time
          x-ballerina-name: hireDate
        EmployeeResidentialAddress:
          allOf:
          - $ref: '#/components/schemas/EmployeeAddress'
          x-ballerina-name: employeeResidentialAddress
        JobAssignment:
          type: string
          x-ballerina-name: jobAssignment
        LastName:
          type: string
          x-ballerina-name: lastName
        GrossCommissionEarningYTD:
          type: number
          format: double
          x-ballerina-name: grossCommissionEarningYTD
        GrossBonusEarningYTD:
          type: number
          format: double
          x-ballerina-name: grossBonusEarningYTD
        LastPayrollPayDate:
          type: string
          format: date-time
          x-ballerina-name: lastPayrollPayDate
    LaborMetricsType:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        ClockTransferCode:
          type: string
          x-ballerina-name: clockTransferCode
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    BidderInfo:
      type: object
      properties:
        EmployeeXRefCode:
          type: string
          x-ballerina-name: employeeXRefCode
        CurrentWeeklyHours:
          type: number
          format: double
          x-ballerina-name: currentWeeklyHours
        BaseRate:
          type: number
          format: double
          x-ballerina-name: baseRate
        SeniorityDate:
          type: string
          format: date-time
          x-ballerina-name: seniorityDate
    EmployeeHealthWellness:
      type: object
      properties:
        EffectiveEnd:
          type: string
          format: date-time
          x-ballerina-name: effectiveEnd
        TobaccoUser:
          type: string
          x-ballerina-name: tobaccoUser
        EffectiveStart:
          type: string
          format: date-time
          x-ballerina-name: effectiveStart
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
        DateLastSmoked:
          type: string
          format: date-time
          x-ballerina-name: dateLastSmoked
    ParameterAccessType:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    PayloadIEnumerableEarningDefinition:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EarningDefinition'
          x-ballerina-name: data
    OrgUnitLocationType:
      type: object
      properties:
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
        LocationType:
          allOf:
          - $ref: '#/components/schemas/OrgLocationType'
          x-ballerina-name: locationType
    LaborMetricTypeForSubmit:
      type: object
      properties:
        IsDeleted:
          type: boolean
          x-ballerina-name: isDeleted
        LaborMetricTypeXRefCode:
          type: string
          x-ballerina-name: laborMetricTypeXRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        ClockTransferCode:
          type: string
          x-ballerina-name: clockTransferCode
    EarningCode:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
        EarningType:
          allOf:
          - $ref: '#/components/schemas/EarningType'
          x-ballerina-name: earningType
    LegalEntityDEUShortTimeWork:
      type: object
      properties:
        LegalEntityDEUShortTimeWorkID:
          type: integer
          format: int32
          x-ballerina-name: legalEntityDEUShortTimeWorkID
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
        StoppageNumber:
          type: string
          x-ballerina-name: stoppageNumber
    CandidateScreeningDetailedResult:
      type: object
      properties:
        Status:
          type: string
          x-ballerina-name: status
        ReportIdentifier:
          type: string
          x-ballerina-name: reportIdentifier
        ScreeningType:
          type: string
          x-ballerina-name: screeningType
        CompletionDate:
          type: string
          format: date-time
          x-ballerina-name: completionDate
        Result:
          type: string
          x-ballerina-name: result
    EmployeePayrollTax:
      type: object
      properties:
        Addresses:
          type: array
          items:
            type: string
          x-ballerina-name: addresses
        TaxType:
          type: string
          x-ballerina-name: taxType
        LegalEntity:
          type: string
          x-ballerina-name: legalEntity
        ManuallyAddedTax:
          type: boolean
          x-ballerina-name: manuallyAddedTax
        LegalEntityXrefCode:
          type: string
          x-ballerina-name: legalEntityXrefCode
        EmployeeTax:
          type: boolean
          x-ballerina-name: employeeTax
        EmployerTax:
          type: boolean
          x-ballerina-name: employerTax
        TaxAuthorityInstance:
          type: string
          x-ballerina-name: taxAuthorityInstance
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
        TaxAuthority:
          type: string
          x-ballerina-name: taxAuthority
        ResidentCode:
          type: string
          x-ballerina-name: residentCode
        Name:
          allOf:
          - $ref: '#/components/schemas/EmployeePayrollTaxName'
          x-ballerina-name: name
    DeductionPayee:
      type: object
      properties:
        PayeeXRefCode:
          type: string
          x-ballerina-name: payeeXRefCode
        PayeeParameters:
          type: array
          items:
            $ref: '#/components/schemas/DeductionPayeeParameter'
          x-ballerina-name: payeeParameters
        EffectiveEnd:
          type: string
          format: date-time
          x-ballerina-name: effectiveEnd
        PayeeName:
          type: string
          x-ballerina-name: payeeName
        EffectiveStart:
          type: string
          format: date-time
          x-ballerina-name: effectiveStart
        Default:
          type: boolean
          x-ballerina-name: default
    EmployeeCANFederalTaxCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeCANFederalTax'
          x-ballerina-name: items
    EmployeePayrollTaxParameterElementName:
      type: object
      properties:
        LongName:
          type: string
          x-ballerina-name: longName
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        ShortName:
          type: string
          x-ballerina-name: shortName
    PaginatedPayloadIEnumerableEmployeeWorkLocationOverride:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Paging:
          allOf:
          - $ref: '#/components/schemas/Paging'
          x-ballerina-name: paging
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeWorkLocationOverride'
          x-ballerina-name: data
    PayloadIEnumerableEmployeeEmergencyContact:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeEmergencyContact'
          x-ballerina-name: data
    PayloadIEnumerableKpiData:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/KpiData'
          x-ballerina-name: data
    CandidateRTWDocumentGenericError:
      type: object
      properties:
        Message:
          type: string
          x-ballerina-name: message
        Code:
          type: string
          x-ballerina-name: code
    EmployeeCompensation:
      type: object
      properties:
        NormalSemiMonthlyHoursBottom:
          type: number
          format: double
          x-ballerina-name: normalSemiMonthlyHoursBottom
        VacationRate:
          type: number
          format: double
          x-ballerina-name: vacationRate
        PayPolicy:
          allOf:
          - $ref: '#/components/schemas/PayPolicy'
          x-ballerina-name: payPolicy
        ChangeValue:
          type: number
          format: double
          x-ballerina-name: changeValue
        NormalSemiMonthlyHoursTop:
          type: number
          format: double
          x-ballerina-name: normalSemiMonthlyHoursTop
        PreviousBaseRate:
          type: number
          format: double
          x-ballerina-name: previousBaseRate
        EmploymentStatusReason:
          allOf:
          - $ref: '#/components/schemas/EmploymentStatusReason'
          x-ballerina-name: employmentStatusReason
        BaseRate:
          type: number
          format: double
          x-ballerina-name: baseRate
        AverageDailyHours:
          type: number
          format: double
          x-ballerina-name: averageDailyHours
        EffectiveEnd:
          type: string
          format: date-time
          x-ballerina-name: effectiveEnd
        NormalWeeklyHours:
          type: number
          format: double
          x-ballerina-name: normalWeeklyHours
        ControlRate:
          type: number
          format: double
          x-ballerina-name: controlRate
        PreviousBaseSalary:
          type: number
          format: double
          x-ballerina-name: previousBaseSalary
        EffectiveStart:
          type: string
          format: date-time
          x-ballerina-name: effectiveStart
        AverageOvertimeRate:
          type: number
          format: double
          x-ballerina-name: averageOvertimeRate
        ChangePercent:
          type: number
          format: double
          x-ballerina-name: changePercent
        PayGrade:
          allOf:
          - $ref: '#/components/schemas/PayGrade'
          x-ballerina-name: payGrade
        BaseSalary:
          type: number
          format: double
          x-ballerina-name: baseSalary
        ControlSalary:
          type: number
          format: double
          x-ballerina-name: controlSalary
        MaximumSalary:
          type: number
          format: double
          x-ballerina-name: maximumSalary
        MaximumRate:
          type: number
          format: double
          x-ballerina-name: maximumRate
        PayGroup:
          allOf:
          - $ref: '#/components/schemas/PayGroup'
          x-ballerina-name: payGroup
        PayClass:
          allOf:
          - $ref: '#/components/schemas/PayClass'
          x-ballerina-name: payClass
        EmployeeNumber:
          type: string
          x-ballerina-name: employeeNumber
        BaseRateManuallySet:
          type: boolean
          x-ballerina-name: baseRateManuallySet
        AlternateRate:
          type: number
          format: double
          x-ballerina-name: alternateRate
        PayType:
          allOf:
          - $ref: '#/components/schemas/PayType'
          x-ballerina-name: payType
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
        SalaryMidPoint:
          type: number
          format: double
          x-ballerina-name: salaryMidPoint
        MinimumRate:
          type: number
          format: double
          x-ballerina-name: minimumRate
        DailyRate:
          type: number
          format: double
          x-ballerina-name: dailyRate
        MinimumSalary:
          type: number
          format: double
          x-ballerina-name: minimumSalary
        LastPayEditDate:
          type: string
          format: date-time
          x-ballerina-name: lastPayEditDate
        RateMidPoint:
          type: number
          format: double
          x-ballerina-name: rateMidPoint
        RatePolicy:
          allOf:
          - $ref: '#/components/schemas/JobStepPolicy'
          x-ballerina-name: ratePolicy
        CompRatio:
          type: number
          format: double
          x-ballerina-name: compRatio
    EmploymentAgreementSettlement:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    EmployeeHRIncidentCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeHRIncident'
          x-ballerina-name: items
    DocMgmtSecurityGroupUserMapCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeDocumentManagementSecurityGroup'
          x-ballerina-name: items
    EmployeeDependentsBeneficiariesAddressCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeDependentsBeneficiariesAddress'
          x-ballerina-name: items
    EmploymentStatusGroup:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    RelationshipType:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    AnalyticsReportFilterMetadata:
      type: object
      properties:
        Operator:
          type: string
          description: "Operator type of the parameter, such as =, &lt;, &gt;=, etc...\r\
            \nNot all parameters have operator type.\r\nFor example, SQL Parameters\
            \ don't have operators"
          x-ballerina-name: operator
        Description:
          type: string
          description: "Description of the Parameter.\r\nThe description will be localized,\
            \ based on the Session Culture"
          x-ballerina-name: description
        IsRequired:
          type: boolean
          description: True if a value needs to be supplied
          x-ballerina-name: isRequired
        Value:
          type: string
          description: "Value that will be used.\r\nReference values should contain\
            \ Ids and be comma separated. E.g \"1,2,3\""
          x-ballerina-name: value
        AvailableValues:
          type: array
          description: List of available values a parameter can have
          items:
            $ref: '#/components/schemas/AnalyticsListValue'
          x-ballerina-name: availableValues
        DataType:
          type: string
          description: Data type of the parameter
          x-ballerina-name: dataType
        Editable:
          type: boolean
          description: True if the operator is editable
          x-ballerina-name: editable
        Sequence:
          type: integer
          description: Sequence of the filter
          format: int32
          x-ballerina-name: sequence
        Name:
          type: string
          description: Name of the parameter
          x-ballerina-name: name
      description: "Report meta data that defines report parameters.\r\nParameter\
        \ values are supplied by the end-user for execution.\r\nAll parameters must\
        \ be supplied during execution.\r\nNot all Parameters have default value"
    EVerify:
      type: object
      properties:
        EVerifyStatusDate:
          type: string
          format: date-time
          x-ballerina-name: eVerifyStatusDate
        EVerifyCaseNumber:
          type: string
          x-ballerina-name: eVerifyCaseNumber
        EVerifyStatus:
          type: string
          x-ballerina-name: eVerifyStatus
        EVerifyStatusDesc:
          type: string
          x-ballerina-name: eVerifyStatusDesc
    PayloadIEnumerablePlanLaborStandardDriver:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/PlanLaborStandardDriver'
          x-ballerina-name: data
    BenefitsDFLinkExportDependentElectionDetail:
      type: object
      properties:
        CoverageEndDate:
          type: string
          format: date-time
          x-ballerina-name: coverageEndDate
        EffectiveEndDate:
          type: string
          format: date-time
          x-ballerina-name: effectiveEndDate
        PlanCode:
          type: string
          x-ballerina-name: planCode
        PolicyNumber:
          type: string
          x-ballerina-name: policyNumber
        EmployeeElectionId:
          type: integer
          format: int32
          x-ballerina-name: employeeElectionId
        OptionCode:
          type: string
          x-ballerina-name: optionCode
        CareProviderDetails:
          type: array
          items:
            $ref: '#/components/schemas/BenefitsDFLinkExportCareProvider'
          x-ballerina-name: careProviderDetails
        PlanTypeCode:
          type: string
          x-ballerina-name: planTypeCode
        PlanXrefCode:
          type: string
          x-ballerina-name: planXrefCode
        UniqueDependentId:
          type: integer
          format: int32
          x-ballerina-name: uniqueDependentId
        RecordType:
          type: string
          x-ballerina-name: recordType
        PlanSubTypeCode:
          type: string
          x-ballerina-name: planSubTypeCode
        CoverageStartDate:
          type: string
          format: date-time
          x-ballerina-name: coverageStartDate
        EffectiveStartDate:
          type: string
          format: date-time
          x-ballerina-name: effectiveStartDate
        PlanStartDate:
          type: string
          format: date-time
          x-ballerina-name: planStartDate
    HRConfigurationEntity:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
    LaborMetricType:
      type: object
      properties:
        Description:
          type: string
          x-ballerina-name: description
        LaborMetricTypeXRefCode:
          type: string
          x-ballerina-name: laborMetricTypeXRefCode
        ClockTransferCode:
          type: string
          x-ballerina-name: clockTransferCode
        Name:
          type: string
          x-ballerina-name: name
    EmployeeConfidentialIdentification:
      type: object
      properties:
        ConfidentialIdentificationType:
          allOf:
          - $ref: '#/components/schemas/ConfidentialIdentificationType'
          x-ballerina-name: confidentialIdentificationType
        EffectiveEnd:
          type: string
          format: date-time
          x-ballerina-name: effectiveEnd
        ExpiryDate:
          type: string
          format: date-time
          x-ballerina-name: expiryDate
        RTWDocReviewOn:
          type: string
          format: date-time
          x-ballerina-name: rTWDocReviewOn
        EffectiveStart:
          type: string
          format: date-time
          x-ballerina-name: effectiveStart
        RTWDocReview:
          type: string
          x-ballerina-name: rTWDocReview
        IssueDate:
          type: string
          format: date-time
          x-ballerina-name: issueDate
        UseForRTW:
          type: boolean
          x-ballerina-name: useForRTW
        CountryCode:
          type: string
          x-ballerina-name: countryCode
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
        PlaceOfIssue:
          type: string
          x-ballerina-name: placeOfIssue
        IDNumber:
          type: string
          x-ballerina-name: iDNumber
    EmployeeShortTimeWork:
      type: object
      properties:
        EmployeeShortTimeWorkId:
          type: integer
          format: int32
          x-ballerina-name: employeeShortTimeWorkId
        EffectiveEnd:
          type: string
          format: date-time
          x-ballerina-name: effectiveEnd
        IncreasedRate:
          type: boolean
          x-ballerina-name: increasedRate
        Consent:
          type: boolean
          x-ballerina-name: consent
        EffectiveStart:
          type: string
          format: date-time
          x-ballerina-name: effectiveStart
        DEUSTWParticipationReason:
          allOf:
          - $ref: '#/components/schemas/DEUSTWParticipationReason'
          x-ballerina-name: dEUSTWParticipationReason
        LegalEntityDEUShortTimeWork:
          allOf:
          - $ref: '#/components/schemas/LegalEntityDEUShortTimeWork'
          x-ballerina-name: legalEntityDEUShortTimeWork
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    DisabilityWorkingTime:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        DisabilityWorkingTimeId:
          type: integer
          format: int32
          x-ballerina-name: disabilityWorkingTimeId
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    FLSAStatus:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    PayloadPayRunStatus:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          allOf:
          - $ref: '#/components/schemas/PayRunStatus'
          x-ballerina-name: data
    ProjectAssignmentType:
      type: object
      properties:
        XrefCodes:
          type: array
          items:
            type: string
          x-ballerina-name: xrefCodes
        IsAssignedAll:
          type: boolean
          x-ballerina-name: isAssignedAll
    SuperannuationContributionType:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    EmployeeIRLTaxEWSS:
      type: object
      properties:
        EffectiveEnd:
          type: string
          format: date-time
          x-ballerina-name: effectiveEnd
        LegalEntity:
          allOf:
          - $ref: '#/components/schemas/LegalEntity'
          x-ballerina-name: legalEntity
        LegalEntityXrefCode:
          type: string
          x-ballerina-name: legalEntityXrefCode
        IsEWSSEligible:
          type: boolean
          x-ballerina-name: isEWSSEligible
        EffectiveStart:
          type: string
          format: date-time
          x-ballerina-name: effectiveStart
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    PersonManagementHistory:
      type: object
      properties:
        Policy:
          type: array
          items:
            type: string
          x-ballerina-name: policy
        ValidationMessage:
          allOf:
          - $ref: '#/components/schemas/Validation'
          x-ballerina-name: validationMessage
        ApprovedBy:
          type: string
          x-ballerina-name: approvedBy
        TerminationDate:
          type: string
          format: date-time
          x-ballerina-name: terminationDate
        PersonType:
          type: string
          x-ballerina-name: personType
        RemovalAction:
          type: string
          x-ballerina-name: removalAction
        PurgeDate:
          type: string
          format: date-time
          x-ballerina-name: purgeDate
        Name:
          type: string
          x-ballerina-name: name
    Payee:
      type: object
      properties:
        OperatingCountryName:
          type: string
          x-ballerina-name: operatingCountryName
        Description:
          type: string
          x-ballerina-name: description
        PayeeCategoryName:
          type: string
          x-ballerina-name: payeeCategoryName
        BusinessNumber:
          type: string
          x-ballerina-name: businessNumber
        DeductionPayee:
          type: boolean
          x-ballerina-name: deductionPayee
        Address:
          allOf:
          - $ref: '#/components/schemas/PayeeAddress'
          x-ballerina-name: address
        PayeeCategoryXRefCode:
          type: string
          x-ballerina-name: payeeCategoryXRefCode
        HealthCareProvider:
          allOf:
          - $ref: '#/components/schemas/PayeeHealthCareProvider'
          x-ballerina-name: healthCareProvider
        Name:
          type: string
          x-ballerina-name: name
        PayeeParameters:
          type: array
          items:
            $ref: '#/components/schemas/PayeeParameter'
          x-ballerina-name: payeeParameters
        Active:
          type: boolean
          x-ballerina-name: active
        StateCoverage:
          type: array
          items:
            $ref: '#/components/schemas/PayeeStateCoverage'
          x-ballerina-name: stateCoverage
        SystemPayee:
          type: boolean
          x-ballerina-name: systemPayee
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        UniqueSuperIdentifier:
          type: string
          x-ballerina-name: uniqueSuperIdentifier
        EarningPayee:
          type: boolean
          x-ballerina-name: earningPayee
        PaymentMethod:
          allOf:
          - $ref: '#/components/schemas/PayeePaymentMethod'
          x-ballerina-name: paymentMethod
        ElectronicServiceAddress:
          type: string
          x-ballerina-name: electronicServiceAddress
        OperatingCountryCode:
          type: string
          x-ballerina-name: operatingCountryCode
    OperatingHoursExceptionDay:
      type: object
      properties:
        ExceptionStartDateTime:
          type: string
          format: date-time
          x-ballerina-name: exceptionStartDateTime
        ExceptionDescription:
          type: string
          x-ballerina-name: exceptionDescription
        IsClosed:
          type: string
          format: date-time
          x-ballerina-name: isClosed
        OperatingHoursRecurExceptionDetails:
          allOf:
          - $ref: '#/components/schemas/OperatingHoursRecurExceptionDetails'
          x-ballerina-name: operatingHoursRecurExceptionDetails
        ExceptionEndDateTime:
          type: string
          format: date-time
          x-ballerina-name: exceptionEndDateTime
        ExceptionName:
          type: string
          x-ballerina-name: exceptionName
    PFRatingScale:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    PositionAssignment:
      type: object
      properties:
        EffectiveEnd:
          type: string
          format: date-time
          x-ballerina-name: effectiveEnd
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        BudgetedHeadCount:
          type: number
          format: double
          x-ballerina-name: budgetedHeadCount
        EffectiveStart:
          type: string
          format: date-time
          x-ballerina-name: effectiveStart
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
        Location:
          allOf:
          - $ref: '#/components/schemas/Location'
          x-ballerina-name: location
    OperatingHoursDayPattern:
      type: object
      properties:
        SaturdayEndTime:
          type: string
          format: date-time
          x-ballerina-name: saturdayEndTime
        ThursdayStartTime:
          type: string
          format: date-time
          x-ballerina-name: thursdayStartTime
        ThursdayEndTime:
          type: string
          format: date-time
          x-ballerina-name: thursdayEndTime
        SundayStartTime:
          type: string
          format: date-time
          x-ballerina-name: sundayStartTime
        TuesdayEndTime:
          type: string
          format: date-time
          x-ballerina-name: tuesdayEndTime
        TuesdayStartTime:
          type: string
          format: date-time
          x-ballerina-name: tuesdayStartTime
        WednesdayEndTime:
          type: string
          format: date-time
          x-ballerina-name: wednesdayEndTime
        SundayEndTime:
          type: string
          format: date-time
          x-ballerina-name: sundayEndTime
        SaturdayStartTime:
          type: string
          format: date-time
          x-ballerina-name: saturdayStartTime
        MondayEndTime:
          type: string
          format: date-time
          x-ballerina-name: mondayEndTime
        WednesdayStartTime:
          type: string
          format: date-time
          x-ballerina-name: wednesdayStartTime
        FridayStartTime:
          type: string
          format: date-time
          x-ballerina-name: fridayStartTime
        FridayEndTime:
          type: string
          format: date-time
          x-ballerina-name: fridayEndTime
        MondayStartTime:
          type: string
          format: date-time
          x-ballerina-name: mondayStartTime
    PayloadListEmployee:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/Employee'
          x-ballerina-name: data
    LegalEntityMasterBankAccountSetting:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    EmployeeEEO:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    EmployeeSkillCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeSkill'
          x-ballerina-name: items
    Segment:
      type: object
      properties:
        OrgUnitXRefCode:
          type: string
          x-ballerina-name: orgUnitXRefCode
        PayAdjCodeXRefCode:
          type: string
          x-ballerina-name: payAdjCodeXRefCode
        Comment:
          type: string
          x-ballerina-name: comment
        JobXRefCode:
          type: string
          x-ballerina-name: jobXRefCode
        TimeEnd:
          type: string
          format: date-time
          x-ballerina-name: timeEnd
        TimeStart:
          type: string
          format: date-time
          x-ballerina-name: timeStart
        PositionXRefCode:
          type: string
          x-ballerina-name: positionXRefCode
        OrgLocationTypeXRefCode:
          type: string
          x-ballerina-name: orgLocationTypeXRefCode
        ProjectXRefCode:
          type: string
          x-ballerina-name: projectXRefCode
        DocketXRefCode:
          type: string
          x-ballerina-name: docketXRefCode
        LaborMetrics:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeScheduleSegmentLaborMetric'
          x-ballerina-name: laborMetrics
        NetHours:
          type: number
          format: double
          x-ballerina-name: netHours
        DepartmentXRefCode:
          type: string
          x-ballerina-name: departmentXRefCode
    PaginatedPayloadIEnumerableEmployeeRawPunch:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Paging:
          allOf:
          - $ref: '#/components/schemas/Paging'
          x-ballerina-name: paging
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeRawPunch'
          x-ballerina-name: data
    Skills:
      type: object
      properties:
        IsMandatory:
          type: boolean
          x-ballerina-name: isMandatory
        SkillLevelXRefCode:
          type: string
          x-ballerina-name: skillLevelXRefCode
        SkillXRefCode:
          type: string
          x-ballerina-name: skillXRefCode
    EmployeeEmploymentType:
      type: object
      properties:
        TaxPayerId:
          type: string
          x-ballerina-name: taxPayerId
        EffectiveEnd:
          type: string
          format: date-time
          x-ballerina-name: effectiveEnd
        GamingProfitsDistributions:
          type: boolean
          x-ballerina-name: gamingProfitsDistributions
        PensionType:
          allOf:
          - $ref: '#/components/schemas/PensionTypeConfiguration'
          x-ballerina-name: pensionType
        EffectiveStart:
          type: string
          format: date-time
          x-ballerina-name: effectiveStart
        ContractorTaxFormType:
          type: string
          x-ballerina-name: contractorTaxFormType
        IR35:
          type: boolean
          x-ballerina-name: iR35
        EmploymentType:
          allOf:
          - $ref: '#/components/schemas/EmploymentTypeConfig'
          x-ballerina-name: employmentType
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
        DBAName:
          type: string
          x-ballerina-name: dBAName
    PayloadIEnumerableEmployeeEmploymentStatus:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeEmploymentStatus'
          x-ballerina-name: data
    QuestionsInResponse:
      type: object
      properties:
        Answers:
          type: array
          items:
            $ref: '#/components/schemas/QuestionAnswers'
          x-ballerina-name: answers
        Questions:
          type: array
          items:
            $ref: '#/components/schemas/QuestionModel'
          x-ballerina-name: questions
        Url:
          type: string
          x-ballerina-name: url
        RetrievedOnMillis:
          type: integer
          format: int64
          x-ballerina-name: retrievedOnMillis
    DisabilityEvidenceType:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        DisabilityEvidenceTypeId:
          type: integer
          format: int32
          x-ballerina-name: disabilityEvidenceTypeId
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    ConfidentialIdentificationType:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    Patents:
      type: object
      properties:
        _Total:
          type: integer
          format: int32
          x-ballerina-name: total
        Values:
          type: array
          items:
            $ref: '#/components/schemas/PatentDetails'
          x-ballerina-name: values
    Zone:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    WorkPatternShiftType:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    EmergencyContactPersonAddressCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmergencyContactPersonAddress'
          x-ballerina-name: items
    PayloadBoolean:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: boolean
          x-ballerina-name: data
    EmployeeOccupationalPension:
      type: object
      properties:
        PensionProviderXrefCode:
          type: string
          x-ballerina-name: pensionProviderXrefCode
        PensionStartDate:
          type: string
          format: date-time
          x-ballerina-name: pensionStartDate
        PaymentCompletedBy:
          type: string
          x-ballerina-name: paymentCompletedBy
        MembershipNumber:
          type: string
          x-ballerina-name: membershipNumber
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    EmployeeVolunteerListCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeVolunteerList'
          x-ballerina-name: items
    OrgUnitLegalEntity:
      type: object
      properties:
        LegalEntity:
          allOf:
          - $ref: '#/components/schemas/HRConfigurationEntity'
          x-ballerina-name: legalEntity
        EffectiveEnd:
          type: string
          format: date-time
          x-ballerina-name: effectiveEnd
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        EffectiveStart:
          type: string
          format: date-time
          x-ballerina-name: effectiveStart
        ShortName:
          type: string
          x-ballerina-name: shortName
        LegalEntityWorkSiteState:
          allOf:
          - $ref: '#/components/schemas/LegalEntityWorkSiteState'
          x-ballerina-name: legalEntityWorkSiteState
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
        OverrideCustomerFundingIdentifier:
          allOf:
          - $ref: '#/components/schemas/LegalEntityMasterBankAccountSetting'
          x-ballerina-name: overrideCustomerFundingIdentifier
    PayloadLegacyLaborMetricCodes:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          allOf:
          - $ref: '#/components/schemas/LegacyLaborMetricCodes'
          x-ballerina-name: data
    Response:
      type: object
      properties:
        Identifier:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
          x-ballerina-name: identifier
    PaginatedPayloadIEnumerableBackgroundJobLog:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Paging:
          allOf:
          - $ref: '#/components/schemas/Paging'
          x-ballerina-name: paging
        Data:
          type: array
          items:
            $ref: '#/components/schemas/BackgroundJobLog'
          x-ballerina-name: data
    ArchiveDocument:
      type: object
      properties:
        CultureId:
          type: integer
          format: int32
          x-ballerina-name: cultureId
        FileName:
          type: string
          x-ballerina-name: fileName
        DocumentType:
          type: string
          x-ballerina-name: documentType
        DocumentGroup:
          type: string
          x-ballerina-name: documentGroup
        Title:
          type: string
          x-ballerina-name: title
        Contents:
          type: string
          format: byte
          x-ballerina-name: contents
        PageCount:
          type: integer
          format: int32
          x-ballerina-name: pageCount
        ReportAlternateTitle:
          type: string
          x-ballerina-name: reportAlternateTitle
        UserId:
          type: integer
          format: int32
          x-ballerina-name: userId
        EmployeeXRefCode:
          type: string
          x-ballerina-name: employeeXRefCode
        IsAvailableOnCloud:
          type: boolean
          x-ballerina-name: isAvailableOnCloud
        PublishDateTime:
          type: string
          format: date-time
          x-ballerina-name: publishDateTime
        SizeBytes:
          type: integer
          format: int64
          x-ballerina-name: sizeBytes
        SourceReportUniqueId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
          x-ballerina-name: sourceReportUniqueId
        Link:
          type: string
          x-ballerina-name: link
    PredefinedValue:
      type: object
      properties:
        XRefCode:
          type: string
          readOnly: true
          x-ballerina-name: xRefCode
        FriendlyName:
          type: string
          readOnly: true
          x-ballerina-name: friendlyName
    PayloadIEnumerableEmployeeCANFederalTax:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeCANFederalTax'
          x-ballerina-name: data
    QuestionModel:
      type: object
      properties:
        question:
          type: string
        max:
          type: string
        format:
          type: string
        HTML:
          type: boolean
          x-ballerina-name: hTML
        type:
          type: string
        required:
          type: boolean
        hierarchicalOptions:
          type: array
          items:
            $ref: '#/components/schemas/QuestionHierarchicalOptionModel'
        condition:
          $ref: '#/components/schemas/QuestionConditionModel'
        min:
          type: string
        options:
          type: array
          items:
            $ref: '#/components/schemas/QuestionOptionModel'
        limit:
          type: integer
          format: int32
        fontSize:
          type: string
        id:
          type: string
        text:
          type: string
    KpiTargetPatternDetail:
      type: object
      properties:
        Value:
          type: number
          format: double
          x-ballerina-name: value
        PatternIndex:
          type: integer
          format: int32
          x-ballerina-name: patternIndex
    EmployeeDeductionParameter:
      type: object
      properties:
        DeductionParameter:
          allOf:
          - $ref: '#/components/schemas/DeductionParameter'
          x-ballerina-name: deductionParameter
        Value:
          type: number
          format: double
          x-ballerina-name: value
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
        PayGroupValue:
          type: number
          format: double
          x-ballerina-name: payGroupValue
    LMSEmployeeCertificationCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/LMSEmployeeCertification'
          x-ballerina-name: items
    WorkContractPremiumPolicy:
      type: object
      properties:
        XRefCode:
          type: string
          x-ballerina-name: xRefCode
        LongName:
          type: string
          x-ballerina-name: longName
        ShortName:
          type: string
          x-ballerina-name: shortName
        LastModifiedTimestamp:
          type: string
          format: date-time
          x-ballerina-name: lastModifiedTimestamp
    PayloadIEnumerableEmployeeIRLTaxEWSS:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeIRLTaxEWSS'
          x-ballerina-name: data
    PayloadIEnumerableEmployeeUKStudentLoan:
      type: object
      properties:
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
          x-ballerina-name: processResults
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeUKStudentLoan'
          x-ballerina-name: data
  securitySchemes:
    basic:
      type: http
      description: Basic HTTP Authentication
      scheme: basic
